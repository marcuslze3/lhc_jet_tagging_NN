// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_array_array_ap_fixed_16_6_5_3_0_32u_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_stream_V_data_0_V_dout,
        data_stream_V_data_0_V_empty_n,
        data_stream_V_data_0_V_read,
        data_stream_V_data_1_V_dout,
        data_stream_V_data_1_V_empty_n,
        data_stream_V_data_1_V_read,
        data_stream_V_data_2_V_dout,
        data_stream_V_data_2_V_empty_n,
        data_stream_V_data_2_V_read,
        data_stream_V_data_3_V_dout,
        data_stream_V_data_3_V_empty_n,
        data_stream_V_data_3_V_read,
        data_stream_V_data_4_V_dout,
        data_stream_V_data_4_V_empty_n,
        data_stream_V_data_4_V_read,
        data_stream_V_data_5_V_dout,
        data_stream_V_data_5_V_empty_n,
        data_stream_V_data_5_V_read,
        data_stream_V_data_6_V_dout,
        data_stream_V_data_6_V_empty_n,
        data_stream_V_data_6_V_read,
        data_stream_V_data_7_V_dout,
        data_stream_V_data_7_V_empty_n,
        data_stream_V_data_7_V_read,
        data_stream_V_data_8_V_dout,
        data_stream_V_data_8_V_empty_n,
        data_stream_V_data_8_V_read,
        data_stream_V_data_9_V_dout,
        data_stream_V_data_9_V_empty_n,
        data_stream_V_data_9_V_read,
        data_stream_V_data_10_V_dout,
        data_stream_V_data_10_V_empty_n,
        data_stream_V_data_10_V_read,
        data_stream_V_data_11_V_dout,
        data_stream_V_data_11_V_empty_n,
        data_stream_V_data_11_V_read,
        data_stream_V_data_12_V_dout,
        data_stream_V_data_12_V_empty_n,
        data_stream_V_data_12_V_read,
        data_stream_V_data_13_V_dout,
        data_stream_V_data_13_V_empty_n,
        data_stream_V_data_13_V_read,
        data_stream_V_data_14_V_dout,
        data_stream_V_data_14_V_empty_n,
        data_stream_V_data_14_V_read,
        data_stream_V_data_15_V_dout,
        data_stream_V_data_15_V_empty_n,
        data_stream_V_data_15_V_read,
        data_stream_V_data_16_V_dout,
        data_stream_V_data_16_V_empty_n,
        data_stream_V_data_16_V_read,
        data_stream_V_data_17_V_dout,
        data_stream_V_data_17_V_empty_n,
        data_stream_V_data_17_V_read,
        data_stream_V_data_18_V_dout,
        data_stream_V_data_18_V_empty_n,
        data_stream_V_data_18_V_read,
        data_stream_V_data_19_V_dout,
        data_stream_V_data_19_V_empty_n,
        data_stream_V_data_19_V_read,
        data_stream_V_data_20_V_dout,
        data_stream_V_data_20_V_empty_n,
        data_stream_V_data_20_V_read,
        data_stream_V_data_21_V_dout,
        data_stream_V_data_21_V_empty_n,
        data_stream_V_data_21_V_read,
        data_stream_V_data_22_V_dout,
        data_stream_V_data_22_V_empty_n,
        data_stream_V_data_22_V_read,
        data_stream_V_data_23_V_dout,
        data_stream_V_data_23_V_empty_n,
        data_stream_V_data_23_V_read,
        data_stream_V_data_24_V_dout,
        data_stream_V_data_24_V_empty_n,
        data_stream_V_data_24_V_read,
        data_stream_V_data_25_V_dout,
        data_stream_V_data_25_V_empty_n,
        data_stream_V_data_25_V_read,
        data_stream_V_data_26_V_dout,
        data_stream_V_data_26_V_empty_n,
        data_stream_V_data_26_V_read,
        data_stream_V_data_27_V_dout,
        data_stream_V_data_27_V_empty_n,
        data_stream_V_data_27_V_read,
        data_stream_V_data_28_V_dout,
        data_stream_V_data_28_V_empty_n,
        data_stream_V_data_28_V_read,
        data_stream_V_data_29_V_dout,
        data_stream_V_data_29_V_empty_n,
        data_stream_V_data_29_V_read,
        data_stream_V_data_30_V_dout,
        data_stream_V_data_30_V_empty_n,
        data_stream_V_data_30_V_read,
        data_stream_V_data_31_V_dout,
        data_stream_V_data_31_V_empty_n,
        data_stream_V_data_31_V_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_4_V_din,
        res_stream_V_data_4_V_full_n,
        res_stream_V_data_4_V_write,
        res_stream_V_data_5_V_din,
        res_stream_V_data_5_V_full_n,
        res_stream_V_data_5_V_write,
        res_stream_V_data_6_V_din,
        res_stream_V_data_6_V_full_n,
        res_stream_V_data_6_V_write,
        res_stream_V_data_7_V_din,
        res_stream_V_data_7_V_full_n,
        res_stream_V_data_7_V_write,
        res_stream_V_data_8_V_din,
        res_stream_V_data_8_V_full_n,
        res_stream_V_data_8_V_write,
        res_stream_V_data_9_V_din,
        res_stream_V_data_9_V_full_n,
        res_stream_V_data_9_V_write,
        res_stream_V_data_10_V_din,
        res_stream_V_data_10_V_full_n,
        res_stream_V_data_10_V_write,
        res_stream_V_data_11_V_din,
        res_stream_V_data_11_V_full_n,
        res_stream_V_data_11_V_write,
        res_stream_V_data_12_V_din,
        res_stream_V_data_12_V_full_n,
        res_stream_V_data_12_V_write,
        res_stream_V_data_13_V_din,
        res_stream_V_data_13_V_full_n,
        res_stream_V_data_13_V_write,
        res_stream_V_data_14_V_din,
        res_stream_V_data_14_V_full_n,
        res_stream_V_data_14_V_write,
        res_stream_V_data_15_V_din,
        res_stream_V_data_15_V_full_n,
        res_stream_V_data_15_V_write,
        res_stream_V_data_16_V_din,
        res_stream_V_data_16_V_full_n,
        res_stream_V_data_16_V_write,
        res_stream_V_data_17_V_din,
        res_stream_V_data_17_V_full_n,
        res_stream_V_data_17_V_write,
        res_stream_V_data_18_V_din,
        res_stream_V_data_18_V_full_n,
        res_stream_V_data_18_V_write,
        res_stream_V_data_19_V_din,
        res_stream_V_data_19_V_full_n,
        res_stream_V_data_19_V_write,
        res_stream_V_data_20_V_din,
        res_stream_V_data_20_V_full_n,
        res_stream_V_data_20_V_write,
        res_stream_V_data_21_V_din,
        res_stream_V_data_21_V_full_n,
        res_stream_V_data_21_V_write,
        res_stream_V_data_22_V_din,
        res_stream_V_data_22_V_full_n,
        res_stream_V_data_22_V_write,
        res_stream_V_data_23_V_din,
        res_stream_V_data_23_V_full_n,
        res_stream_V_data_23_V_write,
        res_stream_V_data_24_V_din,
        res_stream_V_data_24_V_full_n,
        res_stream_V_data_24_V_write,
        res_stream_V_data_25_V_din,
        res_stream_V_data_25_V_full_n,
        res_stream_V_data_25_V_write,
        res_stream_V_data_26_V_din,
        res_stream_V_data_26_V_full_n,
        res_stream_V_data_26_V_write,
        res_stream_V_data_27_V_din,
        res_stream_V_data_27_V_full_n,
        res_stream_V_data_27_V_write,
        res_stream_V_data_28_V_din,
        res_stream_V_data_28_V_full_n,
        res_stream_V_data_28_V_write,
        res_stream_V_data_29_V_din,
        res_stream_V_data_29_V_full_n,
        res_stream_V_data_29_V_write,
        res_stream_V_data_30_V_din,
        res_stream_V_data_30_V_full_n,
        res_stream_V_data_30_V_write,
        res_stream_V_data_31_V_din,
        res_stream_V_data_31_V_full_n,
        res_stream_V_data_31_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [6:0] data_stream_V_data_0_V_dout;
input   data_stream_V_data_0_V_empty_n;
output   data_stream_V_data_0_V_read;
input  [6:0] data_stream_V_data_1_V_dout;
input   data_stream_V_data_1_V_empty_n;
output   data_stream_V_data_1_V_read;
input  [6:0] data_stream_V_data_2_V_dout;
input   data_stream_V_data_2_V_empty_n;
output   data_stream_V_data_2_V_read;
input  [6:0] data_stream_V_data_3_V_dout;
input   data_stream_V_data_3_V_empty_n;
output   data_stream_V_data_3_V_read;
input  [6:0] data_stream_V_data_4_V_dout;
input   data_stream_V_data_4_V_empty_n;
output   data_stream_V_data_4_V_read;
input  [6:0] data_stream_V_data_5_V_dout;
input   data_stream_V_data_5_V_empty_n;
output   data_stream_V_data_5_V_read;
input  [6:0] data_stream_V_data_6_V_dout;
input   data_stream_V_data_6_V_empty_n;
output   data_stream_V_data_6_V_read;
input  [6:0] data_stream_V_data_7_V_dout;
input   data_stream_V_data_7_V_empty_n;
output   data_stream_V_data_7_V_read;
input  [6:0] data_stream_V_data_8_V_dout;
input   data_stream_V_data_8_V_empty_n;
output   data_stream_V_data_8_V_read;
input  [6:0] data_stream_V_data_9_V_dout;
input   data_stream_V_data_9_V_empty_n;
output   data_stream_V_data_9_V_read;
input  [6:0] data_stream_V_data_10_V_dout;
input   data_stream_V_data_10_V_empty_n;
output   data_stream_V_data_10_V_read;
input  [6:0] data_stream_V_data_11_V_dout;
input   data_stream_V_data_11_V_empty_n;
output   data_stream_V_data_11_V_read;
input  [6:0] data_stream_V_data_12_V_dout;
input   data_stream_V_data_12_V_empty_n;
output   data_stream_V_data_12_V_read;
input  [6:0] data_stream_V_data_13_V_dout;
input   data_stream_V_data_13_V_empty_n;
output   data_stream_V_data_13_V_read;
input  [6:0] data_stream_V_data_14_V_dout;
input   data_stream_V_data_14_V_empty_n;
output   data_stream_V_data_14_V_read;
input  [6:0] data_stream_V_data_15_V_dout;
input   data_stream_V_data_15_V_empty_n;
output   data_stream_V_data_15_V_read;
input  [6:0] data_stream_V_data_16_V_dout;
input   data_stream_V_data_16_V_empty_n;
output   data_stream_V_data_16_V_read;
input  [6:0] data_stream_V_data_17_V_dout;
input   data_stream_V_data_17_V_empty_n;
output   data_stream_V_data_17_V_read;
input  [6:0] data_stream_V_data_18_V_dout;
input   data_stream_V_data_18_V_empty_n;
output   data_stream_V_data_18_V_read;
input  [6:0] data_stream_V_data_19_V_dout;
input   data_stream_V_data_19_V_empty_n;
output   data_stream_V_data_19_V_read;
input  [6:0] data_stream_V_data_20_V_dout;
input   data_stream_V_data_20_V_empty_n;
output   data_stream_V_data_20_V_read;
input  [6:0] data_stream_V_data_21_V_dout;
input   data_stream_V_data_21_V_empty_n;
output   data_stream_V_data_21_V_read;
input  [6:0] data_stream_V_data_22_V_dout;
input   data_stream_V_data_22_V_empty_n;
output   data_stream_V_data_22_V_read;
input  [6:0] data_stream_V_data_23_V_dout;
input   data_stream_V_data_23_V_empty_n;
output   data_stream_V_data_23_V_read;
input  [6:0] data_stream_V_data_24_V_dout;
input   data_stream_V_data_24_V_empty_n;
output   data_stream_V_data_24_V_read;
input  [6:0] data_stream_V_data_25_V_dout;
input   data_stream_V_data_25_V_empty_n;
output   data_stream_V_data_25_V_read;
input  [6:0] data_stream_V_data_26_V_dout;
input   data_stream_V_data_26_V_empty_n;
output   data_stream_V_data_26_V_read;
input  [6:0] data_stream_V_data_27_V_dout;
input   data_stream_V_data_27_V_empty_n;
output   data_stream_V_data_27_V_read;
input  [6:0] data_stream_V_data_28_V_dout;
input   data_stream_V_data_28_V_empty_n;
output   data_stream_V_data_28_V_read;
input  [6:0] data_stream_V_data_29_V_dout;
input   data_stream_V_data_29_V_empty_n;
output   data_stream_V_data_29_V_read;
input  [6:0] data_stream_V_data_30_V_dout;
input   data_stream_V_data_30_V_empty_n;
output   data_stream_V_data_30_V_read;
input  [6:0] data_stream_V_data_31_V_dout;
input   data_stream_V_data_31_V_empty_n;
output   data_stream_V_data_31_V_read;
output  [15:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [15:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [15:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [15:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output  [15:0] res_stream_V_data_4_V_din;
input   res_stream_V_data_4_V_full_n;
output   res_stream_V_data_4_V_write;
output  [15:0] res_stream_V_data_5_V_din;
input   res_stream_V_data_5_V_full_n;
output   res_stream_V_data_5_V_write;
output  [15:0] res_stream_V_data_6_V_din;
input   res_stream_V_data_6_V_full_n;
output   res_stream_V_data_6_V_write;
output  [15:0] res_stream_V_data_7_V_din;
input   res_stream_V_data_7_V_full_n;
output   res_stream_V_data_7_V_write;
output  [15:0] res_stream_V_data_8_V_din;
input   res_stream_V_data_8_V_full_n;
output   res_stream_V_data_8_V_write;
output  [15:0] res_stream_V_data_9_V_din;
input   res_stream_V_data_9_V_full_n;
output   res_stream_V_data_9_V_write;
output  [15:0] res_stream_V_data_10_V_din;
input   res_stream_V_data_10_V_full_n;
output   res_stream_V_data_10_V_write;
output  [15:0] res_stream_V_data_11_V_din;
input   res_stream_V_data_11_V_full_n;
output   res_stream_V_data_11_V_write;
output  [15:0] res_stream_V_data_12_V_din;
input   res_stream_V_data_12_V_full_n;
output   res_stream_V_data_12_V_write;
output  [15:0] res_stream_V_data_13_V_din;
input   res_stream_V_data_13_V_full_n;
output   res_stream_V_data_13_V_write;
output  [15:0] res_stream_V_data_14_V_din;
input   res_stream_V_data_14_V_full_n;
output   res_stream_V_data_14_V_write;
output  [15:0] res_stream_V_data_15_V_din;
input   res_stream_V_data_15_V_full_n;
output   res_stream_V_data_15_V_write;
output  [15:0] res_stream_V_data_16_V_din;
input   res_stream_V_data_16_V_full_n;
output   res_stream_V_data_16_V_write;
output  [15:0] res_stream_V_data_17_V_din;
input   res_stream_V_data_17_V_full_n;
output   res_stream_V_data_17_V_write;
output  [15:0] res_stream_V_data_18_V_din;
input   res_stream_V_data_18_V_full_n;
output   res_stream_V_data_18_V_write;
output  [15:0] res_stream_V_data_19_V_din;
input   res_stream_V_data_19_V_full_n;
output   res_stream_V_data_19_V_write;
output  [15:0] res_stream_V_data_20_V_din;
input   res_stream_V_data_20_V_full_n;
output   res_stream_V_data_20_V_write;
output  [15:0] res_stream_V_data_21_V_din;
input   res_stream_V_data_21_V_full_n;
output   res_stream_V_data_21_V_write;
output  [15:0] res_stream_V_data_22_V_din;
input   res_stream_V_data_22_V_full_n;
output   res_stream_V_data_22_V_write;
output  [15:0] res_stream_V_data_23_V_din;
input   res_stream_V_data_23_V_full_n;
output   res_stream_V_data_23_V_write;
output  [15:0] res_stream_V_data_24_V_din;
input   res_stream_V_data_24_V_full_n;
output   res_stream_V_data_24_V_write;
output  [15:0] res_stream_V_data_25_V_din;
input   res_stream_V_data_25_V_full_n;
output   res_stream_V_data_25_V_write;
output  [15:0] res_stream_V_data_26_V_din;
input   res_stream_V_data_26_V_full_n;
output   res_stream_V_data_26_V_write;
output  [15:0] res_stream_V_data_27_V_din;
input   res_stream_V_data_27_V_full_n;
output   res_stream_V_data_27_V_write;
output  [15:0] res_stream_V_data_28_V_din;
input   res_stream_V_data_28_V_full_n;
output   res_stream_V_data_28_V_write;
output  [15:0] res_stream_V_data_29_V_din;
input   res_stream_V_data_29_V_full_n;
output   res_stream_V_data_29_V_write;
output  [15:0] res_stream_V_data_30_V_din;
input   res_stream_V_data_30_V_full_n;
output   res_stream_V_data_30_V_write;
output  [15:0] res_stream_V_data_31_V_din;
input   res_stream_V_data_31_V_full_n;
output   res_stream_V_data_31_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_stream_V_data_0_V_read;
reg data_stream_V_data_1_V_read;
reg data_stream_V_data_2_V_read;
reg data_stream_V_data_3_V_read;
reg data_stream_V_data_4_V_read;
reg data_stream_V_data_5_V_read;
reg data_stream_V_data_6_V_read;
reg data_stream_V_data_7_V_read;
reg data_stream_V_data_8_V_read;
reg data_stream_V_data_9_V_read;
reg data_stream_V_data_10_V_read;
reg data_stream_V_data_11_V_read;
reg data_stream_V_data_12_V_read;
reg data_stream_V_data_13_V_read;
reg data_stream_V_data_14_V_read;
reg data_stream_V_data_15_V_read;
reg data_stream_V_data_16_V_read;
reg data_stream_V_data_17_V_read;
reg data_stream_V_data_18_V_read;
reg data_stream_V_data_19_V_read;
reg data_stream_V_data_20_V_read;
reg data_stream_V_data_21_V_read;
reg data_stream_V_data_22_V_read;
reg data_stream_V_data_23_V_read;
reg data_stream_V_data_24_V_read;
reg data_stream_V_data_25_V_read;
reg data_stream_V_data_26_V_read;
reg data_stream_V_data_27_V_read;
reg data_stream_V_data_28_V_read;
reg data_stream_V_data_29_V_read;
reg data_stream_V_data_30_V_read;
reg data_stream_V_data_31_V_read;
reg res_stream_V_data_0_V_write;
reg res_stream_V_data_1_V_write;
reg res_stream_V_data_2_V_write;
reg res_stream_V_data_3_V_write;
reg res_stream_V_data_4_V_write;
reg res_stream_V_data_5_V_write;
reg res_stream_V_data_6_V_write;
reg res_stream_V_data_7_V_write;
reg res_stream_V_data_8_V_write;
reg res_stream_V_data_9_V_write;
reg res_stream_V_data_10_V_write;
reg res_stream_V_data_11_V_write;
reg res_stream_V_data_12_V_write;
reg res_stream_V_data_13_V_write;
reg res_stream_V_data_14_V_write;
reg res_stream_V_data_15_V_write;
reg res_stream_V_data_16_V_write;
reg res_stream_V_data_17_V_write;
reg res_stream_V_data_18_V_write;
reg res_stream_V_data_19_V_write;
reg res_stream_V_data_20_V_write;
reg res_stream_V_data_21_V_write;
reg res_stream_V_data_22_V_write;
reg res_stream_V_data_23_V_write;
reg res_stream_V_data_24_V_write;
reg res_stream_V_data_25_V_write;
reg res_stream_V_data_26_V_write;
reg res_stream_V_data_27_V_write;
reg res_stream_V_data_28_V_write;
reg res_stream_V_data_29_V_write;
reg res_stream_V_data_30_V_write;
reg res_stream_V_data_31_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    data_stream_V_data_0_V_blk_n;
reg    data_stream_V_data_1_V_blk_n;
reg    data_stream_V_data_2_V_blk_n;
reg    data_stream_V_data_3_V_blk_n;
reg    data_stream_V_data_4_V_blk_n;
reg    data_stream_V_data_5_V_blk_n;
reg    data_stream_V_data_6_V_blk_n;
reg    data_stream_V_data_7_V_blk_n;
reg    data_stream_V_data_8_V_blk_n;
reg    data_stream_V_data_9_V_blk_n;
reg    data_stream_V_data_10_V_blk_n;
reg    data_stream_V_data_11_V_blk_n;
reg    data_stream_V_data_12_V_blk_n;
reg    data_stream_V_data_13_V_blk_n;
reg    data_stream_V_data_14_V_blk_n;
reg    data_stream_V_data_15_V_blk_n;
reg    data_stream_V_data_16_V_blk_n;
reg    data_stream_V_data_17_V_blk_n;
reg    data_stream_V_data_18_V_blk_n;
reg    data_stream_V_data_19_V_blk_n;
reg    data_stream_V_data_20_V_blk_n;
reg    data_stream_V_data_21_V_blk_n;
reg    data_stream_V_data_22_V_blk_n;
reg    data_stream_V_data_23_V_blk_n;
reg    data_stream_V_data_24_V_blk_n;
reg    data_stream_V_data_25_V_blk_n;
reg    data_stream_V_data_26_V_blk_n;
reg    data_stream_V_data_27_V_blk_n;
reg    data_stream_V_data_28_V_blk_n;
reg    data_stream_V_data_29_V_blk_n;
reg    data_stream_V_data_30_V_blk_n;
reg    data_stream_V_data_31_V_blk_n;
reg    res_stream_V_data_0_V_blk_n;
wire    ap_CS_fsm_state3;
reg    res_stream_V_data_1_V_blk_n;
reg    res_stream_V_data_2_V_blk_n;
reg    res_stream_V_data_3_V_blk_n;
reg    res_stream_V_data_4_V_blk_n;
reg    res_stream_V_data_5_V_blk_n;
reg    res_stream_V_data_6_V_blk_n;
reg    res_stream_V_data_7_V_blk_n;
reg    res_stream_V_data_8_V_blk_n;
reg    res_stream_V_data_9_V_blk_n;
reg    res_stream_V_data_10_V_blk_n;
reg    res_stream_V_data_11_V_blk_n;
reg    res_stream_V_data_12_V_blk_n;
reg    res_stream_V_data_13_V_blk_n;
reg    res_stream_V_data_14_V_blk_n;
reg    res_stream_V_data_15_V_blk_n;
reg    res_stream_V_data_16_V_blk_n;
reg    res_stream_V_data_17_V_blk_n;
reg    res_stream_V_data_18_V_blk_n;
reg    res_stream_V_data_19_V_blk_n;
reg    res_stream_V_data_20_V_blk_n;
reg    res_stream_V_data_21_V_blk_n;
reg    res_stream_V_data_22_V_blk_n;
reg    res_stream_V_data_23_V_blk_n;
reg    res_stream_V_data_24_V_blk_n;
reg    res_stream_V_data_25_V_blk_n;
reg    res_stream_V_data_26_V_blk_n;
reg    res_stream_V_data_27_V_blk_n;
reg    res_stream_V_data_28_V_blk_n;
reg    res_stream_V_data_29_V_blk_n;
reg    res_stream_V_data_30_V_blk_n;
reg    res_stream_V_data_31_V_blk_n;
reg   [6:0] data_0_V_reg_1351;
wire    io_acc_block_signal_op4;
reg    ap_block_state1;
reg   [6:0] data_1_V_reg_1356;
reg   [6:0] data_2_V_reg_1361;
reg   [6:0] data_3_V_reg_1366;
reg   [6:0] data_4_V_reg_1371;
reg   [6:0] data_5_V_reg_1376;
reg   [6:0] data_6_V_reg_1381;
reg   [6:0] data_7_V_reg_1386;
reg   [6:0] data_8_V_reg_1391;
reg   [6:0] data_9_V_reg_1396;
reg   [6:0] data_10_V_reg_1401;
reg   [6:0] data_11_V_reg_1406;
reg   [6:0] data_12_V_reg_1411;
reg   [6:0] data_14_V_reg_1416;
reg   [6:0] data_15_V_reg_1421;
reg   [6:0] data_17_V_reg_1426;
reg   [6:0] data_18_V_reg_1431;
reg   [6:0] data_19_V_reg_1436;
reg   [6:0] data_20_V_reg_1441;
reg   [6:0] data_21_V_reg_1446;
reg   [6:0] data_22_V_reg_1451;
reg   [6:0] data_23_V_reg_1456;
reg   [6:0] data_24_V_reg_1461;
reg   [6:0] data_25_V_reg_1466;
reg   [6:0] data_26_V_reg_1471;
reg   [6:0] data_27_V_reg_1476;
reg   [6:0] data_28_V_reg_1481;
reg   [6:0] data_30_V_reg_1486;
reg   [6:0] data_31_V_reg_1491;
reg   [15:0] tmp_data_0_V_reg_1496;
wire    ap_CS_fsm_state2;
reg   [15:0] tmp_data_1_V_reg_1501;
reg   [15:0] tmp_data_2_V_reg_1506;
reg   [15:0] tmp_data_3_V_reg_1511;
reg   [15:0] tmp_data_4_V_reg_1516;
reg   [15:0] tmp_data_6_V_reg_1521;
reg   [15:0] tmp_data_7_V_reg_1526;
reg   [15:0] tmp_data_8_V_reg_1531;
reg   [15:0] tmp_data_9_V_reg_1536;
reg   [15:0] tmp_data_11_V_reg_1541;
reg   [15:0] tmp_data_12_V_reg_1546;
reg   [15:0] tmp_data_13_V_reg_1551;
reg   [15:0] tmp_data_14_V_reg_1556;
reg   [15:0] tmp_data_15_V_reg_1561;
reg   [15:0] tmp_data_16_V_reg_1566;
reg   [15:0] tmp_data_17_V_reg_1571;
reg   [15:0] tmp_data_18_V_reg_1576;
reg   [15:0] tmp_data_19_V_reg_1581;
reg   [15:0] tmp_data_20_V_reg_1586;
reg   [15:0] tmp_data_21_V_reg_1591;
reg   [15:0] tmp_data_23_V_reg_1596;
reg   [15:0] tmp_data_24_V_reg_1601;
reg   [15:0] tmp_data_27_V_reg_1606;
reg   [15:0] tmp_data_28_V_reg_1611;
reg   [15:0] tmp_data_30_V_reg_1616;
reg   [15:0] tmp_data_31_V_reg_1621;
wire    call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_ready;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_0;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_1;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_2;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_3;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_4;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_5;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_6;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_7;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_8;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_9;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_10;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_11;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_12;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_13;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_14;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_15;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_16;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_17;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_18;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_19;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_20;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_21;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_22;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_23;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_24;
wire   [15:0] call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_25;
wire    io_acc_block_signal_op127;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
end

dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098(
    .ap_ready(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_ready),
    .data_0_V_read(data_0_V_reg_1351),
    .data_1_V_read(data_1_V_reg_1356),
    .data_2_V_read(data_2_V_reg_1361),
    .data_3_V_read(data_3_V_reg_1366),
    .data_4_V_read(data_4_V_reg_1371),
    .data_5_V_read(data_5_V_reg_1376),
    .data_6_V_read(data_6_V_reg_1381),
    .data_7_V_read(data_7_V_reg_1386),
    .data_8_V_read(data_8_V_reg_1391),
    .data_9_V_read(data_9_V_reg_1396),
    .data_10_V_read(data_10_V_reg_1401),
    .data_11_V_read(data_11_V_reg_1406),
    .data_12_V_read(data_12_V_reg_1411),
    .data_14_V_read(data_14_V_reg_1416),
    .data_15_V_read(data_15_V_reg_1421),
    .data_17_V_read(data_17_V_reg_1426),
    .data_18_V_read(data_18_V_reg_1431),
    .data_19_V_read(data_19_V_reg_1436),
    .data_20_V_read(data_20_V_reg_1441),
    .data_21_V_read(data_21_V_reg_1446),
    .data_22_V_read(data_22_V_reg_1451),
    .data_23_V_read(data_23_V_reg_1456),
    .data_24_V_read(data_24_V_reg_1461),
    .data_25_V_read(data_25_V_reg_1466),
    .data_26_V_read(data_26_V_reg_1471),
    .data_27_V_read(data_27_V_reg_1476),
    .data_28_V_read(data_28_V_reg_1481),
    .data_30_V_read(data_30_V_reg_1486),
    .data_31_V_read(data_31_V_reg_1491),
    .ap_return_0(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_0),
    .ap_return_1(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_1),
    .ap_return_2(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_2),
    .ap_return_3(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_3),
    .ap_return_4(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_4),
    .ap_return_5(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_5),
    .ap_return_6(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_6),
    .ap_return_7(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_7),
    .ap_return_8(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_8),
    .ap_return_9(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_9),
    .ap_return_10(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_10),
    .ap_return_11(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_11),
    .ap_return_12(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_12),
    .ap_return_13(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_13),
    .ap_return_14(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_14),
    .ap_return_15(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_15),
    .ap_return_16(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_16),
    .ap_return_17(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_17),
    .ap_return_18(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_18),
    .ap_return_19(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_19),
    .ap_return_20(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_20),
    .ap_return_21(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_21),
    .ap_return_22(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_22),
    .ap_return_23(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_23),
    .ap_return_24(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_24),
    .ap_return_25(call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_25)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_0_V_reg_1351 <= data_stream_V_data_0_V_dout;
        data_10_V_reg_1401 <= data_stream_V_data_10_V_dout;
        data_11_V_reg_1406 <= data_stream_V_data_11_V_dout;
        data_12_V_reg_1411 <= data_stream_V_data_12_V_dout;
        data_14_V_reg_1416 <= data_stream_V_data_14_V_dout;
        data_15_V_reg_1421 <= data_stream_V_data_15_V_dout;
        data_17_V_reg_1426 <= data_stream_V_data_17_V_dout;
        data_18_V_reg_1431 <= data_stream_V_data_18_V_dout;
        data_19_V_reg_1436 <= data_stream_V_data_19_V_dout;
        data_1_V_reg_1356 <= data_stream_V_data_1_V_dout;
        data_20_V_reg_1441 <= data_stream_V_data_20_V_dout;
        data_21_V_reg_1446 <= data_stream_V_data_21_V_dout;
        data_22_V_reg_1451 <= data_stream_V_data_22_V_dout;
        data_23_V_reg_1456 <= data_stream_V_data_23_V_dout;
        data_24_V_reg_1461 <= data_stream_V_data_24_V_dout;
        data_25_V_reg_1466 <= data_stream_V_data_25_V_dout;
        data_26_V_reg_1471 <= data_stream_V_data_26_V_dout;
        data_27_V_reg_1476 <= data_stream_V_data_27_V_dout;
        data_28_V_reg_1481 <= data_stream_V_data_28_V_dout;
        data_2_V_reg_1361 <= data_stream_V_data_2_V_dout;
        data_30_V_reg_1486 <= data_stream_V_data_30_V_dout;
        data_31_V_reg_1491 <= data_stream_V_data_31_V_dout;
        data_3_V_reg_1366 <= data_stream_V_data_3_V_dout;
        data_4_V_reg_1371 <= data_stream_V_data_4_V_dout;
        data_5_V_reg_1376 <= data_stream_V_data_5_V_dout;
        data_6_V_reg_1381 <= data_stream_V_data_6_V_dout;
        data_7_V_reg_1386 <= data_stream_V_data_7_V_dout;
        data_8_V_reg_1391 <= data_stream_V_data_8_V_dout;
        data_9_V_reg_1396 <= data_stream_V_data_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_data_0_V_reg_1496 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_0;
        tmp_data_11_V_reg_1541 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_9;
        tmp_data_12_V_reg_1546 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_10;
        tmp_data_13_V_reg_1551 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_11;
        tmp_data_14_V_reg_1556 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_12;
        tmp_data_15_V_reg_1561 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_13;
        tmp_data_16_V_reg_1566 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_14;
        tmp_data_17_V_reg_1571 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_15;
        tmp_data_18_V_reg_1576 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_16;
        tmp_data_19_V_reg_1581 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_17;
        tmp_data_1_V_reg_1501 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_1;
        tmp_data_20_V_reg_1586 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_18;
        tmp_data_21_V_reg_1591 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_19;
        tmp_data_23_V_reg_1596 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_20;
        tmp_data_24_V_reg_1601 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_21;
        tmp_data_27_V_reg_1606 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_22;
        tmp_data_28_V_reg_1611 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_23;
        tmp_data_2_V_reg_1506 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_2;
        tmp_data_30_V_reg_1616 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_24;
        tmp_data_31_V_reg_1621 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_25;
        tmp_data_3_V_reg_1511 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_3;
        tmp_data_4_V_reg_1516 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_4;
        tmp_data_6_V_reg_1521 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_5;
        tmp_data_7_V_reg_1526 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_6;
        tmp_data_8_V_reg_1531 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_7;
        tmp_data_9_V_reg_1536 <= call_ret_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config11_s_fu_1098_ap_return_8;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_0_V_blk_n = data_stream_V_data_0_V_empty_n;
    end else begin
        data_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_0_V_read = 1'b1;
    end else begin
        data_stream_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_10_V_blk_n = data_stream_V_data_10_V_empty_n;
    end else begin
        data_stream_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_10_V_read = 1'b1;
    end else begin
        data_stream_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_11_V_blk_n = data_stream_V_data_11_V_empty_n;
    end else begin
        data_stream_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_11_V_read = 1'b1;
    end else begin
        data_stream_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_12_V_blk_n = data_stream_V_data_12_V_empty_n;
    end else begin
        data_stream_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_12_V_read = 1'b1;
    end else begin
        data_stream_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_13_V_blk_n = data_stream_V_data_13_V_empty_n;
    end else begin
        data_stream_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_13_V_read = 1'b1;
    end else begin
        data_stream_V_data_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_14_V_blk_n = data_stream_V_data_14_V_empty_n;
    end else begin
        data_stream_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_14_V_read = 1'b1;
    end else begin
        data_stream_V_data_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_15_V_blk_n = data_stream_V_data_15_V_empty_n;
    end else begin
        data_stream_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_15_V_read = 1'b1;
    end else begin
        data_stream_V_data_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_16_V_blk_n = data_stream_V_data_16_V_empty_n;
    end else begin
        data_stream_V_data_16_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_16_V_read = 1'b1;
    end else begin
        data_stream_V_data_16_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_17_V_blk_n = data_stream_V_data_17_V_empty_n;
    end else begin
        data_stream_V_data_17_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_17_V_read = 1'b1;
    end else begin
        data_stream_V_data_17_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_18_V_blk_n = data_stream_V_data_18_V_empty_n;
    end else begin
        data_stream_V_data_18_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_18_V_read = 1'b1;
    end else begin
        data_stream_V_data_18_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_19_V_blk_n = data_stream_V_data_19_V_empty_n;
    end else begin
        data_stream_V_data_19_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_19_V_read = 1'b1;
    end else begin
        data_stream_V_data_19_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_1_V_blk_n = data_stream_V_data_1_V_empty_n;
    end else begin
        data_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_1_V_read = 1'b1;
    end else begin
        data_stream_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_20_V_blk_n = data_stream_V_data_20_V_empty_n;
    end else begin
        data_stream_V_data_20_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_20_V_read = 1'b1;
    end else begin
        data_stream_V_data_20_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_21_V_blk_n = data_stream_V_data_21_V_empty_n;
    end else begin
        data_stream_V_data_21_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_21_V_read = 1'b1;
    end else begin
        data_stream_V_data_21_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_22_V_blk_n = data_stream_V_data_22_V_empty_n;
    end else begin
        data_stream_V_data_22_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_22_V_read = 1'b1;
    end else begin
        data_stream_V_data_22_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_23_V_blk_n = data_stream_V_data_23_V_empty_n;
    end else begin
        data_stream_V_data_23_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_23_V_read = 1'b1;
    end else begin
        data_stream_V_data_23_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_24_V_blk_n = data_stream_V_data_24_V_empty_n;
    end else begin
        data_stream_V_data_24_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_24_V_read = 1'b1;
    end else begin
        data_stream_V_data_24_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_25_V_blk_n = data_stream_V_data_25_V_empty_n;
    end else begin
        data_stream_V_data_25_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_25_V_read = 1'b1;
    end else begin
        data_stream_V_data_25_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_26_V_blk_n = data_stream_V_data_26_V_empty_n;
    end else begin
        data_stream_V_data_26_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_26_V_read = 1'b1;
    end else begin
        data_stream_V_data_26_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_27_V_blk_n = data_stream_V_data_27_V_empty_n;
    end else begin
        data_stream_V_data_27_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_27_V_read = 1'b1;
    end else begin
        data_stream_V_data_27_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_28_V_blk_n = data_stream_V_data_28_V_empty_n;
    end else begin
        data_stream_V_data_28_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_28_V_read = 1'b1;
    end else begin
        data_stream_V_data_28_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_29_V_blk_n = data_stream_V_data_29_V_empty_n;
    end else begin
        data_stream_V_data_29_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_29_V_read = 1'b1;
    end else begin
        data_stream_V_data_29_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_2_V_blk_n = data_stream_V_data_2_V_empty_n;
    end else begin
        data_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_2_V_read = 1'b1;
    end else begin
        data_stream_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_30_V_blk_n = data_stream_V_data_30_V_empty_n;
    end else begin
        data_stream_V_data_30_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_30_V_read = 1'b1;
    end else begin
        data_stream_V_data_30_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_31_V_blk_n = data_stream_V_data_31_V_empty_n;
    end else begin
        data_stream_V_data_31_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_31_V_read = 1'b1;
    end else begin
        data_stream_V_data_31_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_3_V_blk_n = data_stream_V_data_3_V_empty_n;
    end else begin
        data_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_3_V_read = 1'b1;
    end else begin
        data_stream_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_4_V_blk_n = data_stream_V_data_4_V_empty_n;
    end else begin
        data_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_4_V_read = 1'b1;
    end else begin
        data_stream_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_5_V_blk_n = data_stream_V_data_5_V_empty_n;
    end else begin
        data_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_5_V_read = 1'b1;
    end else begin
        data_stream_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_6_V_blk_n = data_stream_V_data_6_V_empty_n;
    end else begin
        data_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_6_V_read = 1'b1;
    end else begin
        data_stream_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_7_V_blk_n = data_stream_V_data_7_V_empty_n;
    end else begin
        data_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_7_V_read = 1'b1;
    end else begin
        data_stream_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_8_V_blk_n = data_stream_V_data_8_V_empty_n;
    end else begin
        data_stream_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_8_V_read = 1'b1;
    end else begin
        data_stream_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_9_V_blk_n = data_stream_V_data_9_V_empty_n;
    end else begin
        data_stream_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_9_V_read = 1'b1;
    end else begin
        data_stream_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_0_V_write = 1'b1;
    end else begin
        res_stream_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_10_V_blk_n = res_stream_V_data_10_V_full_n;
    end else begin
        res_stream_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_10_V_write = 1'b1;
    end else begin
        res_stream_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_11_V_blk_n = res_stream_V_data_11_V_full_n;
    end else begin
        res_stream_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_11_V_write = 1'b1;
    end else begin
        res_stream_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_12_V_blk_n = res_stream_V_data_12_V_full_n;
    end else begin
        res_stream_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_12_V_write = 1'b1;
    end else begin
        res_stream_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_13_V_blk_n = res_stream_V_data_13_V_full_n;
    end else begin
        res_stream_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_13_V_write = 1'b1;
    end else begin
        res_stream_V_data_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_14_V_blk_n = res_stream_V_data_14_V_full_n;
    end else begin
        res_stream_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_14_V_write = 1'b1;
    end else begin
        res_stream_V_data_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_15_V_blk_n = res_stream_V_data_15_V_full_n;
    end else begin
        res_stream_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_15_V_write = 1'b1;
    end else begin
        res_stream_V_data_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_16_V_blk_n = res_stream_V_data_16_V_full_n;
    end else begin
        res_stream_V_data_16_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_16_V_write = 1'b1;
    end else begin
        res_stream_V_data_16_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_17_V_blk_n = res_stream_V_data_17_V_full_n;
    end else begin
        res_stream_V_data_17_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_17_V_write = 1'b1;
    end else begin
        res_stream_V_data_17_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_18_V_blk_n = res_stream_V_data_18_V_full_n;
    end else begin
        res_stream_V_data_18_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_18_V_write = 1'b1;
    end else begin
        res_stream_V_data_18_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_19_V_blk_n = res_stream_V_data_19_V_full_n;
    end else begin
        res_stream_V_data_19_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_19_V_write = 1'b1;
    end else begin
        res_stream_V_data_19_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_1_V_write = 1'b1;
    end else begin
        res_stream_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_20_V_blk_n = res_stream_V_data_20_V_full_n;
    end else begin
        res_stream_V_data_20_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_20_V_write = 1'b1;
    end else begin
        res_stream_V_data_20_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_21_V_blk_n = res_stream_V_data_21_V_full_n;
    end else begin
        res_stream_V_data_21_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_21_V_write = 1'b1;
    end else begin
        res_stream_V_data_21_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_22_V_blk_n = res_stream_V_data_22_V_full_n;
    end else begin
        res_stream_V_data_22_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_22_V_write = 1'b1;
    end else begin
        res_stream_V_data_22_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_23_V_blk_n = res_stream_V_data_23_V_full_n;
    end else begin
        res_stream_V_data_23_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_23_V_write = 1'b1;
    end else begin
        res_stream_V_data_23_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_24_V_blk_n = res_stream_V_data_24_V_full_n;
    end else begin
        res_stream_V_data_24_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_24_V_write = 1'b1;
    end else begin
        res_stream_V_data_24_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_25_V_blk_n = res_stream_V_data_25_V_full_n;
    end else begin
        res_stream_V_data_25_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_25_V_write = 1'b1;
    end else begin
        res_stream_V_data_25_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_26_V_blk_n = res_stream_V_data_26_V_full_n;
    end else begin
        res_stream_V_data_26_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_26_V_write = 1'b1;
    end else begin
        res_stream_V_data_26_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_27_V_blk_n = res_stream_V_data_27_V_full_n;
    end else begin
        res_stream_V_data_27_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_27_V_write = 1'b1;
    end else begin
        res_stream_V_data_27_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_28_V_blk_n = res_stream_V_data_28_V_full_n;
    end else begin
        res_stream_V_data_28_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_28_V_write = 1'b1;
    end else begin
        res_stream_V_data_28_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_29_V_blk_n = res_stream_V_data_29_V_full_n;
    end else begin
        res_stream_V_data_29_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_29_V_write = 1'b1;
    end else begin
        res_stream_V_data_29_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_2_V_write = 1'b1;
    end else begin
        res_stream_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_30_V_blk_n = res_stream_V_data_30_V_full_n;
    end else begin
        res_stream_V_data_30_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_30_V_write = 1'b1;
    end else begin
        res_stream_V_data_30_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_31_V_blk_n = res_stream_V_data_31_V_full_n;
    end else begin
        res_stream_V_data_31_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_31_V_write = 1'b1;
    end else begin
        res_stream_V_data_31_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_3_V_write = 1'b1;
    end else begin
        res_stream_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n;
    end else begin
        res_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_4_V_write = 1'b1;
    end else begin
        res_stream_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n;
    end else begin
        res_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_5_V_write = 1'b1;
    end else begin
        res_stream_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_6_V_blk_n = res_stream_V_data_6_V_full_n;
    end else begin
        res_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_6_V_write = 1'b1;
    end else begin
        res_stream_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_7_V_blk_n = res_stream_V_data_7_V_full_n;
    end else begin
        res_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_7_V_write = 1'b1;
    end else begin
        res_stream_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_8_V_blk_n = res_stream_V_data_8_V_full_n;
    end else begin
        res_stream_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_8_V_write = 1'b1;
    end else begin
        res_stream_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_stream_V_data_9_V_blk_n = res_stream_V_data_9_V_full_n;
    end else begin
        res_stream_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_9_V_write = 1'b1;
    end else begin
        res_stream_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((io_acc_block_signal_op127 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign io_acc_block_signal_op127 = (res_stream_V_data_9_V_full_n & res_stream_V_data_8_V_full_n & res_stream_V_data_7_V_full_n & res_stream_V_data_6_V_full_n & res_stream_V_data_5_V_full_n & res_stream_V_data_4_V_full_n & res_stream_V_data_3_V_full_n & res_stream_V_data_31_V_full_n & res_stream_V_data_30_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_29_V_full_n & res_stream_V_data_28_V_full_n & res_stream_V_data_27_V_full_n & res_stream_V_data_26_V_full_n & res_stream_V_data_25_V_full_n & res_stream_V_data_24_V_full_n & res_stream_V_data_23_V_full_n & res_stream_V_data_22_V_full_n & res_stream_V_data_21_V_full_n & res_stream_V_data_20_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_19_V_full_n & res_stream_V_data_18_V_full_n & res_stream_V_data_17_V_full_n & res_stream_V_data_16_V_full_n & res_stream_V_data_15_V_full_n & res_stream_V_data_14_V_full_n & res_stream_V_data_13_V_full_n & res_stream_V_data_12_V_full_n & res_stream_V_data_11_V_full_n & res_stream_V_data_10_V_full_n & res_stream_V_data_0_V_full_n);

assign io_acc_block_signal_op4 = (data_stream_V_data_9_V_empty_n & data_stream_V_data_8_V_empty_n & data_stream_V_data_7_V_empty_n & data_stream_V_data_6_V_empty_n & data_stream_V_data_5_V_empty_n & data_stream_V_data_4_V_empty_n & data_stream_V_data_3_V_empty_n & data_stream_V_data_31_V_empty_n & data_stream_V_data_30_V_empty_n & data_stream_V_data_2_V_empty_n & data_stream_V_data_29_V_empty_n & data_stream_V_data_28_V_empty_n & data_stream_V_data_27_V_empty_n & data_stream_V_data_26_V_empty_n & data_stream_V_data_25_V_empty_n & data_stream_V_data_24_V_empty_n & data_stream_V_data_23_V_empty_n & data_stream_V_data_22_V_empty_n & data_stream_V_data_21_V_empty_n & data_stream_V_data_20_V_empty_n & data_stream_V_data_1_V_empty_n & data_stream_V_data_19_V_empty_n & data_stream_V_data_18_V_empty_n & data_stream_V_data_17_V_empty_n & data_stream_V_data_16_V_empty_n & data_stream_V_data_15_V_empty_n & data_stream_V_data_14_V_empty_n & data_stream_V_data_13_V_empty_n & data_stream_V_data_12_V_empty_n & data_stream_V_data_11_V_empty_n & data_stream_V_data_10_V_empty_n & data_stream_V_data_0_V_empty_n);

assign res_stream_V_data_0_V_din = tmp_data_0_V_reg_1496;

assign res_stream_V_data_10_V_din = 16'd0;

assign res_stream_V_data_11_V_din = tmp_data_11_V_reg_1541;

assign res_stream_V_data_12_V_din = tmp_data_12_V_reg_1546;

assign res_stream_V_data_13_V_din = tmp_data_13_V_reg_1551;

assign res_stream_V_data_14_V_din = tmp_data_14_V_reg_1556;

assign res_stream_V_data_15_V_din = tmp_data_15_V_reg_1561;

assign res_stream_V_data_16_V_din = tmp_data_16_V_reg_1566;

assign res_stream_V_data_17_V_din = tmp_data_17_V_reg_1571;

assign res_stream_V_data_18_V_din = tmp_data_18_V_reg_1576;

assign res_stream_V_data_19_V_din = tmp_data_19_V_reg_1581;

assign res_stream_V_data_1_V_din = tmp_data_1_V_reg_1501;

assign res_stream_V_data_20_V_din = tmp_data_20_V_reg_1586;

assign res_stream_V_data_21_V_din = tmp_data_21_V_reg_1591;

assign res_stream_V_data_22_V_din = 16'd65504;

assign res_stream_V_data_23_V_din = tmp_data_23_V_reg_1596;

assign res_stream_V_data_24_V_din = tmp_data_24_V_reg_1601;

assign res_stream_V_data_25_V_din = 16'd65504;

assign res_stream_V_data_26_V_din = 16'd0;

assign res_stream_V_data_27_V_din = tmp_data_27_V_reg_1606;

assign res_stream_V_data_28_V_din = tmp_data_28_V_reg_1611;

assign res_stream_V_data_29_V_din = 16'd32;

assign res_stream_V_data_2_V_din = tmp_data_2_V_reg_1506;

assign res_stream_V_data_30_V_din = tmp_data_30_V_reg_1616;

assign res_stream_V_data_31_V_din = tmp_data_31_V_reg_1621;

assign res_stream_V_data_3_V_din = tmp_data_3_V_reg_1511;

assign res_stream_V_data_4_V_din = tmp_data_4_V_reg_1516;

assign res_stream_V_data_5_V_din = 16'd0;

assign res_stream_V_data_6_V_din = tmp_data_6_V_reg_1521;

assign res_stream_V_data_7_V_din = tmp_data_7_V_reg_1526;

assign res_stream_V_data_8_V_din = tmp_data_8_V_reg_1531;

assign res_stream_V_data_9_V_din = tmp_data_9_V_reg_1536;

assign start_out = real_start;

endmodule //dense_array_array_ap_fixed_16_6_5_3_0_32u_config11_s
