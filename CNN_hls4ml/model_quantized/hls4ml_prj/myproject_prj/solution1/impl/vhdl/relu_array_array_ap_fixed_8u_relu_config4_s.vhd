-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu_array_array_ap_fixed_8u_relu_config4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of relu_array_array_ap_fixed_8u_relu_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln60_reg_1627 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal i_0_reg_348 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln60_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op30 : STD_LOGIC;
    signal io_acc_block_signal_op215 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_365_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_34_fu_427_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_409_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_fu_435_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_s_fu_439_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_16_fu_449_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_fu_453_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_35_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_419_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_493_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_515_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_485_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_fu_459_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_535_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_0_V_fu_543_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_580_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_s_fu_562_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_8_fu_588_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_6_fu_592_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_17_fu_602_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_8_fu_606_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_39_fu_618_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_572_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_8_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_1_fu_646_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_8_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_8_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_8_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_8_fu_668_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_638_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_8_fu_612_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_1_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1_fu_688_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_1_V_fu_696_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_42_fu_733_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_2_fu_715_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_9_fu_741_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_7_fu_745_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_18_fu_755_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_9_fu_759_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_43_fu_771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_9_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_2_fu_799_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_9_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_9_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_9_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_9_fu_821_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_791_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_2_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_9_fu_765_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_2_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_841_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_2_V_fu_849_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_46_fu_886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_3_fu_868_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_10_fu_894_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_8_fu_898_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_19_fu_908_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_10_fu_912_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_47_fu_924_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_10_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_3_fu_952_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_10_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_10_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_10_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_10_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_944_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_3_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_10_fu_918_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_3_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_3_fu_994_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_3_V_fu_1002_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_50_fu_1039_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_4_fu_1021_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_11_fu_1047_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_9_fu_1051_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_20_fu_1061_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_11_fu_1065_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_51_fu_1077_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_1031_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_11_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_4_fu_1105_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_11_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_11_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_11_fu_1127_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1097_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_4_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_11_fu_1071_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_4_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1147_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_4_V_fu_1155_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_54_fu_1192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_5_fu_1174_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_12_fu_1200_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_10_fu_1204_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_21_fu_1214_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_12_fu_1218_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_55_fu_1230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1184_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_12_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_5_fu_1258_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_12_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_12_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_12_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_12_fu_1280_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1250_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_5_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_12_fu_1224_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_5_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_5_fu_1300_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_5_V_fu_1308_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_58_fu_1345_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_6_fu_1327_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_13_fu_1353_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_11_fu_1357_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_22_fu_1367_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_13_fu_1371_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_59_fu_1383_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1337_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_13_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_6_fu_1411_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_13_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_13_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_13_fu_1427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_13_fu_1433_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1403_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_6_fu_1441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_13_fu_1377_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_6_fu_1321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1453_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_6_V_fu_1461_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_62_fu_1498_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_7_fu_1480_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln415_14_fu_1506_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln415_12_fu_1510_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln415_23_fu_1520_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln415_14_fu_1524_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_63_fu_1536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_14_fu_1544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_7_fu_1564_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln416_14_fu_1550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_14_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_14_fu_1580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_14_fu_1586_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_1556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_7_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_1600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln416_14_fu_1530_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1494_7_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_7_fu_1606_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_data_7_V_fu_1614_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_fu_359_p2 = ap_const_lv1_0))) then 
                i_0_reg_348 <= i_fu_365_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_348 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln60_reg_1627 <= icmp_ln60_fu_359_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln60_fu_359_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln60_fu_359_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln60_fu_359_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln415_10_fu_912_p2 <= std_logic_vector(unsigned(trunc_ln708_3_fu_868_p4) + unsigned(zext_ln415_10_fu_894_p1));
    add_ln415_11_fu_1065_p2 <= std_logic_vector(unsigned(trunc_ln708_4_fu_1021_p4) + unsigned(zext_ln415_11_fu_1047_p1));
    add_ln415_12_fu_1218_p2 <= std_logic_vector(unsigned(trunc_ln708_5_fu_1174_p4) + unsigned(zext_ln415_12_fu_1200_p1));
    add_ln415_13_fu_1371_p2 <= std_logic_vector(unsigned(trunc_ln708_6_fu_1327_p4) + unsigned(zext_ln415_13_fu_1353_p1));
    add_ln415_14_fu_1524_p2 <= std_logic_vector(unsigned(trunc_ln708_7_fu_1480_p4) + unsigned(zext_ln415_14_fu_1506_p1));
    add_ln415_8_fu_606_p2 <= std_logic_vector(unsigned(trunc_ln708_s_fu_562_p4) + unsigned(zext_ln415_8_fu_588_p1));
    add_ln415_9_fu_759_p2 <= std_logic_vector(unsigned(trunc_ln708_2_fu_715_p4) + unsigned(zext_ln415_9_fu_741_p1));
    add_ln415_fu_453_p2 <= std_logic_vector(unsigned(trunc_ln_fu_409_p4) + unsigned(zext_ln415_fu_435_p1));
    add_ln416_10_fu_918_p2 <= std_logic_vector(unsigned(trunc_ln415_8_fu_898_p4) + unsigned(zext_ln415_19_fu_908_p1));
    add_ln416_11_fu_1071_p2 <= std_logic_vector(unsigned(trunc_ln415_9_fu_1051_p4) + unsigned(zext_ln415_20_fu_1061_p1));
    add_ln416_12_fu_1224_p2 <= std_logic_vector(unsigned(trunc_ln415_10_fu_1204_p4) + unsigned(zext_ln415_21_fu_1214_p1));
    add_ln416_13_fu_1377_p2 <= std_logic_vector(unsigned(trunc_ln415_11_fu_1357_p4) + unsigned(zext_ln415_22_fu_1367_p1));
    add_ln416_14_fu_1530_p2 <= std_logic_vector(unsigned(trunc_ln415_12_fu_1510_p4) + unsigned(zext_ln415_23_fu_1520_p1));
    add_ln416_8_fu_612_p2 <= std_logic_vector(unsigned(trunc_ln415_6_fu_592_p4) + unsigned(zext_ln415_17_fu_602_p1));
    add_ln416_9_fu_765_p2 <= std_logic_vector(unsigned(trunc_ln415_7_fu_745_p4) + unsigned(zext_ln415_18_fu_755_p1));
    add_ln416_fu_459_p2 <= std_logic_vector(unsigned(trunc_ln415_s_fu_439_p4) + unsigned(zext_ln415_16_fu_449_p1));
    and_ln416_10_fu_938_p2 <= (xor_ln416_10_fu_932_p2 and tmp_45_fu_878_p3);
    and_ln416_11_fu_1091_p2 <= (xor_ln416_11_fu_1085_p2 and tmp_49_fu_1031_p3);
    and_ln416_12_fu_1244_p2 <= (xor_ln416_12_fu_1238_p2 and tmp_53_fu_1184_p3);
    and_ln416_13_fu_1397_p2 <= (xor_ln416_13_fu_1391_p2 and tmp_57_fu_1337_p3);
    and_ln416_14_fu_1550_p2 <= (xor_ln416_14_fu_1544_p2 and tmp_61_fu_1490_p3);
    and_ln416_8_fu_632_p2 <= (xor_ln416_8_fu_626_p2 and tmp_37_fu_572_p3);
    and_ln416_9_fu_785_p2 <= (xor_ln416_9_fu_779_p2 and tmp_41_fu_725_p3);
    and_ln416_fu_479_p2 <= (xor_ln416_fu_473_p2 and tmp_33_fu_419_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, io_acc_block_signal_op30, io_acc_block_signal_op215)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((io_acc_block_signal_op215 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0)) or ((io_acc_block_signal_op30 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, io_acc_block_signal_op30, io_acc_block_signal_op215)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((io_acc_block_signal_op215 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0)) or ((io_acc_block_signal_op30 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, io_acc_block_signal_op30, io_acc_block_signal_op215)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((io_acc_block_signal_op215 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0)) or ((io_acc_block_signal_op30 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln60_reg_1627, io_acc_block_signal_op30, io_acc_block_signal_op215)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((io_acc_block_signal_op215 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0)) or ((io_acc_block_signal_op30 = ap_const_logic_0) and (icmp_ln60_reg_1627 = ap_const_lv1_0)));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln60_fu_359_p2)
    begin
        if ((icmp_ln60_fu_359_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(data_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(data_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_365_p2 <= std_logic_vector(unsigned(i_0_reg_348) + unsigned(ap_const_lv4_1));
    icmp_ln1494_1_fu_556_p2 <= "1" when (signed(data_V_data_1_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_2_fu_709_p2 <= "1" when (signed(data_V_data_2_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_3_fu_862_p2 <= "1" when (signed(data_V_data_3_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_4_fu_1015_p2 <= "1" when (signed(data_V_data_4_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_5_fu_1168_p2 <= "1" when (signed(data_V_data_5_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_6_fu_1321_p2 <= "1" when (signed(data_V_data_6_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_7_fu_1474_p2 <= "1" when (signed(data_V_data_7_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_fu_403_p2 <= "1" when (signed(data_V_data_0_V_dout) > signed(ap_const_lv16_0)) else "0";
    icmp_ln60_fu_359_p2 <= "1" when (i_0_reg_348 = ap_const_lv4_D) else "0";
    icmp_ln768_10_fu_968_p2 <= "1" when (p_Result_11_3_fu_952_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_11_fu_1121_p2 <= "1" when (p_Result_11_4_fu_1105_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_12_fu_1274_p2 <= "1" when (p_Result_11_5_fu_1258_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_13_fu_1427_p2 <= "1" when (p_Result_11_6_fu_1411_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_14_fu_1580_p2 <= "1" when (p_Result_11_7_fu_1564_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_8_fu_662_p2 <= "1" when (p_Result_11_1_fu_646_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_9_fu_815_p2 <= "1" when (p_Result_11_2_fu_799_p4 = ap_const_lv5_0) else "0";
    icmp_ln768_fu_509_p2 <= "1" when (p_Result_s_fu_493_p4 = ap_const_lv5_0) else "0";
    icmp_ln879_10_fu_962_p2 <= "1" when (p_Result_11_3_fu_952_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_11_fu_1115_p2 <= "1" when (p_Result_11_4_fu_1105_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_12_fu_1268_p2 <= "1" when (p_Result_11_5_fu_1258_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_13_fu_1421_p2 <= "1" when (p_Result_11_6_fu_1411_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_14_fu_1574_p2 <= "1" when (p_Result_11_7_fu_1564_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_8_fu_656_p2 <= "1" when (p_Result_11_1_fu_646_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_9_fu_809_p2 <= "1" when (p_Result_11_2_fu_799_p4 = ap_const_lv5_1F) else "0";
    icmp_ln879_fu_503_p2 <= "1" when (p_Result_s_fu_493_p4 = ap_const_lv5_1F) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op215 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op30 <= (data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    or_ln340_1_fu_682_p2 <= (xor_ln785_1_fu_676_p2 or tmp_40_fu_638_p3);
    or_ln340_2_fu_835_p2 <= (xor_ln785_2_fu_829_p2 or tmp_44_fu_791_p3);
    or_ln340_3_fu_988_p2 <= (xor_ln785_3_fu_982_p2 or tmp_48_fu_944_p3);
    or_ln340_4_fu_1141_p2 <= (xor_ln785_4_fu_1135_p2 or tmp_52_fu_1097_p3);
    or_ln340_5_fu_1294_p2 <= (xor_ln785_5_fu_1288_p2 or tmp_56_fu_1250_p3);
    or_ln340_6_fu_1447_p2 <= (xor_ln785_6_fu_1441_p2 or tmp_60_fu_1403_p3);
    or_ln340_7_fu_1600_p2 <= (xor_ln785_7_fu_1594_p2 or tmp_64_fu_1556_p3);
    or_ln340_fu_529_p2 <= (xor_ln785_fu_523_p2 or tmp_36_fu_485_p3);
    p_Result_11_1_fu_646_p4 <= data_V_data_1_V_dout(15 downto 11);
    p_Result_11_2_fu_799_p4 <= data_V_data_2_V_dout(15 downto 11);
    p_Result_11_3_fu_952_p4 <= data_V_data_3_V_dout(15 downto 11);
    p_Result_11_4_fu_1105_p4 <= data_V_data_4_V_dout(15 downto 11);
    p_Result_11_5_fu_1258_p4 <= data_V_data_5_V_dout(15 downto 11);
    p_Result_11_6_fu_1411_p4 <= data_V_data_6_V_dout(15 downto 11);
    p_Result_11_7_fu_1564_p4 <= data_V_data_7_V_dout(15 downto 11);
    p_Result_s_fu_493_p4 <= data_V_data_0_V_dout(15 downto 11);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_0_V_fu_543_p3),7));

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_1_V_fu_696_p3),7));

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_2_V_fu_849_p3),7));

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_3_V_fu_1002_p3),7));

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_4_V_fu_1155_p3),7));

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_5_V_fu_1308_p3),7));

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_6_V_fu_1461_p3),7));

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln60_reg_1627)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln60_reg_1627 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_7_V_fu_1614_p3),7));

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln60_reg_1627, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln60_reg_1627 = ap_const_lv1_0))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_1_fu_688_p3 <= 
        ap_const_lv6_3F when (or_ln340_1_fu_682_p2(0) = '1') else 
        add_ln416_8_fu_612_p2;
    select_ln340_2_fu_841_p3 <= 
        ap_const_lv6_3F when (or_ln340_2_fu_835_p2(0) = '1') else 
        add_ln416_9_fu_765_p2;
    select_ln340_3_fu_994_p3 <= 
        ap_const_lv6_3F when (or_ln340_3_fu_988_p2(0) = '1') else 
        add_ln416_10_fu_918_p2;
    select_ln340_4_fu_1147_p3 <= 
        ap_const_lv6_3F when (or_ln340_4_fu_1141_p2(0) = '1') else 
        add_ln416_11_fu_1071_p2;
    select_ln340_5_fu_1300_p3 <= 
        ap_const_lv6_3F when (or_ln340_5_fu_1294_p2(0) = '1') else 
        add_ln416_12_fu_1224_p2;
    select_ln340_6_fu_1453_p3 <= 
        ap_const_lv6_3F when (or_ln340_6_fu_1447_p2(0) = '1') else 
        add_ln416_13_fu_1377_p2;
    select_ln340_7_fu_1606_p3 <= 
        ap_const_lv6_3F when (or_ln340_7_fu_1600_p2(0) = '1') else 
        add_ln416_14_fu_1530_p2;
    select_ln340_fu_535_p3 <= 
        ap_const_lv6_3F when (or_ln340_fu_529_p2(0) = '1') else 
        add_ln416_fu_459_p2;
    select_ln777_10_fu_974_p3 <= 
        icmp_ln879_10_fu_962_p2 when (and_ln416_10_fu_938_p2(0) = '1') else 
        icmp_ln768_10_fu_968_p2;
    select_ln777_11_fu_1127_p3 <= 
        icmp_ln879_11_fu_1115_p2 when (and_ln416_11_fu_1091_p2(0) = '1') else 
        icmp_ln768_11_fu_1121_p2;
    select_ln777_12_fu_1280_p3 <= 
        icmp_ln879_12_fu_1268_p2 when (and_ln416_12_fu_1244_p2(0) = '1') else 
        icmp_ln768_12_fu_1274_p2;
    select_ln777_13_fu_1433_p3 <= 
        icmp_ln879_13_fu_1421_p2 when (and_ln416_13_fu_1397_p2(0) = '1') else 
        icmp_ln768_13_fu_1427_p2;
    select_ln777_14_fu_1586_p3 <= 
        icmp_ln879_14_fu_1574_p2 when (and_ln416_14_fu_1550_p2(0) = '1') else 
        icmp_ln768_14_fu_1580_p2;
    select_ln777_8_fu_668_p3 <= 
        icmp_ln879_8_fu_656_p2 when (and_ln416_8_fu_632_p2(0) = '1') else 
        icmp_ln768_8_fu_662_p2;
    select_ln777_9_fu_821_p3 <= 
        icmp_ln879_9_fu_809_p2 when (and_ln416_9_fu_785_p2(0) = '1') else 
        icmp_ln768_9_fu_815_p2;
    select_ln777_fu_515_p3 <= 
        icmp_ln879_fu_503_p2 when (and_ln416_fu_479_p2(0) = '1') else 
        icmp_ln768_fu_509_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_33_fu_419_p3 <= data_V_data_0_V_dout(10 downto 10);
    tmp_34_fu_427_p3 <= data_V_data_0_V_dout(3 downto 3);
    tmp_35_fu_465_p3 <= add_ln415_fu_453_p2(6 downto 6);
    tmp_36_fu_485_p3 <= add_ln415_fu_453_p2(6 downto 6);
    tmp_37_fu_572_p3 <= data_V_data_1_V_dout(10 downto 10);
    tmp_38_fu_580_p3 <= data_V_data_1_V_dout(3 downto 3);
    tmp_39_fu_618_p3 <= add_ln415_8_fu_606_p2(6 downto 6);
    tmp_40_fu_638_p3 <= add_ln415_8_fu_606_p2(6 downto 6);
    tmp_41_fu_725_p3 <= data_V_data_2_V_dout(10 downto 10);
    tmp_42_fu_733_p3 <= data_V_data_2_V_dout(3 downto 3);
    tmp_43_fu_771_p3 <= add_ln415_9_fu_759_p2(6 downto 6);
    tmp_44_fu_791_p3 <= add_ln415_9_fu_759_p2(6 downto 6);
    tmp_45_fu_878_p3 <= data_V_data_3_V_dout(10 downto 10);
    tmp_46_fu_886_p3 <= data_V_data_3_V_dout(3 downto 3);
    tmp_47_fu_924_p3 <= add_ln415_10_fu_912_p2(6 downto 6);
    tmp_48_fu_944_p3 <= add_ln415_10_fu_912_p2(6 downto 6);
    tmp_49_fu_1031_p3 <= data_V_data_4_V_dout(10 downto 10);
    tmp_50_fu_1039_p3 <= data_V_data_4_V_dout(3 downto 3);
    tmp_51_fu_1077_p3 <= add_ln415_11_fu_1065_p2(6 downto 6);
    tmp_52_fu_1097_p3 <= add_ln415_11_fu_1065_p2(6 downto 6);
    tmp_53_fu_1184_p3 <= data_V_data_5_V_dout(10 downto 10);
    tmp_54_fu_1192_p3 <= data_V_data_5_V_dout(3 downto 3);
    tmp_55_fu_1230_p3 <= add_ln415_12_fu_1218_p2(6 downto 6);
    tmp_56_fu_1250_p3 <= add_ln415_12_fu_1218_p2(6 downto 6);
    tmp_57_fu_1337_p3 <= data_V_data_6_V_dout(10 downto 10);
    tmp_58_fu_1345_p3 <= data_V_data_6_V_dout(3 downto 3);
    tmp_59_fu_1383_p3 <= add_ln415_13_fu_1371_p2(6 downto 6);
    tmp_60_fu_1403_p3 <= add_ln415_13_fu_1371_p2(6 downto 6);
    tmp_61_fu_1490_p3 <= data_V_data_7_V_dout(10 downto 10);
    tmp_62_fu_1498_p3 <= data_V_data_7_V_dout(3 downto 3);
    tmp_63_fu_1536_p3 <= add_ln415_14_fu_1524_p2(6 downto 6);
    tmp_64_fu_1556_p3 <= add_ln415_14_fu_1524_p2(6 downto 6);
    tmp_data_0_V_fu_543_p3 <= 
        select_ln340_fu_535_p3 when (icmp_ln1494_fu_403_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_1_V_fu_696_p3 <= 
        select_ln340_1_fu_688_p3 when (icmp_ln1494_1_fu_556_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_2_V_fu_849_p3 <= 
        select_ln340_2_fu_841_p3 when (icmp_ln1494_2_fu_709_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_3_V_fu_1002_p3 <= 
        select_ln340_3_fu_994_p3 when (icmp_ln1494_3_fu_862_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_4_V_fu_1155_p3 <= 
        select_ln340_4_fu_1147_p3 when (icmp_ln1494_4_fu_1015_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_5_V_fu_1308_p3 <= 
        select_ln340_5_fu_1300_p3 when (icmp_ln1494_5_fu_1168_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_6_V_fu_1461_p3 <= 
        select_ln340_6_fu_1453_p3 when (icmp_ln1494_6_fu_1321_p2(0) = '1') else 
        ap_const_lv6_0;
    tmp_data_7_V_fu_1614_p3 <= 
        select_ln340_7_fu_1606_p3 when (icmp_ln1494_7_fu_1474_p2(0) = '1') else 
        ap_const_lv6_0;
    trunc_ln415_10_fu_1204_p4 <= data_V_data_5_V_dout(9 downto 4);
    trunc_ln415_11_fu_1357_p4 <= data_V_data_6_V_dout(9 downto 4);
    trunc_ln415_12_fu_1510_p4 <= data_V_data_7_V_dout(9 downto 4);
    trunc_ln415_6_fu_592_p4 <= data_V_data_1_V_dout(9 downto 4);
    trunc_ln415_7_fu_745_p4 <= data_V_data_2_V_dout(9 downto 4);
    trunc_ln415_8_fu_898_p4 <= data_V_data_3_V_dout(9 downto 4);
    trunc_ln415_9_fu_1051_p4 <= data_V_data_4_V_dout(9 downto 4);
    trunc_ln415_s_fu_439_p4 <= data_V_data_0_V_dout(9 downto 4);
    trunc_ln708_2_fu_715_p4 <= data_V_data_2_V_dout(10 downto 4);
    trunc_ln708_3_fu_868_p4 <= data_V_data_3_V_dout(10 downto 4);
    trunc_ln708_4_fu_1021_p4 <= data_V_data_4_V_dout(10 downto 4);
    trunc_ln708_5_fu_1174_p4 <= data_V_data_5_V_dout(10 downto 4);
    trunc_ln708_6_fu_1327_p4 <= data_V_data_6_V_dout(10 downto 4);
    trunc_ln708_7_fu_1480_p4 <= data_V_data_7_V_dout(10 downto 4);
    trunc_ln708_s_fu_562_p4 <= data_V_data_1_V_dout(10 downto 4);
    trunc_ln_fu_409_p4 <= data_V_data_0_V_dout(10 downto 4);
    xor_ln416_10_fu_932_p2 <= (tmp_47_fu_924_p3 xor ap_const_lv1_1);
    xor_ln416_11_fu_1085_p2 <= (tmp_51_fu_1077_p3 xor ap_const_lv1_1);
    xor_ln416_12_fu_1238_p2 <= (tmp_55_fu_1230_p3 xor ap_const_lv1_1);
    xor_ln416_13_fu_1391_p2 <= (tmp_59_fu_1383_p3 xor ap_const_lv1_1);
    xor_ln416_14_fu_1544_p2 <= (tmp_63_fu_1536_p3 xor ap_const_lv1_1);
    xor_ln416_8_fu_626_p2 <= (tmp_39_fu_618_p3 xor ap_const_lv1_1);
    xor_ln416_9_fu_779_p2 <= (tmp_43_fu_771_p3 xor ap_const_lv1_1);
    xor_ln416_fu_473_p2 <= (tmp_35_fu_465_p3 xor ap_const_lv1_1);
    xor_ln785_1_fu_676_p2 <= (select_ln777_8_fu_668_p3 xor ap_const_lv1_1);
    xor_ln785_2_fu_829_p2 <= (select_ln777_9_fu_821_p3 xor ap_const_lv1_1);
    xor_ln785_3_fu_982_p2 <= (select_ln777_10_fu_974_p3 xor ap_const_lv1_1);
    xor_ln785_4_fu_1135_p2 <= (select_ln777_11_fu_1127_p3 xor ap_const_lv1_1);
    xor_ln785_5_fu_1288_p2 <= (select_ln777_12_fu_1280_p3 xor ap_const_lv1_1);
    xor_ln785_6_fu_1441_p2 <= (select_ln777_13_fu_1433_p3 xor ap_const_lv1_1);
    xor_ln785_7_fu_1594_p2 <= (select_ln777_14_fu_1586_p3 xor ap_const_lv1_1);
    xor_ln785_fu_523_p2 <= (select_ln777_fu_515_p3 xor ap_const_lv1_1);
    zext_ln415_10_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_886_p3),7));
    zext_ln415_11_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_1039_p3),7));
    zext_ln415_12_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_1192_p3),7));
    zext_ln415_13_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1345_p3),7));
    zext_ln415_14_fu_1506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1498_p3),7));
    zext_ln415_16_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_427_p3),6));
    zext_ln415_17_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_580_p3),6));
    zext_ln415_18_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_733_p3),6));
    zext_ln415_19_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_886_p3),6));
    zext_ln415_20_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_1039_p3),6));
    zext_ln415_21_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_1192_p3),6));
    zext_ln415_22_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1345_p3),6));
    zext_ln415_23_fu_1520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1498_p3),6));
    zext_ln415_8_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_580_p3),7));
    zext_ln415_9_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_733_p3),7));
    zext_ln415_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_427_p3),7));
end behav;
