-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_array_array_ap_fixed_16_6_5_3_0_32u_config8_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_stream_V_data_0_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_0_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_0_V_read : OUT STD_LOGIC;
    data_stream_V_data_1_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_1_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_1_V_read : OUT STD_LOGIC;
    data_stream_V_data_2_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_2_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_2_V_read : OUT STD_LOGIC;
    data_stream_V_data_3_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_3_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_3_V_read : OUT STD_LOGIC;
    data_stream_V_data_4_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_4_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_4_V_read : OUT STD_LOGIC;
    data_stream_V_data_5_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_5_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_5_V_read : OUT STD_LOGIC;
    data_stream_V_data_6_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_6_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_6_V_read : OUT STD_LOGIC;
    data_stream_V_data_7_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    data_stream_V_data_7_V_empty_n : IN STD_LOGIC;
    data_stream_V_data_7_V_read : OUT STD_LOGIC;
    res_stream_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_0_V_full_n : IN STD_LOGIC;
    res_stream_V_data_0_V_write : OUT STD_LOGIC;
    res_stream_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_1_V_full_n : IN STD_LOGIC;
    res_stream_V_data_1_V_write : OUT STD_LOGIC;
    res_stream_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_2_V_full_n : IN STD_LOGIC;
    res_stream_V_data_2_V_write : OUT STD_LOGIC;
    res_stream_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_3_V_full_n : IN STD_LOGIC;
    res_stream_V_data_3_V_write : OUT STD_LOGIC;
    res_stream_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_4_V_full_n : IN STD_LOGIC;
    res_stream_V_data_4_V_write : OUT STD_LOGIC;
    res_stream_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_5_V_full_n : IN STD_LOGIC;
    res_stream_V_data_5_V_write : OUT STD_LOGIC;
    res_stream_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_6_V_full_n : IN STD_LOGIC;
    res_stream_V_data_6_V_write : OUT STD_LOGIC;
    res_stream_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_7_V_full_n : IN STD_LOGIC;
    res_stream_V_data_7_V_write : OUT STD_LOGIC;
    res_stream_V_data_8_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_8_V_full_n : IN STD_LOGIC;
    res_stream_V_data_8_V_write : OUT STD_LOGIC;
    res_stream_V_data_9_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_9_V_full_n : IN STD_LOGIC;
    res_stream_V_data_9_V_write : OUT STD_LOGIC;
    res_stream_V_data_10_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_10_V_full_n : IN STD_LOGIC;
    res_stream_V_data_10_V_write : OUT STD_LOGIC;
    res_stream_V_data_11_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_11_V_full_n : IN STD_LOGIC;
    res_stream_V_data_11_V_write : OUT STD_LOGIC;
    res_stream_V_data_12_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_12_V_full_n : IN STD_LOGIC;
    res_stream_V_data_12_V_write : OUT STD_LOGIC;
    res_stream_V_data_13_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_13_V_full_n : IN STD_LOGIC;
    res_stream_V_data_13_V_write : OUT STD_LOGIC;
    res_stream_V_data_14_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_14_V_full_n : IN STD_LOGIC;
    res_stream_V_data_14_V_write : OUT STD_LOGIC;
    res_stream_V_data_15_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_15_V_full_n : IN STD_LOGIC;
    res_stream_V_data_15_V_write : OUT STD_LOGIC;
    res_stream_V_data_16_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_16_V_full_n : IN STD_LOGIC;
    res_stream_V_data_16_V_write : OUT STD_LOGIC;
    res_stream_V_data_17_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_17_V_full_n : IN STD_LOGIC;
    res_stream_V_data_17_V_write : OUT STD_LOGIC;
    res_stream_V_data_18_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_18_V_full_n : IN STD_LOGIC;
    res_stream_V_data_18_V_write : OUT STD_LOGIC;
    res_stream_V_data_19_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_19_V_full_n : IN STD_LOGIC;
    res_stream_V_data_19_V_write : OUT STD_LOGIC;
    res_stream_V_data_20_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_20_V_full_n : IN STD_LOGIC;
    res_stream_V_data_20_V_write : OUT STD_LOGIC;
    res_stream_V_data_21_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_21_V_full_n : IN STD_LOGIC;
    res_stream_V_data_21_V_write : OUT STD_LOGIC;
    res_stream_V_data_22_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_22_V_full_n : IN STD_LOGIC;
    res_stream_V_data_22_V_write : OUT STD_LOGIC;
    res_stream_V_data_23_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_23_V_full_n : IN STD_LOGIC;
    res_stream_V_data_23_V_write : OUT STD_LOGIC;
    res_stream_V_data_24_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_24_V_full_n : IN STD_LOGIC;
    res_stream_V_data_24_V_write : OUT STD_LOGIC;
    res_stream_V_data_25_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_25_V_full_n : IN STD_LOGIC;
    res_stream_V_data_25_V_write : OUT STD_LOGIC;
    res_stream_V_data_26_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_26_V_full_n : IN STD_LOGIC;
    res_stream_V_data_26_V_write : OUT STD_LOGIC;
    res_stream_V_data_27_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_27_V_full_n : IN STD_LOGIC;
    res_stream_V_data_27_V_write : OUT STD_LOGIC;
    res_stream_V_data_28_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_28_V_full_n : IN STD_LOGIC;
    res_stream_V_data_28_V_write : OUT STD_LOGIC;
    res_stream_V_data_29_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_29_V_full_n : IN STD_LOGIC;
    res_stream_V_data_29_V_write : OUT STD_LOGIC;
    res_stream_V_data_30_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_30_V_full_n : IN STD_LOGIC;
    res_stream_V_data_30_V_write : OUT STD_LOGIC;
    res_stream_V_data_31_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_stream_V_data_31_V_full_n : IN STD_LOGIC;
    res_stream_V_data_31_V_write : OUT STD_LOGIC );
end;


architecture behav of dense_array_array_ap_fixed_16_6_5_3_0_32u_config8_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv16_FFE0 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111100000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal data_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_4_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_5_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_6_V_blk_n : STD_LOGIC;
    signal data_stream_V_data_7_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal res_stream_V_data_1_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_2_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_3_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_4_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_5_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_6_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_7_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_8_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_9_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_10_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_11_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_12_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_13_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_14_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_15_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_16_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_17_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_18_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_19_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_20_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_21_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_22_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_23_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_24_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_25_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_26_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_27_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_28_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_29_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_30_V_blk_n : STD_LOGIC;
    signal res_stream_V_data_31_V_blk_n : STD_LOGIC;
    signal i_in_0_reg_1059 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln41_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_2512 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op212 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_in_fu_1159_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_in_reg_2516 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_i_in_0_phi_fu_1063_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal data_72_V_fu_624 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_fu_628 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_fu_632 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_fu_636 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_fu_640 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_fu_644 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_fu_648 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_fu_652 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_1_fu_656 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_1_fu_660 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_1_fu_664 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_1_fu_668 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_1_fu_672 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_1_fu_676 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_1_fu_680 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_1_fu_684 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_2_fu_688 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_2_fu_692 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_2_fu_696 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_2_fu_700 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_2_fu_704 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_2_fu_708 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_2_fu_712 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_3_fu_716 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_3_fu_720 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_3_fu_724 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_3_fu_728 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_3_fu_732 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_3_fu_736 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_2_fu_740 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_3_fu_744 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_4_fu_748 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_4_fu_752 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_4_fu_756 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_4_fu_760 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_4_fu_764 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_4_fu_768 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_3_fu_772 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_4_fu_776 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_5_fu_780 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_5_fu_784 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_5_fu_788 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_5_fu_792 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_5_fu_796 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_5_fu_800 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_4_fu_804 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_5_fu_808 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_6_fu_812 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_6_fu_816 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_6_fu_820 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_6_fu_824 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_6_fu_828 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_6_fu_832 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_5_fu_836 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_6_fu_840 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_7_fu_844 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_7_fu_848 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_7_fu_852 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_7_fu_856 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_7_fu_860 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_7_fu_864 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_6_fu_868 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_7_fu_872 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_8_fu_876 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_8_fu_880 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_8_fu_884 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_8_fu_888 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_8_fu_892 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_8_fu_896 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_8_fu_900 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_72_V_9_fu_904 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_73_V_9_fu_908 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_74_V_9_fu_912 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_75_V_9_fu_916 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_76_V_9_fu_920 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_77_V_9_fu_924 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_78_V_7_fu_928 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_79_V_9_fu_932 : STD_LOGIC_VECTOR (6 downto 0);
    signal io_acc_block_signal_op418 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_32_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_33_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_34_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_35_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_36_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_37_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_38_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_39_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_40_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_41_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_42_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_43_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_44_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_45_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_46_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_47_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_48_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_49_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_50_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_51_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_52_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_53_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_54_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_55_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_56_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_57_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_58_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_59_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_60_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_61_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_62_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_63_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_64_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_65_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_66_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_67_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_68_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_69_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_71_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_72_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_73_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_74_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_75_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_76_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_77_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_78_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        data_79_V_read : IN STD_LOGIC_VECTOR (6 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071 : component dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => data_72_V_fu_624,
        data_1_V_read => data_73_V_fu_628,
        data_2_V_read => data_74_V_fu_632,
        data_3_V_read => data_75_V_fu_636,
        data_4_V_read => data_76_V_fu_640,
        data_5_V_read => data_77_V_fu_644,
        data_6_V_read => data_78_V_fu_648,
        data_7_V_read => data_79_V_fu_652,
        data_8_V_read => data_72_V_1_fu_656,
        data_9_V_read => data_73_V_1_fu_660,
        data_10_V_read => data_74_V_1_fu_664,
        data_11_V_read => data_75_V_1_fu_668,
        data_12_V_read => data_76_V_1_fu_672,
        data_13_V_read => data_77_V_1_fu_676,
        data_14_V_read => data_78_V_1_fu_680,
        data_15_V_read => data_79_V_1_fu_684,
        data_16_V_read => data_72_V_2_fu_688,
        data_17_V_read => data_73_V_2_fu_692,
        data_18_V_read => data_74_V_2_fu_696,
        data_19_V_read => data_75_V_2_fu_700,
        data_20_V_read => data_76_V_2_fu_704,
        data_21_V_read => data_77_V_2_fu_708,
        data_23_V_read => data_79_V_2_fu_712,
        data_24_V_read => data_72_V_3_fu_716,
        data_25_V_read => data_73_V_3_fu_720,
        data_26_V_read => data_74_V_3_fu_724,
        data_27_V_read => data_75_V_3_fu_728,
        data_28_V_read => data_76_V_3_fu_732,
        data_29_V_read => data_77_V_3_fu_736,
        data_30_V_read => data_78_V_2_fu_740,
        data_31_V_read => data_79_V_3_fu_744,
        data_32_V_read => data_72_V_4_fu_748,
        data_33_V_read => data_73_V_4_fu_752,
        data_34_V_read => data_74_V_4_fu_756,
        data_35_V_read => data_75_V_4_fu_760,
        data_36_V_read => data_76_V_4_fu_764,
        data_37_V_read => data_77_V_4_fu_768,
        data_38_V_read => data_78_V_3_fu_772,
        data_39_V_read => data_79_V_4_fu_776,
        data_40_V_read => data_72_V_5_fu_780,
        data_41_V_read => data_73_V_5_fu_784,
        data_42_V_read => data_74_V_5_fu_788,
        data_43_V_read => data_75_V_5_fu_792,
        data_44_V_read => data_76_V_5_fu_796,
        data_45_V_read => data_77_V_5_fu_800,
        data_46_V_read => data_78_V_4_fu_804,
        data_47_V_read => data_79_V_5_fu_808,
        data_48_V_read => data_72_V_6_fu_812,
        data_49_V_read => data_73_V_6_fu_816,
        data_50_V_read => data_74_V_6_fu_820,
        data_51_V_read => data_75_V_6_fu_824,
        data_52_V_read => data_76_V_6_fu_828,
        data_53_V_read => data_77_V_6_fu_832,
        data_54_V_read => data_78_V_5_fu_836,
        data_55_V_read => data_79_V_6_fu_840,
        data_56_V_read => data_72_V_7_fu_844,
        data_57_V_read => data_73_V_7_fu_848,
        data_58_V_read => data_74_V_7_fu_852,
        data_59_V_read => data_75_V_7_fu_856,
        data_60_V_read => data_76_V_7_fu_860,
        data_61_V_read => data_77_V_7_fu_864,
        data_62_V_read => data_78_V_6_fu_868,
        data_63_V_read => data_79_V_7_fu_872,
        data_64_V_read => data_72_V_8_fu_876,
        data_65_V_read => data_73_V_8_fu_880,
        data_66_V_read => data_74_V_8_fu_884,
        data_67_V_read => data_75_V_8_fu_888,
        data_68_V_read => data_76_V_8_fu_892,
        data_69_V_read => data_77_V_8_fu_896,
        data_71_V_read => data_79_V_8_fu_900,
        data_72_V_read => data_72_V_9_fu_904,
        data_73_V_read => data_73_V_9_fu_908,
        data_74_V_read => data_74_V_9_fu_912,
        data_75_V_read => data_75_V_9_fu_916,
        data_76_V_read => data_76_V_9_fu_920,
        data_77_V_read => data_77_V_9_fu_924,
        data_78_V_read => data_78_V_7_fu_928,
        data_79_V_read => data_79_V_9_fu_932,
        ap_return_0 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_0,
        ap_return_1 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_1,
        ap_return_2 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_2,
        ap_return_3 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_3,
        ap_return_4 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_4,
        ap_return_5 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_5,
        ap_return_6 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_6,
        ap_return_7 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_7,
        ap_return_8 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_8,
        ap_return_9 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_9,
        ap_return_10 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_10,
        ap_return_11 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_11,
        ap_return_12 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_12,
        ap_return_13 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_13,
        ap_return_14 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_14,
        ap_return_15 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_15,
        ap_return_16 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_16,
        ap_return_17 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_17,
        ap_return_18 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_18,
        ap_return_19 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_19,
        ap_return_20 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_20,
        ap_return_21 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_21,
        ap_return_22 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_22,
        ap_return_23 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_23,
        ap_return_24 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_24,
        ap_return_25 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_25,
        ap_return_26 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_26,
        ap_return_27 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_27,
        ap_return_28 => grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_28);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_in_0_reg_1059_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_2512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_in_0_reg_1059 <= i_in_reg_2516;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_in_0_reg_1059 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_1_fu_656 <= data_stream_V_data_0_V_dout;
                data_73_V_1_fu_660 <= data_stream_V_data_1_V_dout;
                data_74_V_1_fu_664 <= data_stream_V_data_2_V_dout;
                data_75_V_1_fu_668 <= data_stream_V_data_3_V_dout;
                data_76_V_1_fu_672 <= data_stream_V_data_4_V_dout;
                data_77_V_1_fu_676 <= data_stream_V_data_5_V_dout;
                data_78_V_1_fu_680 <= data_stream_V_data_6_V_dout;
                data_79_V_1_fu_684 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_2_fu_688 <= data_stream_V_data_0_V_dout;
                data_73_V_2_fu_692 <= data_stream_V_data_1_V_dout;
                data_74_V_2_fu_696 <= data_stream_V_data_2_V_dout;
                data_75_V_2_fu_700 <= data_stream_V_data_3_V_dout;
                data_76_V_2_fu_704 <= data_stream_V_data_4_V_dout;
                data_77_V_2_fu_708 <= data_stream_V_data_5_V_dout;
                data_79_V_2_fu_712 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_3_fu_716 <= data_stream_V_data_0_V_dout;
                data_73_V_3_fu_720 <= data_stream_V_data_1_V_dout;
                data_74_V_3_fu_724 <= data_stream_V_data_2_V_dout;
                data_75_V_3_fu_728 <= data_stream_V_data_3_V_dout;
                data_76_V_3_fu_732 <= data_stream_V_data_4_V_dout;
                data_77_V_3_fu_736 <= data_stream_V_data_5_V_dout;
                data_78_V_2_fu_740 <= data_stream_V_data_6_V_dout;
                data_79_V_3_fu_744 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_4_fu_748 <= data_stream_V_data_0_V_dout;
                data_73_V_4_fu_752 <= data_stream_V_data_1_V_dout;
                data_74_V_4_fu_756 <= data_stream_V_data_2_V_dout;
                data_75_V_4_fu_760 <= data_stream_V_data_3_V_dout;
                data_76_V_4_fu_764 <= data_stream_V_data_4_V_dout;
                data_77_V_4_fu_768 <= data_stream_V_data_5_V_dout;
                data_78_V_3_fu_772 <= data_stream_V_data_6_V_dout;
                data_79_V_4_fu_776 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_5_fu_780 <= data_stream_V_data_0_V_dout;
                data_73_V_5_fu_784 <= data_stream_V_data_1_V_dout;
                data_74_V_5_fu_788 <= data_stream_V_data_2_V_dout;
                data_75_V_5_fu_792 <= data_stream_V_data_3_V_dout;
                data_76_V_5_fu_796 <= data_stream_V_data_4_V_dout;
                data_77_V_5_fu_800 <= data_stream_V_data_5_V_dout;
                data_78_V_4_fu_804 <= data_stream_V_data_6_V_dout;
                data_79_V_5_fu_808 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_6_fu_812 <= data_stream_V_data_0_V_dout;
                data_73_V_6_fu_816 <= data_stream_V_data_1_V_dout;
                data_74_V_6_fu_820 <= data_stream_V_data_2_V_dout;
                data_75_V_6_fu_824 <= data_stream_V_data_3_V_dout;
                data_76_V_6_fu_828 <= data_stream_V_data_4_V_dout;
                data_77_V_6_fu_832 <= data_stream_V_data_5_V_dout;
                data_78_V_5_fu_836 <= data_stream_V_data_6_V_dout;
                data_79_V_6_fu_840 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_7_fu_844 <= data_stream_V_data_0_V_dout;
                data_73_V_7_fu_848 <= data_stream_V_data_1_V_dout;
                data_74_V_7_fu_852 <= data_stream_V_data_2_V_dout;
                data_75_V_7_fu_856 <= data_stream_V_data_3_V_dout;
                data_76_V_7_fu_860 <= data_stream_V_data_4_V_dout;
                data_77_V_7_fu_864 <= data_stream_V_data_5_V_dout;
                data_78_V_6_fu_868 <= data_stream_V_data_6_V_dout;
                data_79_V_7_fu_872 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_8_fu_876 <= data_stream_V_data_0_V_dout;
                data_73_V_8_fu_880 <= data_stream_V_data_1_V_dout;
                data_74_V_8_fu_884 <= data_stream_V_data_2_V_dout;
                data_75_V_8_fu_888 <= data_stream_V_data_3_V_dout;
                data_76_V_8_fu_892 <= data_stream_V_data_4_V_dout;
                data_77_V_8_fu_896 <= data_stream_V_data_5_V_dout;
                data_79_V_8_fu_900 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((i_in_0_reg_1059 = ap_const_lv4_9) or ((i_in_0_reg_1059 = ap_const_lv4_A) or ((i_in_0_reg_1059 = ap_const_lv4_B) or ((i_in_0_reg_1059 = ap_const_lv4_C) or ((i_in_0_reg_1059 = ap_const_lv4_D) or ((i_in_0_reg_1059 = ap_const_lv4_E) or (i_in_0_reg_1059 = ap_const_lv4_F))))))))) then
                data_72_V_9_fu_904 <= data_stream_V_data_0_V_dout;
                data_73_V_9_fu_908 <= data_stream_V_data_1_V_dout;
                data_74_V_9_fu_912 <= data_stream_V_data_2_V_dout;
                data_75_V_9_fu_916 <= data_stream_V_data_3_V_dout;
                data_76_V_9_fu_920 <= data_stream_V_data_4_V_dout;
                data_77_V_9_fu_924 <= data_stream_V_data_5_V_dout;
                data_78_V_7_fu_928 <= data_stream_V_data_6_V_dout;
                data_79_V_9_fu_932 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (i_in_0_reg_1059 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_72_V_fu_624 <= data_stream_V_data_0_V_dout;
                data_73_V_fu_628 <= data_stream_V_data_1_V_dout;
                data_74_V_fu_632 <= data_stream_V_data_2_V_dout;
                data_75_V_fu_636 <= data_stream_V_data_3_V_dout;
                data_76_V_fu_640 <= data_stream_V_data_4_V_dout;
                data_77_V_fu_644 <= data_stream_V_data_5_V_dout;
                data_78_V_fu_648 <= data_stream_V_data_6_V_dout;
                data_79_V_fu_652 <= data_stream_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_in_reg_2516 <= i_in_fu_1159_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln41_reg_2512 <= icmp_ln41_fu_1153_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, icmp_ln41_fu_1153_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, io_acc_block_signal_op418)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln41_fu_1153_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln41_fu_1153_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, io_acc_block_signal_op212)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op212 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, io_acc_block_signal_op212)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op212 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op212)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (io_acc_block_signal_op212 = ap_const_logic_0);
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln41_fu_1153_p2)
    begin
        if ((icmp_ln41_fu_1153_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_in_0_phi_fu_1063_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_in_0_reg_1059, icmp_ln41_reg_2512, i_in_reg_2516)
    begin
        if (((icmp_ln41_reg_2512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_in_0_phi_fu_1063_p4 <= i_in_reg_2516;
        else 
            ap_phi_mux_i_in_0_phi_fu_1063_p4 <= i_in_0_reg_1059;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_stream_V_data_0_V_blk_n_assign_proc : process(data_stream_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_0_V_blk_n <= data_stream_V_data_0_V_empty_n;
        else 
            data_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_1_V_blk_n_assign_proc : process(data_stream_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_1_V_blk_n <= data_stream_V_data_1_V_empty_n;
        else 
            data_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_2_V_blk_n_assign_proc : process(data_stream_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_2_V_blk_n <= data_stream_V_data_2_V_empty_n;
        else 
            data_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_3_V_blk_n_assign_proc : process(data_stream_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_3_V_blk_n <= data_stream_V_data_3_V_empty_n;
        else 
            data_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_4_V_blk_n_assign_proc : process(data_stream_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_4_V_blk_n <= data_stream_V_data_4_V_empty_n;
        else 
            data_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_5_V_blk_n_assign_proc : process(data_stream_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_5_V_blk_n <= data_stream_V_data_5_V_empty_n;
        else 
            data_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_6_V_blk_n_assign_proc : process(data_stream_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_6_V_blk_n <= data_stream_V_data_6_V_empty_n;
        else 
            data_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_stream_V_data_7_V_blk_n_assign_proc : process(data_stream_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_7_V_blk_n <= data_stream_V_data_7_V_empty_n;
        else 
            data_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_stream_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_stream_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_stream_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_in_fu_1159_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_in_0_phi_fu_1063_p4) + unsigned(ap_const_lv4_1));
    icmp_ln41_fu_1153_p2 <= "1" when (ap_phi_mux_i_in_0_phi_fu_1063_p4 = ap_const_lv4_A) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op212 <= (data_stream_V_data_7_V_empty_n and data_stream_V_data_6_V_empty_n and data_stream_V_data_5_V_empty_n and data_stream_V_data_4_V_empty_n and data_stream_V_data_3_V_empty_n and data_stream_V_data_2_V_empty_n and data_stream_V_data_1_V_empty_n and data_stream_V_data_0_V_empty_n);
    io_acc_block_signal_op418 <= (res_stream_V_data_9_V_full_n and res_stream_V_data_8_V_full_n and res_stream_V_data_7_V_full_n and res_stream_V_data_6_V_full_n and res_stream_V_data_5_V_full_n and res_stream_V_data_4_V_full_n and res_stream_V_data_3_V_full_n and res_stream_V_data_31_V_full_n and res_stream_V_data_30_V_full_n and res_stream_V_data_2_V_full_n and res_stream_V_data_29_V_full_n and res_stream_V_data_28_V_full_n and res_stream_V_data_27_V_full_n and res_stream_V_data_26_V_full_n and res_stream_V_data_25_V_full_n and res_stream_V_data_24_V_full_n and res_stream_V_data_23_V_full_n and res_stream_V_data_22_V_full_n and res_stream_V_data_21_V_full_n and res_stream_V_data_20_V_full_n and res_stream_V_data_1_V_full_n and res_stream_V_data_19_V_full_n and res_stream_V_data_18_V_full_n and res_stream_V_data_17_V_full_n and res_stream_V_data_16_V_full_n and res_stream_V_data_15_V_full_n and res_stream_V_data_14_V_full_n and res_stream_V_data_13_V_full_n and res_stream_V_data_12_V_full_n and res_stream_V_data_11_V_full_n and res_stream_V_data_10_V_full_n and res_stream_V_data_0_V_full_n);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_stream_V_data_0_V_blk_n_assign_proc : process(res_stream_V_data_0_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_0_V_blk_n <= res_stream_V_data_0_V_full_n;
        else 
            res_stream_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_0_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_0;

    res_stream_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_10_V_blk_n_assign_proc : process(res_stream_V_data_10_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_10_V_blk_n <= res_stream_V_data_10_V_full_n;
        else 
            res_stream_V_data_10_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_10_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_10;

    res_stream_V_data_10_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_10_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_10_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_11_V_blk_n_assign_proc : process(res_stream_V_data_11_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_11_V_blk_n <= res_stream_V_data_11_V_full_n;
        else 
            res_stream_V_data_11_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_11_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_11;

    res_stream_V_data_11_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_11_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_11_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_12_V_blk_n_assign_proc : process(res_stream_V_data_12_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_12_V_blk_n <= res_stream_V_data_12_V_full_n;
        else 
            res_stream_V_data_12_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_12_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_12;

    res_stream_V_data_12_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_12_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_12_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_13_V_blk_n_assign_proc : process(res_stream_V_data_13_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_13_V_blk_n <= res_stream_V_data_13_V_full_n;
        else 
            res_stream_V_data_13_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_13_V_din <= ap_const_lv16_FFE0;

    res_stream_V_data_13_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_13_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_13_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_14_V_blk_n_assign_proc : process(res_stream_V_data_14_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_14_V_blk_n <= res_stream_V_data_14_V_full_n;
        else 
            res_stream_V_data_14_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_14_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_13;

    res_stream_V_data_14_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_14_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_14_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_15_V_blk_n_assign_proc : process(res_stream_V_data_15_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_15_V_blk_n <= res_stream_V_data_15_V_full_n;
        else 
            res_stream_V_data_15_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_15_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_14;

    res_stream_V_data_15_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_15_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_15_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_16_V_blk_n_assign_proc : process(res_stream_V_data_16_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_16_V_blk_n <= res_stream_V_data_16_V_full_n;
        else 
            res_stream_V_data_16_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_16_V_din <= ap_const_lv16_0;

    res_stream_V_data_16_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_16_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_16_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_17_V_blk_n_assign_proc : process(res_stream_V_data_17_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_17_V_blk_n <= res_stream_V_data_17_V_full_n;
        else 
            res_stream_V_data_17_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_17_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_15;

    res_stream_V_data_17_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_17_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_17_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_18_V_blk_n_assign_proc : process(res_stream_V_data_18_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_18_V_blk_n <= res_stream_V_data_18_V_full_n;
        else 
            res_stream_V_data_18_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_18_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_16;

    res_stream_V_data_18_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_18_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_18_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_19_V_blk_n_assign_proc : process(res_stream_V_data_19_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_19_V_blk_n <= res_stream_V_data_19_V_full_n;
        else 
            res_stream_V_data_19_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_19_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_17;

    res_stream_V_data_19_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_19_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_19_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_1_V_blk_n_assign_proc : process(res_stream_V_data_1_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_1_V_blk_n <= res_stream_V_data_1_V_full_n;
        else 
            res_stream_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_1_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_1;

    res_stream_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_20_V_blk_n_assign_proc : process(res_stream_V_data_20_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_20_V_blk_n <= res_stream_V_data_20_V_full_n;
        else 
            res_stream_V_data_20_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_20_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_18;

    res_stream_V_data_20_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_20_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_20_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_21_V_blk_n_assign_proc : process(res_stream_V_data_21_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_21_V_blk_n <= res_stream_V_data_21_V_full_n;
        else 
            res_stream_V_data_21_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_21_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_19;

    res_stream_V_data_21_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_21_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_21_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_22_V_blk_n_assign_proc : process(res_stream_V_data_22_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_22_V_blk_n <= res_stream_V_data_22_V_full_n;
        else 
            res_stream_V_data_22_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_22_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_20;

    res_stream_V_data_22_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_22_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_22_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_23_V_blk_n_assign_proc : process(res_stream_V_data_23_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_23_V_blk_n <= res_stream_V_data_23_V_full_n;
        else 
            res_stream_V_data_23_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_23_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_21;

    res_stream_V_data_23_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_23_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_23_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_24_V_blk_n_assign_proc : process(res_stream_V_data_24_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_24_V_blk_n <= res_stream_V_data_24_V_full_n;
        else 
            res_stream_V_data_24_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_24_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_22;

    res_stream_V_data_24_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_24_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_24_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_25_V_blk_n_assign_proc : process(res_stream_V_data_25_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_25_V_blk_n <= res_stream_V_data_25_V_full_n;
        else 
            res_stream_V_data_25_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_25_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_23;

    res_stream_V_data_25_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_25_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_25_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_26_V_blk_n_assign_proc : process(res_stream_V_data_26_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_26_V_blk_n <= res_stream_V_data_26_V_full_n;
        else 
            res_stream_V_data_26_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_26_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_24;

    res_stream_V_data_26_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_26_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_26_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_27_V_blk_n_assign_proc : process(res_stream_V_data_27_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_27_V_blk_n <= res_stream_V_data_27_V_full_n;
        else 
            res_stream_V_data_27_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_27_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_25;

    res_stream_V_data_27_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_27_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_27_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_28_V_blk_n_assign_proc : process(res_stream_V_data_28_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_28_V_blk_n <= res_stream_V_data_28_V_full_n;
        else 
            res_stream_V_data_28_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_28_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_26;

    res_stream_V_data_28_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_28_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_28_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_29_V_blk_n_assign_proc : process(res_stream_V_data_29_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_29_V_blk_n <= res_stream_V_data_29_V_full_n;
        else 
            res_stream_V_data_29_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_29_V_din <= ap_const_lv16_FFE0;

    res_stream_V_data_29_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_29_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_29_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_2_V_blk_n_assign_proc : process(res_stream_V_data_2_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_2_V_blk_n <= res_stream_V_data_2_V_full_n;
        else 
            res_stream_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_2_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_2;

    res_stream_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_30_V_blk_n_assign_proc : process(res_stream_V_data_30_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_30_V_blk_n <= res_stream_V_data_30_V_full_n;
        else 
            res_stream_V_data_30_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_30_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_27;

    res_stream_V_data_30_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_30_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_30_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_31_V_blk_n_assign_proc : process(res_stream_V_data_31_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_31_V_blk_n <= res_stream_V_data_31_V_full_n;
        else 
            res_stream_V_data_31_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_31_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_28;

    res_stream_V_data_31_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_31_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_31_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_3_V_blk_n_assign_proc : process(res_stream_V_data_3_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_3_V_blk_n <= res_stream_V_data_3_V_full_n;
        else 
            res_stream_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_3_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_3;

    res_stream_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_4_V_blk_n_assign_proc : process(res_stream_V_data_4_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_4_V_blk_n <= res_stream_V_data_4_V_full_n;
        else 
            res_stream_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_4_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_4;

    res_stream_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_5_V_blk_n_assign_proc : process(res_stream_V_data_5_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_5_V_blk_n <= res_stream_V_data_5_V_full_n;
        else 
            res_stream_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_5_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_5;

    res_stream_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_6_V_blk_n_assign_proc : process(res_stream_V_data_6_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_6_V_blk_n <= res_stream_V_data_6_V_full_n;
        else 
            res_stream_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_6_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_6;

    res_stream_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_7_V_blk_n_assign_proc : process(res_stream_V_data_7_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_7_V_blk_n <= res_stream_V_data_7_V_full_n;
        else 
            res_stream_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_7_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_7;

    res_stream_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_8_V_blk_n_assign_proc : process(res_stream_V_data_8_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_8_V_blk_n <= res_stream_V_data_8_V_full_n;
        else 
            res_stream_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_8_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_8;

    res_stream_V_data_8_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_8_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_8_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_V_data_9_V_blk_n_assign_proc : process(res_stream_V_data_9_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_stream_V_data_9_V_blk_n <= res_stream_V_data_9_V_full_n;
        else 
            res_stream_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_V_data_9_V_din <= grp_dense_wrapper_ap_fixed_ap_fixed_16_6_5_3_0_config8_s_fu_1071_ap_return_9;

    res_stream_V_data_9_V_write_assign_proc : process(ap_CS_fsm_state5, io_acc_block_signal_op418)
    begin
        if (((io_acc_block_signal_op418 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            res_stream_V_data_9_V_write <= ap_const_logic_1;
        else 
            res_stream_V_data_9_V_write <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
