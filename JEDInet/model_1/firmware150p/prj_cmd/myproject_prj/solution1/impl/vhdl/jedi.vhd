-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jedi is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    I_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    I_ce0 : OUT STD_LOGIC;
    I_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Rr_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    Rr_ce0 : OUT STD_LOGIC;
    Rr_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Rr_T_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    Rr_T_ce0 : OUT STD_LOGIC;
    Rr_T_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Rs_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    Rs_ce0 : OUT STD_LOGIC;
    Rs_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    result_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    result_ce0 : OUT STD_LOGIC;
    result_we0 : OUT STD_LOGIC;
    result_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    result_ce1 : OUT STD_LOGIC;
    result_we1 : OUT STD_LOGIC;
    result_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of jedi is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "jedi,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.845000,HLS_SYN_LAT=1563800167,HLS_SYN_TPT=none,HLS_SYN_MEM=3102,HLS_SYN_DSP=10389,HLS_SYN_FF=1133758,HLS_SYN_LUT=790372,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal E_bar_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal E_bar_ce0 : STD_LOGIC;
    signal E_bar_we0 : STD_LOGIC;
    signal E_bar_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_top_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal B_top_ce0 : STD_LOGIC;
    signal B_top_we0 : STD_LOGIC;
    signal B_top_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_bot_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal B_bot_ce0 : STD_LOGIC;
    signal B_bot_we0 : STD_LOGIC;
    signal B_bot_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal B_ce0 : STD_LOGIC;
    signal B_we0 : STD_LOGIC;
    signal B_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal E_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal E_ce0 : STD_LOGIC;
    signal E_we0 : STD_LOGIC;
    signal E_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal C_ce0 : STD_LOGIC;
    signal C_we0 : STD_LOGIC;
    signal C_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal O_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal O_ce0 : STD_LOGIC;
    signal O_we0 : STD_LOGIC;
    signal O_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start : STD_LOGIC;
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_done : STD_LOGIC;
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_idle : STD_LOGIC;
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_ready : STD_LOGIC;
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_ce0 : STD_LOGIC;
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_ce0 : STD_LOGIC;
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_we0 : STD_LOGIC;
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start : STD_LOGIC;
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_done : STD_LOGIC;
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_idle : STD_LOGIC;
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_ready : STD_LOGIC;
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_ce0 : STD_LOGIC;
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_ce0 : STD_LOGIC;
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_we0 : STD_LOGIC;
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_idle : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_ready : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_ce0 : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_ce0 : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_we0 : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_ce1 : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_we1 : STD_LOGIC;
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_done : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_idle : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_ready : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data2_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_we0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_done : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_idle : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_ready : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data2_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_we0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_done : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_idle : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_ready : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data2_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_ce0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_we0 : STD_LOGIC;
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_done : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_idle : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_ready : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_ce0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_ce0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_ce0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_we0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_done : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_idle : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_ready : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_ce0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_ce0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_ce0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_we0 : STD_LOGIC;
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);

    component jedi_dnn1_float_float_dense1_config_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        B_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        E_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        E_ce0 : OUT STD_LOGIC;
        E_we0 : OUT STD_LOGIC;
        E_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_dnn2_float_float_dense2_config_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        O_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        O_ce0 : OUT STD_LOGIC;
        O_we0 : OUT STD_LOGIC;
        O_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_dnn3_float_float_dense3_config_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        O_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        O_ce0 : OUT STD_LOGIC;
        O_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        res_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        res_ce1 : OUT STD_LOGIC;
        res_we1 : OUT STD_LOGIC;
        res_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_multiply_float_float_mult_1_struct_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        data1_ce0 : OUT STD_LOGIC;
        data1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        data2_ce0 : OUT STD_LOGIC;
        data2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_multiply_float_float_mult_2_struct_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        data1_ce0 : OUT STD_LOGIC;
        data1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        data2_ce0 : OUT STD_LOGIC;
        data2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_multiply_float_float_mult_3_struct_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data1_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        data1_ce0 : OUT STD_LOGIC;
        data1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        data2_ce0 : OUT STD_LOGIC;
        data2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_concat_float_float_concat_1_struct_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        data1_ce0 : OUT STD_LOGIC;
        data1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data2_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        data2_ce0 : OUT STD_LOGIC;
        data2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_concat_float_float_concat_2_struct_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        data1_ce0 : OUT STD_LOGIC;
        data1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data2_ce0 : OUT STD_LOGIC;
        data2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_E_bar IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_B_top IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_B IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_E IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jedi_C IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    E_bar_U : component jedi_E_bar
    generic map (
        DataWidth => 32,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => E_bar_address0,
        ce0 => E_bar_ce0,
        we0 => E_bar_we0,
        d0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_d0,
        q0 => E_bar_q0);

    B_top_U : component jedi_B_top
    generic map (
        DataWidth => 32,
        AddressRange => 357600,
        AddressWidth => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_top_address0,
        ce0 => B_top_ce0,
        we0 => B_top_we0,
        d0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_d0,
        q0 => B_top_q0);

    B_bot_U : component jedi_B_top
    generic map (
        DataWidth => 32,
        AddressRange => 357600,
        AddressWidth => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_bot_address0,
        ce0 => B_bot_ce0,
        we0 => B_bot_we0,
        d0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_d0,
        q0 => B_bot_q0);

    B_U : component jedi_B
    generic map (
        DataWidth => 32,
        AddressRange => 715200,
        AddressWidth => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_address0,
        ce0 => B_ce0,
        we0 => B_we0,
        d0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_d0,
        q0 => B_q0);

    E_U : component jedi_E
    generic map (
        DataWidth => 32,
        AddressRange => 223500,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => E_address0,
        ce0 => E_ce0,
        we0 => E_we0,
        d0 => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_d0,
        q0 => E_q0);

    C_U : component jedi_C
    generic map (
        DataWidth => 32,
        AddressRange => 3900,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => C_address0,
        ce0 => C_ce0,
        we0 => C_we0,
        d0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_d0,
        q0 => C_q0);

    O_U : component jedi_E_bar
    generic map (
        DataWidth => 32,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => O_address0,
        ce0 => O_ce0,
        we0 => O_we0,
        d0 => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_d0,
        q0 => O_q0);

    grp_jedi_dnn1_float_float_dense1_config_s_fu_80 : component jedi_dnn1_float_float_dense1_config_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start,
        ap_done => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_done,
        ap_idle => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_idle,
        ap_ready => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_ready,
        B_address0 => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_address0,
        B_ce0 => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_ce0,
        B_q0 => B_q0,
        E_address0 => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_address0,
        E_ce0 => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_ce0,
        E_we0 => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_we0,
        E_d0 => grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_d0);

    grp_jedi_dnn2_float_float_dense2_config_s_fu_92 : component jedi_dnn2_float_float_dense2_config_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start,
        ap_done => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_done,
        ap_idle => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_idle,
        ap_ready => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_ready,
        C_address0 => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_address0,
        C_ce0 => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_ce0,
        C_q0 => C_q0,
        O_address0 => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_address0,
        O_ce0 => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_ce0,
        O_we0 => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_we0,
        O_d0 => grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_d0);

    grp_jedi_dnn3_float_float_dense3_config_s_fu_104 : component jedi_dnn3_float_float_dense3_config_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start,
        ap_done => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done,
        ap_idle => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_idle,
        ap_ready => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_ready,
        O_address0 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_address0,
        O_ce0 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_ce0,
        O_q0 => O_q0,
        res_address0 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_address0,
        res_ce0 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_ce0,
        res_we0 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_we0,
        res_d0 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_d0,
        res_address1 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_address1,
        res_ce1 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_ce1,
        res_we1 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_we1,
        res_d1 => grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_d1);

    grp_jedi_multiply_float_float_mult_1_struct_s_fu_117 : component jedi_multiply_float_float_mult_1_struct_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start,
        ap_done => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_done,
        ap_idle => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_idle,
        ap_ready => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_ready,
        data1_address0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_address0,
        data1_ce0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_ce0,
        data1_q0 => I_q0,
        data2_address0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data2_address0,
        data2_ce0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data2_ce0,
        data2_q0 => Rr_q0,
        res_address0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_address0,
        res_ce0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_ce0,
        res_we0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_we0,
        res_d0 => grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_d0);

    grp_jedi_multiply_float_float_mult_2_struct_s_fu_127 : component jedi_multiply_float_float_mult_2_struct_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start,
        ap_done => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_done,
        ap_idle => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_idle,
        ap_ready => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_ready,
        data1_address0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_address0,
        data1_ce0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_ce0,
        data1_q0 => I_q0,
        data2_address0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data2_address0,
        data2_ce0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data2_ce0,
        data2_q0 => Rs_q0,
        res_address0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_address0,
        res_ce0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_ce0,
        res_we0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_we0,
        res_d0 => grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_d0);

    grp_jedi_multiply_float_float_mult_3_struct_s_fu_136 : component jedi_multiply_float_float_mult_3_struct_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start,
        ap_done => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_done,
        ap_idle => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_idle,
        ap_ready => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_ready,
        data1_address0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_address0,
        data1_ce0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_ce0,
        data1_q0 => E_q0,
        data2_address0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data2_address0,
        data2_ce0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data2_ce0,
        data2_q0 => Rr_T_q0,
        res_address0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_address0,
        res_ce0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_ce0,
        res_we0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_we0,
        res_d0 => grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_d0);

    grp_jedi_concat_float_float_concat_1_struct_s_fu_144 : component jedi_concat_float_float_concat_1_struct_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start,
        ap_done => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_done,
        ap_idle => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_idle,
        ap_ready => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_ready,
        data1_address0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_address0,
        data1_ce0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_ce0,
        data1_q0 => B_top_q0,
        data2_address0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_address0,
        data2_ce0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_ce0,
        data2_q0 => B_bot_q0,
        res_address0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_address0,
        res_ce0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_ce0,
        res_we0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_we0,
        res_d0 => grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_d0);

    grp_jedi_concat_float_float_concat_2_struct_s_fu_151 : component jedi_concat_float_float_concat_2_struct_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start,
        ap_done => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_done,
        ap_idle => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_idle,
        ap_ready => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_ready,
        data1_address0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_address0,
        data1_ce0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_ce0,
        data1_q0 => I_q0,
        data2_address0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_address0,
        data2_ce0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_ce0,
        data2_q0 => E_bar_q0,
        res_address0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_address0,
        res_ce0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_ce0,
        res_we0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_we0,
        res_d0 => grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_ready = ap_const_logic_1)) then 
                    grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_done, grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_done, grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done, grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_done, grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_done, grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_done, grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_done, grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_done, ap_CS_fsm_state8, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    B_address0_assign_proc : process(grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_address0, grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_address0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_address0 <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_address0 <= grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_address0;
        else 
            B_address0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    B_bot_address0_assign_proc : process(grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_address0, grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_bot_address0 <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            B_bot_address0 <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_address0;
        else 
            B_bot_address0 <= "XXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    B_bot_ce0_assign_proc : process(grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_ce0, grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_bot_ce0 <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            B_bot_ce0 <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_ce0;
        else 
            B_bot_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_bot_we0_assign_proc : process(grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            B_bot_we0 <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_res_we0;
        else 
            B_bot_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_ce0_assign_proc : process(grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_ce0, grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_ce0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_ce0 <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            B_ce0 <= grp_jedi_dnn1_float_float_dense1_config_s_fu_80_B_ce0;
        else 
            B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_top_address0_assign_proc : process(grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_address0, grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_top_address0 <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            B_top_address0 <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_address0;
        else 
            B_top_address0 <= "XXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    B_top_ce0_assign_proc : process(grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_ce0, grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_top_ce0 <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_data1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            B_top_ce0 <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_ce0;
        else 
            B_top_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_top_we0_assign_proc : process(grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            B_top_we0 <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_res_we0;
        else 
            B_top_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_we0_assign_proc : process(grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            B_we0 <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_res_we0;
        else 
            B_we0 <= ap_const_logic_0;
        end if; 
    end process;


    C_address0_assign_proc : process(grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_address0, grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_address0, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            C_address0 <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            C_address0 <= grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_address0;
        else 
            C_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    C_ce0_assign_proc : process(grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_ce0, grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_ce0, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            C_ce0 <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            C_ce0 <= grp_jedi_dnn2_float_float_dense2_config_s_fu_92_C_ce0;
        else 
            C_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    C_we0_assign_proc : process(grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            C_we0 <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_res_we0;
        else 
            C_we0 <= ap_const_logic_0;
        end if; 
    end process;


    E_address0_assign_proc : process(grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_address0, grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_address0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            E_address0 <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            E_address0 <= grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_address0;
        else 
            E_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    E_bar_address0_assign_proc : process(grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_address0, grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_address0, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            E_bar_address0 <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            E_bar_address0 <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_address0;
        else 
            E_bar_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    E_bar_ce0_assign_proc : process(grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_ce0, grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_ce0, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            E_bar_ce0 <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            E_bar_ce0 <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_ce0;
        else 
            E_bar_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    E_bar_we0_assign_proc : process(grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            E_bar_we0 <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_res_we0;
        else 
            E_bar_we0 <= ap_const_logic_0;
        end if; 
    end process;


    E_ce0_assign_proc : process(grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_ce0, grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            E_ce0 <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            E_ce0 <= grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_ce0;
        else 
            E_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    E_we0_assign_proc : process(grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            E_we0 <= grp_jedi_dnn1_float_float_dense1_config_s_fu_80_E_we0;
        else 
            E_we0 <= ap_const_logic_0;
        end if; 
    end process;


    I_address0_assign_proc : process(grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_address0, grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_address0, grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            I_address0 <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            I_address0 <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            I_address0 <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_address0;
        else 
            I_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    I_ce0_assign_proc : process(grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_ce0, grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_ce0, grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            I_ce0 <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_data1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            I_ce0 <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            I_ce0 <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data1_ce0;
        else 
            I_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    O_address0_assign_proc : process(grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_address0, grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_address0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            O_address0 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            O_address0 <= grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_address0;
        else 
            O_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    O_ce0_assign_proc : process(grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_ce0, grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_ce0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            O_ce0 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_O_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            O_ce0 <= grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_ce0;
        else 
            O_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    O_we0_assign_proc : process(grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_we0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            O_we0 <= grp_jedi_dnn2_float_float_dense2_config_s_fu_92_O_we0;
        else 
            O_we0 <= ap_const_logic_0;
        end if; 
    end process;

    Rr_T_address0 <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data2_address0;
    Rr_T_ce0 <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_data2_ce0;
    Rr_address0 <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data2_address0;
    Rr_ce0 <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_data2_ce0;
    Rs_address0 <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data2_address0;
    Rs_ce0 <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_data2_ce0;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start <= grp_jedi_concat_float_float_concat_1_struct_s_fu_144_ap_start_reg;
    grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start <= grp_jedi_concat_float_float_concat_2_struct_s_fu_151_ap_start_reg;
    grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start <= grp_jedi_dnn1_float_float_dense1_config_s_fu_80_ap_start_reg;
    grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start <= grp_jedi_dnn2_float_float_dense2_config_s_fu_92_ap_start_reg;
    grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_ap_start_reg;
    grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start <= grp_jedi_multiply_float_float_mult_1_struct_s_fu_117_ap_start_reg;
    grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start <= grp_jedi_multiply_float_float_mult_2_struct_s_fu_127_ap_start_reg;
    grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start <= grp_jedi_multiply_float_float_mult_3_struct_s_fu_136_ap_start_reg;
    result_address0 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_address0;
    result_address1 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_address1;
    result_ce0 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_ce0;
    result_ce1 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_ce1;
    result_d0 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_d0;
    result_d1 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_d1;
    result_we0 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_we0;
    result_we1 <= grp_jedi_dnn3_float_float_dense3_config_s_fu_104_res_we1;
end behav;
