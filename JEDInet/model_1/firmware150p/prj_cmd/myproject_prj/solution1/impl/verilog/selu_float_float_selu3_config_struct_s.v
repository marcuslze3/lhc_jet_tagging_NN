// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module selu_float_float_selu3_config_struct_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_read,
        data_1_read,
        data_2_read,
        data_3_read,
        data_4_read,
        res_address0,
        res_ce0,
        res_we0,
        res_d0,
        res_address1,
        res_ce1,
        res_we1,
        res_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] data_0_read;
input  [31:0] data_1_read;
input  [31:0] data_2_read;
input  [31:0] data_3_read;
input  [31:0] data_4_read;
output  [2:0] res_address0;
output   res_ce0;
output   res_we0;
output  [31:0] res_d0;
output  [2:0] res_address1;
output   res_ce1;
output   res_we1;
output  [31:0] res_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] res_address0;
reg res_ce0;
reg res_we0;
reg[31:0] res_d0;
reg[2:0] res_address1;
reg res_ce1;
reg res_we1;
reg[31:0] res_d1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg   [9:0] selu_table5_address0;
reg    selu_table5_ce0;
wire   [31:0] selu_table5_q0;
reg   [9:0] selu_table5_address1;
reg    selu_table5_ce1;
wire   [31:0] selu_table5_q1;
wire   [31:0] grp_fu_274_p2;
reg   [31:0] reg_312;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] and_ln776_reg_1462;
reg   [31:0] reg_312_pp0_iter2_reg;
wire   [31:0] grp_fu_280_p2;
reg   [31:0] reg_318;
reg   [0:0] and_ln776_1_reg_1466;
reg   [31:0] reg_318_pp0_iter2_reg;
reg   [31:0] reg_324;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] and_ln776_2_reg_1477;
reg   [31:0] reg_324_pp0_iter2_reg;
reg   [31:0] reg_330;
reg   [0:0] and_ln776_3_reg_1481;
reg   [31:0] reg_330_pp0_iter2_reg;
reg   [31:0] reg_336;
reg   [0:0] and_ln776_4_reg_1485;
reg   [31:0] reg_336_pp0_iter2_reg;
wire   [31:0] grp_fu_286_p2;
reg   [31:0] reg_342;
reg   [0:0] and_ln776_reg_1462_pp0_iter1_reg;
reg   [0:0] and_ln776_2_reg_1477_pp0_iter1_reg;
wire   [31:0] grp_fu_291_p2;
reg   [31:0] reg_346;
reg   [0:0] and_ln776_1_reg_1466_pp0_iter1_reg;
reg   [0:0] and_ln776_3_reg_1481_pp0_iter1_reg;
reg   [31:0] data_1_read_1_reg_1434;
reg   [31:0] data_0_read_1_reg_1441;
reg   [31:0] data_3_read_1_reg_1448;
reg   [31:0] data_2_read_1_reg_1455;
wire   [0:0] and_ln776_fu_385_p2;
reg   [0:0] and_ln776_reg_1462_pp0_iter2_reg;
wire   [0:0] and_ln776_1_fu_426_p2;
reg   [0:0] and_ln776_1_reg_1466_pp0_iter2_reg;
reg   [31:0] data_4_read_1_reg_1470;
wire   [0:0] and_ln776_2_fu_467_p2;
reg   [0:0] and_ln776_2_reg_1477_pp0_iter2_reg;
wire   [0:0] and_ln776_3_fu_508_p2;
reg   [0:0] and_ln776_3_reg_1481_pp0_iter2_reg;
wire   [0:0] and_ln776_4_fu_549_p2;
reg   [0:0] and_ln776_4_reg_1485_pp0_iter2_reg;
reg   [0:0] and_ln776_4_reg_1485_pp0_iter3_reg;
wire   [9:0] select_ln780_fu_719_p3;
reg   [9:0] select_ln780_reg_1489;
wire   [9:0] select_ln780_1_fu_891_p3;
reg   [9:0] select_ln780_1_reg_1494;
wire   [9:0] select_ln780_2_fu_1071_p3;
reg   [9:0] select_ln780_2_reg_1509;
wire   [9:0] select_ln780_3_fu_1243_p3;
reg   [9:0] select_ln780_3_reg_1514;
reg   [31:0] x_assign_4_reg_1519;
wire   [9:0] select_ln780_4_fu_1422_p3;
reg   [9:0] select_ln780_4_reg_1534;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
reg   [31:0] ap_port_reg_data_2_read;
reg   [31:0] ap_port_reg_data_3_read;
reg   [31:0] ap_port_reg_data_4_read;
wire   [63:0] zext_ln781_fu_899_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln781_1_fu_903_p1;
wire   [2:0] res_addr_1_gep_fu_164_p3;
wire   [2:0] res_addr_3_gep_fu_187_p3;
wire   [63:0] zext_ln781_2_fu_1251_p1;
wire   [63:0] zext_ln781_3_fu_1255_p1;
wire    ap_block_pp0_stage1;
wire   [2:0] res_addr_5_gep_fu_221_p3;
wire   [2:0] res_addr_7_gep_fu_239_p3;
wire   [63:0] zext_ln781_4_fu_1430_p1;
wire   [2:0] res_addr_9_gep_fu_265_p3;
reg   [31:0] grp_fu_274_p0;
reg   [31:0] grp_fu_274_p1;
reg   [31:0] grp_fu_280_p0;
reg   [31:0] grp_fu_280_p1;
reg   [31:0] grp_fu_286_p0;
reg   [31:0] grp_fu_291_p0;
reg   [31:0] grp_fu_297_p0;
reg   [31:0] grp_fu_303_p0;
wire   [31:0] bitcast_ln776_fu_350_p1;
wire   [7:0] tmp_2_fu_353_p4;
wire   [22:0] trunc_ln776_fu_363_p1;
wire   [0:0] icmp_ln776_1_fu_373_p2;
wire   [0:0] icmp_ln776_fu_367_p2;
wire   [0:0] or_ln776_fu_379_p2;
wire   [0:0] grp_fu_297_p2;
wire   [31:0] bitcast_ln776_1_fu_391_p1;
wire   [7:0] tmp_5_fu_394_p4;
wire   [22:0] trunc_ln776_1_fu_404_p1;
wire   [0:0] icmp_ln776_3_fu_414_p2;
wire   [0:0] icmp_ln776_2_fu_408_p2;
wire   [0:0] or_ln776_1_fu_420_p2;
wire   [0:0] grp_fu_303_p2;
wire   [31:0] bitcast_ln776_2_fu_432_p1;
wire   [7:0] tmp_7_fu_435_p4;
wire   [22:0] trunc_ln776_2_fu_445_p1;
wire   [0:0] icmp_ln776_5_fu_455_p2;
wire   [0:0] icmp_ln776_4_fu_449_p2;
wire   [0:0] or_ln776_2_fu_461_p2;
wire   [31:0] bitcast_ln776_3_fu_473_p1;
wire   [7:0] tmp_9_fu_476_p4;
wire   [22:0] trunc_ln776_3_fu_486_p1;
wire   [0:0] icmp_ln776_7_fu_496_p2;
wire   [0:0] icmp_ln776_6_fu_490_p2;
wire   [0:0] or_ln776_3_fu_502_p2;
wire   [31:0] bitcast_ln776_4_fu_514_p1;
wire   [7:0] tmp_10_fu_517_p4;
wire   [22:0] trunc_ln776_4_fu_527_p1;
wire   [0:0] icmp_ln776_9_fu_537_p2;
wire   [0:0] icmp_ln776_8_fu_531_p2;
wire   [0:0] or_ln776_4_fu_543_p2;
wire   [31:0] p_Val2_s_fu_555_p1;
wire   [22:0] tmp_V_1_fu_577_p1;
wire   [24:0] mantissa_V_fu_581_p4;
wire   [7:0] tmp_V_fu_567_p4;
wire   [8:0] zext_ln339_fu_595_p1;
wire   [8:0] add_ln339_fu_599_p2;
wire   [7:0] sub_ln1311_fu_613_p2;
wire   [0:0] isNeg_fu_605_p3;
wire  signed [8:0] sext_ln1311_fu_619_p1;
wire  signed [8:0] ush_fu_623_p3;
wire  signed [31:0] sext_ln1311_1_fu_631_p1;
wire  signed [24:0] sext_ln1311_10_fu_635_p1;
wire   [78:0] zext_ln682_fu_591_p1;
wire   [78:0] zext_ln1287_fu_639_p1;
wire   [24:0] r_V_fu_643_p2;
wire   [0:0] tmp_15_fu_655_p3;
wire   [78:0] r_V_1_fu_649_p2;
wire   [31:0] zext_ln662_fu_663_p1;
wire   [31:0] tmp_12_fu_667_p4;
wire   [31:0] p_Val2_25_fu_677_p3;
wire   [0:0] p_Result_s_fu_559_p3;
wire   [31:0] result_V_1_fu_685_p2;
wire   [31:0] p_Val2_26_fu_691_p3;
wire   [21:0] tmp_17_fu_703_p4;
wire   [0:0] icmp_ln780_fu_713_p2;
wire   [9:0] trunc_ln789_fu_699_p1;
wire   [31:0] p_Val2_5_fu_727_p1;
wire   [22:0] tmp_V_3_fu_749_p1;
wire   [24:0] mantissa_V_1_fu_753_p4;
wire   [7:0] tmp_V_2_fu_739_p4;
wire   [8:0] zext_ln339_1_fu_767_p1;
wire   [8:0] add_ln339_1_fu_771_p2;
wire   [7:0] sub_ln1311_1_fu_785_p2;
wire   [0:0] isNeg_1_fu_777_p3;
wire  signed [8:0] sext_ln1311_2_fu_791_p1;
wire  signed [8:0] ush_1_fu_795_p3;
wire  signed [31:0] sext_ln1311_3_fu_803_p1;
wire  signed [24:0] sext_ln1311_11_fu_807_p1;
wire   [78:0] zext_ln682_1_fu_763_p1;
wire   [78:0] zext_ln1287_1_fu_811_p1;
wire   [24:0] r_V_2_fu_815_p2;
wire   [0:0] tmp_23_fu_827_p3;
wire   [78:0] r_V_3_fu_821_p2;
wire   [31:0] zext_ln662_1_fu_835_p1;
wire   [31:0] tmp_13_fu_839_p4;
wire   [31:0] p_Val2_27_fu_849_p3;
wire   [0:0] p_Result_1_fu_731_p3;
wire   [31:0] result_V_3_fu_857_p2;
wire   [31:0] p_Val2_28_fu_863_p3;
wire   [21:0] tmp_24_fu_875_p4;
wire   [0:0] icmp_ln780_1_fu_885_p2;
wire   [9:0] trunc_ln789_1_fu_871_p1;
wire   [31:0] p_Val2_10_fu_907_p1;
wire   [22:0] tmp_V_5_fu_929_p1;
wire   [24:0] mantissa_V_2_fu_933_p4;
wire   [7:0] tmp_V_4_fu_919_p4;
wire   [8:0] zext_ln339_2_fu_947_p1;
wire   [8:0] add_ln339_2_fu_951_p2;
wire   [7:0] sub_ln1311_2_fu_965_p2;
wire   [0:0] isNeg_2_fu_957_p3;
wire  signed [8:0] sext_ln1311_4_fu_971_p1;
wire  signed [8:0] ush_2_fu_975_p3;
wire  signed [31:0] sext_ln1311_5_fu_983_p1;
wire  signed [24:0] sext_ln1311_12_fu_987_p1;
wire   [78:0] zext_ln682_2_fu_943_p1;
wire   [78:0] zext_ln1287_2_fu_991_p1;
wire   [24:0] r_V_4_fu_995_p2;
wire   [0:0] tmp_27_fu_1007_p3;
wire   [78:0] r_V_5_fu_1001_p2;
wire   [31:0] zext_ln662_2_fu_1015_p1;
wire   [31:0] tmp_14_fu_1019_p4;
wire   [31:0] p_Val2_29_fu_1029_p3;
wire   [0:0] p_Result_2_fu_911_p3;
wire   [31:0] result_V_5_fu_1037_p2;
wire   [31:0] p_Val2_30_fu_1043_p3;
wire   [21:0] tmp_28_fu_1055_p4;
wire   [0:0] icmp_ln780_2_fu_1065_p2;
wire   [9:0] trunc_ln789_2_fu_1051_p1;
wire   [31:0] p_Val2_15_fu_1079_p1;
wire   [22:0] tmp_V_7_fu_1101_p1;
wire   [24:0] mantissa_V_3_fu_1105_p4;
wire   [7:0] tmp_V_6_fu_1091_p4;
wire   [8:0] zext_ln339_3_fu_1119_p1;
wire   [8:0] add_ln339_3_fu_1123_p2;
wire   [7:0] sub_ln1311_3_fu_1137_p2;
wire   [0:0] isNeg_3_fu_1129_p3;
wire  signed [8:0] sext_ln1311_6_fu_1143_p1;
wire  signed [8:0] ush_3_fu_1147_p3;
wire  signed [31:0] sext_ln1311_7_fu_1155_p1;
wire  signed [24:0] sext_ln1311_13_fu_1159_p1;
wire   [78:0] zext_ln682_3_fu_1115_p1;
wire   [78:0] zext_ln1287_3_fu_1163_p1;
wire   [24:0] r_V_6_fu_1167_p2;
wire   [0:0] tmp_31_fu_1179_p3;
wire   [78:0] r_V_7_fu_1173_p2;
wire   [31:0] zext_ln662_3_fu_1187_p1;
wire   [31:0] tmp_16_fu_1191_p4;
wire   [31:0] p_Val2_31_fu_1201_p3;
wire   [0:0] p_Result_3_fu_1083_p3;
wire   [31:0] result_V_7_fu_1209_p2;
wire   [31:0] p_Val2_32_fu_1215_p3;
wire   [21:0] tmp_32_fu_1227_p4;
wire   [0:0] icmp_ln780_3_fu_1237_p2;
wire   [9:0] trunc_ln789_3_fu_1223_p1;
wire   [31:0] p_Val2_20_fu_1259_p1;
wire   [22:0] tmp_V_9_fu_1280_p1;
wire   [24:0] mantissa_V_4_fu_1284_p4;
wire   [7:0] tmp_V_8_fu_1270_p4;
wire   [8:0] zext_ln339_4_fu_1298_p1;
wire   [8:0] add_ln339_4_fu_1302_p2;
wire   [7:0] sub_ln1311_4_fu_1316_p2;
wire   [0:0] isNeg_4_fu_1308_p3;
wire  signed [8:0] sext_ln1311_8_fu_1322_p1;
wire  signed [8:0] ush_4_fu_1326_p3;
wire  signed [31:0] sext_ln1311_9_fu_1334_p1;
wire  signed [24:0] sext_ln1311_14_fu_1338_p1;
wire   [78:0] zext_ln682_4_fu_1294_p1;
wire   [78:0] zext_ln1287_4_fu_1342_p1;
wire   [24:0] r_V_8_fu_1346_p2;
wire   [0:0] tmp_35_fu_1358_p3;
wire   [78:0] r_V_9_fu_1352_p2;
wire   [31:0] zext_ln662_4_fu_1366_p1;
wire   [31:0] tmp_18_fu_1370_p4;
wire   [31:0] p_Val2_33_fu_1380_p3;
wire   [0:0] p_Result_4_fu_1262_p3;
wire   [31:0] result_V_9_fu_1388_p2;
wire   [31:0] p_Val2_34_fu_1394_p3;
wire   [21:0] tmp_36_fu_1406_p4;
wire   [0:0] icmp_ln780_4_fu_1416_p2;
wire   [9:0] trunc_ln789_4_fu_1402_p1;
reg    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
reg   [2:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1169;
reg    ap_condition_1172;
reg    ap_condition_1176;
reg    ap_condition_1179;
reg    ap_condition_1183;
reg    ap_condition_1186;
reg    ap_condition_1189;
reg    ap_condition_1192;
reg    ap_condition_1196;
reg    ap_condition_1199;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

selu_float_float_selu1_config_struct_s_selu_table26 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
selu_table5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(selu_table5_address0),
    .ce0(selu_table5_ce0),
    .q0(selu_table5_q0),
    .address1(selu_table5_address1),
    .ce1(selu_table5_ce1),
    .q1(selu_table5_q1)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U4564(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_274_p0),
    .din1(grp_fu_274_p1),
    .ce(1'b1),
    .dout(grp_fu_274_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U4565(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_280_p0),
    .din1(grp_fu_280_p1),
    .ce(1'b1),
    .dout(grp_fu_280_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U4566(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_286_p0),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U4567(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_291_p0),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_291_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U4568(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_297_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U4569(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_303_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_303_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln776_1_reg_1466 <= and_ln776_1_fu_426_p2;
        and_ln776_1_reg_1466_pp0_iter1_reg <= and_ln776_1_reg_1466;
        and_ln776_1_reg_1466_pp0_iter2_reg <= and_ln776_1_reg_1466_pp0_iter1_reg;
        and_ln776_reg_1462 <= and_ln776_fu_385_p2;
        and_ln776_reg_1462_pp0_iter1_reg <= and_ln776_reg_1462;
        and_ln776_reg_1462_pp0_iter2_reg <= and_ln776_reg_1462_pp0_iter1_reg;
        data_2_read_1_reg_1455 <= ap_port_reg_data_2_read;
        data_3_read_1_reg_1448 <= ap_port_reg_data_3_read;
        reg_324_pp0_iter2_reg <= reg_324;
        reg_330_pp0_iter2_reg <= reg_330;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        and_ln776_2_reg_1477 <= and_ln776_2_fu_467_p2;
        and_ln776_2_reg_1477_pp0_iter1_reg <= and_ln776_2_reg_1477;
        and_ln776_2_reg_1477_pp0_iter2_reg <= and_ln776_2_reg_1477_pp0_iter1_reg;
        and_ln776_3_reg_1481 <= and_ln776_3_fu_508_p2;
        and_ln776_3_reg_1481_pp0_iter1_reg <= and_ln776_3_reg_1481;
        and_ln776_3_reg_1481_pp0_iter2_reg <= and_ln776_3_reg_1481_pp0_iter1_reg;
        data_4_read_1_reg_1470 <= ap_port_reg_data_4_read;
        reg_336_pp0_iter2_reg <= reg_336;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln776_4_reg_1485 <= and_ln776_4_fu_549_p2;
        and_ln776_4_reg_1485_pp0_iter2_reg <= and_ln776_4_reg_1485;
        and_ln776_4_reg_1485_pp0_iter3_reg <= and_ln776_4_reg_1485_pp0_iter2_reg;
        data_0_read_1_reg_1441 <= data_0_read;
        data_1_read_1_reg_1434 <= data_1_read;
        reg_312_pp0_iter2_reg <= reg_312;
        reg_318_pp0_iter2_reg <= reg_318;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_port_reg_data_2_read <= data_2_read;
        ap_port_reg_data_3_read <= data_3_read;
        ap_port_reg_data_4_read <= data_4_read;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == and_ln776_reg_1462) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln776_reg_1462) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_312 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_1_reg_1466)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_1_reg_1466)))) begin
        reg_318 <= grp_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln776_2_reg_1477)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_2_reg_1477)))) begin
        reg_324 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln776_3_reg_1481)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_3_reg_1481)))) begin
        reg_330 <= grp_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd1 == and_ln776_4_reg_1485)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd0 == and_ln776_4_reg_1485)))) begin
        reg_336 <= grp_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_reg_1462_pp0_iter1_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_2_reg_1477_pp0_iter1_reg)))) begin
        reg_342 <= grp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_1_reg_1466_pp0_iter1_reg)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_3_reg_1481_pp0_iter1_reg)))) begin
        reg_346 <= grp_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_1_reg_1466_pp0_iter1_reg))) begin
        select_ln780_1_reg_1494 <= select_ln780_1_fu_891_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln776_2_reg_1477_pp0_iter1_reg))) begin
        select_ln780_2_reg_1509 <= select_ln780_2_fu_1071_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln776_3_reg_1481_pp0_iter1_reg))) begin
        select_ln780_3_reg_1514 <= select_ln780_3_fu_1243_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_4_reg_1485_pp0_iter2_reg))) begin
        select_ln780_4_reg_1534 <= select_ln780_4_fu_1422_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_reg_1462_pp0_iter1_reg))) begin
        select_ln780_reg_1489 <= select_ln780_fu_719_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd0 == and_ln776_4_reg_1485_pp0_iter2_reg))) begin
        x_assign_4_reg_1519 <= grp_fu_280_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_4_fu_549_p2)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_4_fu_549_p2)))) begin
        grp_fu_274_p0 = data_4_read_1_reg_1470;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln776_2_fu_467_p2)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd0 == and_ln776_2_fu_467_p2)))) begin
        grp_fu_274_p0 = data_2_read_1_reg_1455;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_fu_385_p2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_fu_385_p2)))) begin
        grp_fu_274_p0 = data_0_read_1_reg_1441;
    end else begin
        grp_fu_274_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln776_2_fu_467_p2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_fu_385_p2)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_4_fu_549_p2)))) begin
        grp_fu_274_p1 = 32'd1065778527;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd0 == and_ln776_2_fu_467_p2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_fu_385_p2)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_4_fu_549_p2)))) begin
        grp_fu_274_p1 = 32'd1149239296;
    end else begin
        grp_fu_274_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_280_p0 = reg_336;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln776_3_fu_508_p2)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd0 == and_ln776_3_fu_508_p2)))) begin
        grp_fu_280_p0 = data_3_read_1_reg_1448;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_1_fu_426_p2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_1_fu_426_p2)))) begin
        grp_fu_280_p0 = data_1_read_1_reg_1434;
    end else begin
        grp_fu_280_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_280_p1 = 32'd3187671040;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln776_3_fu_508_p2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_1_fu_426_p2)))) begin
        grp_fu_280_p1 = 32'd1065778527;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd0 == and_ln776_3_fu_508_p2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_1_fu_426_p2)))) begin
        grp_fu_280_p1 = 32'd1149239296;
    end else begin
        grp_fu_280_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_286_p0 = reg_324;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_286_p0 = reg_312;
        end else begin
            grp_fu_286_p0 = 'bx;
        end
    end else begin
        grp_fu_286_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_291_p0 = reg_330;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_291_p0 = reg_318;
        end else begin
            grp_fu_291_p0 = 'bx;
        end
    end else begin
        grp_fu_291_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_297_p0 = ap_port_reg_data_4_read;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_297_p0 = ap_port_reg_data_2_read;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_297_p0 = data_0_read;
        end else begin
            grp_fu_297_p0 = 'bx;
        end
    end else begin
        grp_fu_297_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_303_p0 = ap_port_reg_data_3_read;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_303_p0 = data_1_read;
        end else begin
            grp_fu_303_p0 = 'bx;
        end
    end else begin
        grp_fu_303_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if ((1'b1 == ap_condition_1186)) begin
            res_address0 = res_addr_9_gep_fu_265_p3;
        end else if ((1'b1 == ap_condition_1183)) begin
            res_address0 = 64'd4;
        end else if ((1'b1 == ap_condition_1179)) begin
            res_address0 = res_addr_5_gep_fu_221_p3;
        end else if ((1'b1 == ap_condition_1176)) begin
            res_address0 = 64'd2;
        end else if ((1'b1 == ap_condition_1172)) begin
            res_address0 = res_addr_1_gep_fu_164_p3;
        end else if ((1'b1 == ap_condition_1169)) begin
            res_address0 = 64'd0;
        end else begin
            res_address0 = 'bx;
        end
    end else begin
        res_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if ((1'b1 == ap_condition_1199)) begin
            res_address1 = res_addr_7_gep_fu_239_p3;
        end else if ((1'b1 == ap_condition_1196)) begin
            res_address1 = 64'd3;
        end else if ((1'b1 == ap_condition_1192)) begin
            res_address1 = res_addr_3_gep_fu_187_p3;
        end else if ((1'b1 == ap_condition_1189)) begin
            res_address1 = 64'd1;
        end else begin
            res_address1 = 'bx;
        end
    end else begin
        res_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_4_reg_1485_pp0_iter3_reg)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_4_reg_1485_pp0_iter3_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_reg_1462_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_reg_1462_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln776_2_reg_1477_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_2_reg_1477_pp0_iter2_reg)))) begin
        res_ce0 = 1'b1;
    end else begin
        res_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_1_reg_1466_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_1_reg_1466_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln776_3_reg_1481_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_3_reg_1481_pp0_iter2_reg)))) begin
        res_ce1 = 1'b1;
    end else begin
        res_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_4_reg_1485_pp0_iter3_reg))) begin
        res_d0 = reg_336_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_2_reg_1477_pp0_iter2_reg))) begin
        res_d0 = reg_324_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_reg_1462_pp0_iter2_reg))) begin
        res_d0 = reg_312_pp0_iter2_reg;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_4_reg_1485_pp0_iter3_reg)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_reg_1462_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_2_reg_1477_pp0_iter2_reg)))) begin
        res_d0 = selu_table5_q0;
    end else begin
        res_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_3_reg_1481_pp0_iter2_reg))) begin
        res_d1 = reg_330_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_1_reg_1466_pp0_iter2_reg))) begin
        res_d1 = reg_318_pp0_iter2_reg;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_1_reg_1466_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_3_reg_1481_pp0_iter2_reg)))) begin
        res_d1 = selu_table5_q1;
    end else begin
        res_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_4_reg_1485_pp0_iter3_reg)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_4_reg_1485_pp0_iter3_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_reg_1462_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_reg_1462_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln776_2_reg_1477_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_2_reg_1477_pp0_iter2_reg)))) begin
        res_we0 = 1'b1;
    end else begin
        res_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_1_reg_1466_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_1_reg_1466_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln776_3_reg_1481_pp0_iter2_reg)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln776_3_reg_1481_pp0_iter2_reg)))) begin
        res_we1 = 1'b1;
    end else begin
        res_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        selu_table5_address0 = zext_ln781_4_fu_1430_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        selu_table5_address0 = zext_ln781_2_fu_1251_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        selu_table5_address0 = zext_ln781_fu_899_p1;
    end else begin
        selu_table5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        selu_table5_address1 = zext_ln781_3_fu_1255_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        selu_table5_address1 = zext_ln781_1_fu_903_p1;
    end else begin
        selu_table5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        selu_table5_ce0 = 1'b1;
    end else begin
        selu_table5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        selu_table5_ce1 = 1'b1;
    end else begin
        selu_table5_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((((1'b0 == ap_block_pp0_stage2_subdone) & (ap_reset_idle_pp0 == 1'b0)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_reset_idle_pp0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln339_1_fu_771_p2 = ($signed(9'd385) + $signed(zext_ln339_1_fu_767_p1));

assign add_ln339_2_fu_951_p2 = ($signed(9'd385) + $signed(zext_ln339_2_fu_947_p1));

assign add_ln339_3_fu_1123_p2 = ($signed(9'd385) + $signed(zext_ln339_3_fu_1119_p1));

assign add_ln339_4_fu_1302_p2 = ($signed(9'd385) + $signed(zext_ln339_4_fu_1298_p1));

assign add_ln339_fu_599_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_595_p1));

assign and_ln776_1_fu_426_p2 = (or_ln776_1_fu_420_p2 & grp_fu_303_p2);

assign and_ln776_2_fu_467_p2 = (or_ln776_2_fu_461_p2 & grp_fu_297_p2);

assign and_ln776_3_fu_508_p2 = (or_ln776_3_fu_502_p2 & grp_fu_303_p2);

assign and_ln776_4_fu_549_p2 = (or_ln776_4_fu_543_p2 & grp_fu_297_p2);

assign and_ln776_fu_385_p2 = (or_ln776_fu_379_p2 & grp_fu_297_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1169 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_reg_1462_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_1172 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_reg_1462_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_1176 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_2_reg_1477_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_1179 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_2_reg_1477_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_1183 = ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln776_4_reg_1485_pp0_iter3_reg));
end

always @ (*) begin
    ap_condition_1186 = ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd1 == and_ln776_4_reg_1485_pp0_iter3_reg));
end

always @ (*) begin
    ap_condition_1189 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln776_1_reg_1466_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_1192 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln776_1_reg_1466_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_1196 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln776_3_reg_1481_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_1199 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln776_3_reg_1481_pp0_iter2_reg));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln776_1_fu_391_p1 = data_1_read_1_reg_1434;

assign bitcast_ln776_2_fu_432_p1 = data_2_read_1_reg_1455;

assign bitcast_ln776_3_fu_473_p1 = data_3_read_1_reg_1448;

assign bitcast_ln776_4_fu_514_p1 = data_4_read_1_reg_1470;

assign bitcast_ln776_fu_350_p1 = data_0_read_1_reg_1441;

assign icmp_ln776_1_fu_373_p2 = ((trunc_ln776_fu_363_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_2_fu_408_p2 = ((tmp_5_fu_394_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_3_fu_414_p2 = ((trunc_ln776_1_fu_404_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_4_fu_449_p2 = ((tmp_7_fu_435_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_5_fu_455_p2 = ((trunc_ln776_2_fu_445_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_6_fu_490_p2 = ((tmp_9_fu_476_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_7_fu_496_p2 = ((trunc_ln776_3_fu_486_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_8_fu_531_p2 = ((tmp_10_fu_517_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_9_fu_537_p2 = ((trunc_ln776_4_fu_527_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_fu_367_p2 = ((tmp_2_fu_353_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln780_1_fu_885_p2 = ((tmp_24_fu_875_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_2_fu_1065_p2 = ((tmp_28_fu_1055_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_3_fu_1237_p2 = ((tmp_32_fu_1227_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_4_fu_1416_p2 = ((tmp_36_fu_1406_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_fu_713_p2 = ((tmp_17_fu_703_p4 != 22'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_777_p3 = add_ln339_1_fu_771_p2[32'd8];

assign isNeg_2_fu_957_p3 = add_ln339_2_fu_951_p2[32'd8];

assign isNeg_3_fu_1129_p3 = add_ln339_3_fu_1123_p2[32'd8];

assign isNeg_4_fu_1308_p3 = add_ln339_4_fu_1302_p2[32'd8];

assign isNeg_fu_605_p3 = add_ln339_fu_599_p2[32'd8];

assign mantissa_V_1_fu_753_p4 = {{{{1'd1}, {tmp_V_3_fu_749_p1}}}, {1'd0}};

assign mantissa_V_2_fu_933_p4 = {{{{1'd1}, {tmp_V_5_fu_929_p1}}}, {1'd0}};

assign mantissa_V_3_fu_1105_p4 = {{{{1'd1}, {tmp_V_7_fu_1101_p1}}}, {1'd0}};

assign mantissa_V_4_fu_1284_p4 = {{{{1'd1}, {tmp_V_9_fu_1280_p1}}}, {1'd0}};

assign mantissa_V_fu_581_p4 = {{{{1'd1}, {tmp_V_1_fu_577_p1}}}, {1'd0}};

assign or_ln776_1_fu_420_p2 = (icmp_ln776_3_fu_414_p2 | icmp_ln776_2_fu_408_p2);

assign or_ln776_2_fu_461_p2 = (icmp_ln776_5_fu_455_p2 | icmp_ln776_4_fu_449_p2);

assign or_ln776_3_fu_502_p2 = (icmp_ln776_7_fu_496_p2 | icmp_ln776_6_fu_490_p2);

assign or_ln776_4_fu_543_p2 = (icmp_ln776_9_fu_537_p2 | icmp_ln776_8_fu_531_p2);

assign or_ln776_fu_379_p2 = (icmp_ln776_fu_367_p2 | icmp_ln776_1_fu_373_p2);

assign p_Result_1_fu_731_p3 = p_Val2_5_fu_727_p1[32'd31];

assign p_Result_2_fu_911_p3 = p_Val2_10_fu_907_p1[32'd31];

assign p_Result_3_fu_1083_p3 = p_Val2_15_fu_1079_p1[32'd31];

assign p_Result_4_fu_1262_p3 = p_Val2_20_fu_1259_p1[32'd31];

assign p_Result_s_fu_559_p3 = p_Val2_s_fu_555_p1[32'd31];

assign p_Val2_10_fu_907_p1 = reg_342;

assign p_Val2_15_fu_1079_p1 = reg_346;

assign p_Val2_20_fu_1259_p1 = x_assign_4_reg_1519;

assign p_Val2_25_fu_677_p3 = ((isNeg_fu_605_p3[0:0] === 1'b1) ? zext_ln662_fu_663_p1 : tmp_12_fu_667_p4);

assign p_Val2_26_fu_691_p3 = ((p_Result_s_fu_559_p3[0:0] === 1'b1) ? result_V_1_fu_685_p2 : p_Val2_25_fu_677_p3);

assign p_Val2_27_fu_849_p3 = ((isNeg_1_fu_777_p3[0:0] === 1'b1) ? zext_ln662_1_fu_835_p1 : tmp_13_fu_839_p4);

assign p_Val2_28_fu_863_p3 = ((p_Result_1_fu_731_p3[0:0] === 1'b1) ? result_V_3_fu_857_p2 : p_Val2_27_fu_849_p3);

assign p_Val2_29_fu_1029_p3 = ((isNeg_2_fu_957_p3[0:0] === 1'b1) ? zext_ln662_2_fu_1015_p1 : tmp_14_fu_1019_p4);

assign p_Val2_30_fu_1043_p3 = ((p_Result_2_fu_911_p3[0:0] === 1'b1) ? result_V_5_fu_1037_p2 : p_Val2_29_fu_1029_p3);

assign p_Val2_31_fu_1201_p3 = ((isNeg_3_fu_1129_p3[0:0] === 1'b1) ? zext_ln662_3_fu_1187_p1 : tmp_16_fu_1191_p4);

assign p_Val2_32_fu_1215_p3 = ((p_Result_3_fu_1083_p3[0:0] === 1'b1) ? result_V_7_fu_1209_p2 : p_Val2_31_fu_1201_p3);

assign p_Val2_33_fu_1380_p3 = ((isNeg_4_fu_1308_p3[0:0] === 1'b1) ? zext_ln662_4_fu_1366_p1 : tmp_18_fu_1370_p4);

assign p_Val2_34_fu_1394_p3 = ((p_Result_4_fu_1262_p3[0:0] === 1'b1) ? result_V_9_fu_1388_p2 : p_Val2_33_fu_1380_p3);

assign p_Val2_5_fu_727_p1 = reg_346;

assign p_Val2_s_fu_555_p1 = reg_342;

assign r_V_1_fu_649_p2 = zext_ln682_fu_591_p1 << zext_ln1287_fu_639_p1;

assign r_V_2_fu_815_p2 = mantissa_V_1_fu_753_p4 >> sext_ln1311_11_fu_807_p1;

assign r_V_3_fu_821_p2 = zext_ln682_1_fu_763_p1 << zext_ln1287_1_fu_811_p1;

assign r_V_4_fu_995_p2 = mantissa_V_2_fu_933_p4 >> sext_ln1311_12_fu_987_p1;

assign r_V_5_fu_1001_p2 = zext_ln682_2_fu_943_p1 << zext_ln1287_2_fu_991_p1;

assign r_V_6_fu_1167_p2 = mantissa_V_3_fu_1105_p4 >> sext_ln1311_13_fu_1159_p1;

assign r_V_7_fu_1173_p2 = zext_ln682_3_fu_1115_p1 << zext_ln1287_3_fu_1163_p1;

assign r_V_8_fu_1346_p2 = mantissa_V_4_fu_1284_p4 >> sext_ln1311_14_fu_1338_p1;

assign r_V_9_fu_1352_p2 = zext_ln682_4_fu_1294_p1 << zext_ln1287_4_fu_1342_p1;

assign r_V_fu_643_p2 = mantissa_V_fu_581_p4 >> sext_ln1311_10_fu_635_p1;

assign res_addr_1_gep_fu_164_p3 = 64'd0;

assign res_addr_3_gep_fu_187_p3 = 64'd1;

assign res_addr_5_gep_fu_221_p3 = 64'd2;

assign res_addr_7_gep_fu_239_p3 = 64'd3;

assign res_addr_9_gep_fu_265_p3 = 64'd4;

assign result_V_1_fu_685_p2 = (32'd0 - p_Val2_25_fu_677_p3);

assign result_V_3_fu_857_p2 = (32'd0 - p_Val2_27_fu_849_p3);

assign result_V_5_fu_1037_p2 = (32'd0 - p_Val2_29_fu_1029_p3);

assign result_V_7_fu_1209_p2 = (32'd0 - p_Val2_31_fu_1201_p3);

assign result_V_9_fu_1388_p2 = (32'd0 - p_Val2_33_fu_1380_p3);

assign select_ln780_1_fu_891_p3 = ((icmp_ln780_1_fu_885_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln789_1_fu_871_p1);

assign select_ln780_2_fu_1071_p3 = ((icmp_ln780_2_fu_1065_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln789_2_fu_1051_p1);

assign select_ln780_3_fu_1243_p3 = ((icmp_ln780_3_fu_1237_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln789_3_fu_1223_p1);

assign select_ln780_4_fu_1422_p3 = ((icmp_ln780_4_fu_1416_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln789_4_fu_1402_p1);

assign select_ln780_fu_719_p3 = ((icmp_ln780_fu_713_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln789_fu_699_p1);

assign sext_ln1311_10_fu_635_p1 = ush_fu_623_p3;

assign sext_ln1311_11_fu_807_p1 = ush_1_fu_795_p3;

assign sext_ln1311_12_fu_987_p1 = ush_2_fu_975_p3;

assign sext_ln1311_13_fu_1159_p1 = ush_3_fu_1147_p3;

assign sext_ln1311_14_fu_1338_p1 = ush_4_fu_1326_p3;

assign sext_ln1311_1_fu_631_p1 = ush_fu_623_p3;

assign sext_ln1311_2_fu_791_p1 = $signed(sub_ln1311_1_fu_785_p2);

assign sext_ln1311_3_fu_803_p1 = ush_1_fu_795_p3;

assign sext_ln1311_4_fu_971_p1 = $signed(sub_ln1311_2_fu_965_p2);

assign sext_ln1311_5_fu_983_p1 = ush_2_fu_975_p3;

assign sext_ln1311_6_fu_1143_p1 = $signed(sub_ln1311_3_fu_1137_p2);

assign sext_ln1311_7_fu_1155_p1 = ush_3_fu_1147_p3;

assign sext_ln1311_8_fu_1322_p1 = $signed(sub_ln1311_4_fu_1316_p2);

assign sext_ln1311_9_fu_1334_p1 = ush_4_fu_1326_p3;

assign sext_ln1311_fu_619_p1 = $signed(sub_ln1311_fu_613_p2);

assign sub_ln1311_1_fu_785_p2 = (8'd127 - tmp_V_2_fu_739_p4);

assign sub_ln1311_2_fu_965_p2 = (8'd127 - tmp_V_4_fu_919_p4);

assign sub_ln1311_3_fu_1137_p2 = (8'd127 - tmp_V_6_fu_1091_p4);

assign sub_ln1311_4_fu_1316_p2 = (8'd127 - tmp_V_8_fu_1270_p4);

assign sub_ln1311_fu_613_p2 = (8'd127 - tmp_V_fu_567_p4);

assign tmp_10_fu_517_p4 = {{bitcast_ln776_4_fu_514_p1[30:23]}};

assign tmp_12_fu_667_p4 = {{r_V_1_fu_649_p2[55:24]}};

assign tmp_13_fu_839_p4 = {{r_V_3_fu_821_p2[55:24]}};

assign tmp_14_fu_1019_p4 = {{r_V_5_fu_1001_p2[55:24]}};

assign tmp_15_fu_655_p3 = r_V_fu_643_p2[32'd24];

assign tmp_16_fu_1191_p4 = {{r_V_7_fu_1173_p2[55:24]}};

assign tmp_17_fu_703_p4 = {{p_Val2_26_fu_691_p3[31:10]}};

assign tmp_18_fu_1370_p4 = {{r_V_9_fu_1352_p2[55:24]}};

assign tmp_23_fu_827_p3 = r_V_2_fu_815_p2[32'd24];

assign tmp_24_fu_875_p4 = {{p_Val2_28_fu_863_p3[31:10]}};

assign tmp_27_fu_1007_p3 = r_V_4_fu_995_p2[32'd24];

assign tmp_28_fu_1055_p4 = {{p_Val2_30_fu_1043_p3[31:10]}};

assign tmp_2_fu_353_p4 = {{bitcast_ln776_fu_350_p1[30:23]}};

assign tmp_31_fu_1179_p3 = r_V_6_fu_1167_p2[32'd24];

assign tmp_32_fu_1227_p4 = {{p_Val2_32_fu_1215_p3[31:10]}};

assign tmp_35_fu_1358_p3 = r_V_8_fu_1346_p2[32'd24];

assign tmp_36_fu_1406_p4 = {{p_Val2_34_fu_1394_p3[31:10]}};

assign tmp_5_fu_394_p4 = {{bitcast_ln776_1_fu_391_p1[30:23]}};

assign tmp_7_fu_435_p4 = {{bitcast_ln776_2_fu_432_p1[30:23]}};

assign tmp_9_fu_476_p4 = {{bitcast_ln776_3_fu_473_p1[30:23]}};

assign tmp_V_1_fu_577_p1 = p_Val2_s_fu_555_p1[22:0];

assign tmp_V_2_fu_739_p4 = {{p_Val2_5_fu_727_p1[30:23]}};

assign tmp_V_3_fu_749_p1 = p_Val2_5_fu_727_p1[22:0];

assign tmp_V_4_fu_919_p4 = {{p_Val2_10_fu_907_p1[30:23]}};

assign tmp_V_5_fu_929_p1 = p_Val2_10_fu_907_p1[22:0];

assign tmp_V_6_fu_1091_p4 = {{p_Val2_15_fu_1079_p1[30:23]}};

assign tmp_V_7_fu_1101_p1 = p_Val2_15_fu_1079_p1[22:0];

assign tmp_V_8_fu_1270_p4 = {{p_Val2_20_fu_1259_p1[30:23]}};

assign tmp_V_9_fu_1280_p1 = p_Val2_20_fu_1259_p1[22:0];

assign tmp_V_fu_567_p4 = {{p_Val2_s_fu_555_p1[30:23]}};

assign trunc_ln776_1_fu_404_p1 = bitcast_ln776_1_fu_391_p1[22:0];

assign trunc_ln776_2_fu_445_p1 = bitcast_ln776_2_fu_432_p1[22:0];

assign trunc_ln776_3_fu_486_p1 = bitcast_ln776_3_fu_473_p1[22:0];

assign trunc_ln776_4_fu_527_p1 = bitcast_ln776_4_fu_514_p1[22:0];

assign trunc_ln776_fu_363_p1 = bitcast_ln776_fu_350_p1[22:0];

assign trunc_ln789_1_fu_871_p1 = p_Val2_28_fu_863_p3[9:0];

assign trunc_ln789_2_fu_1051_p1 = p_Val2_30_fu_1043_p3[9:0];

assign trunc_ln789_3_fu_1223_p1 = p_Val2_32_fu_1215_p3[9:0];

assign trunc_ln789_4_fu_1402_p1 = p_Val2_34_fu_1394_p3[9:0];

assign trunc_ln789_fu_699_p1 = p_Val2_26_fu_691_p3[9:0];

assign ush_1_fu_795_p3 = ((isNeg_1_fu_777_p3[0:0] === 1'b1) ? sext_ln1311_2_fu_791_p1 : add_ln339_1_fu_771_p2);

assign ush_2_fu_975_p3 = ((isNeg_2_fu_957_p3[0:0] === 1'b1) ? sext_ln1311_4_fu_971_p1 : add_ln339_2_fu_951_p2);

assign ush_3_fu_1147_p3 = ((isNeg_3_fu_1129_p3[0:0] === 1'b1) ? sext_ln1311_6_fu_1143_p1 : add_ln339_3_fu_1123_p2);

assign ush_4_fu_1326_p3 = ((isNeg_4_fu_1308_p3[0:0] === 1'b1) ? sext_ln1311_8_fu_1322_p1 : add_ln339_4_fu_1302_p2);

assign ush_fu_623_p3 = ((isNeg_fu_605_p3[0:0] === 1'b1) ? sext_ln1311_fu_619_p1 : add_ln339_fu_599_p2);

assign zext_ln1287_1_fu_811_p1 = $unsigned(sext_ln1311_3_fu_803_p1);

assign zext_ln1287_2_fu_991_p1 = $unsigned(sext_ln1311_5_fu_983_p1);

assign zext_ln1287_3_fu_1163_p1 = $unsigned(sext_ln1311_7_fu_1155_p1);

assign zext_ln1287_4_fu_1342_p1 = $unsigned(sext_ln1311_9_fu_1334_p1);

assign zext_ln1287_fu_639_p1 = $unsigned(sext_ln1311_1_fu_631_p1);

assign zext_ln339_1_fu_767_p1 = tmp_V_2_fu_739_p4;

assign zext_ln339_2_fu_947_p1 = tmp_V_4_fu_919_p4;

assign zext_ln339_3_fu_1119_p1 = tmp_V_6_fu_1091_p4;

assign zext_ln339_4_fu_1298_p1 = tmp_V_8_fu_1270_p4;

assign zext_ln339_fu_595_p1 = tmp_V_fu_567_p4;

assign zext_ln662_1_fu_835_p1 = tmp_23_fu_827_p3;

assign zext_ln662_2_fu_1015_p1 = tmp_27_fu_1007_p3;

assign zext_ln662_3_fu_1187_p1 = tmp_31_fu_1179_p3;

assign zext_ln662_4_fu_1366_p1 = tmp_35_fu_1358_p3;

assign zext_ln662_fu_663_p1 = tmp_15_fu_655_p3;

assign zext_ln682_1_fu_763_p1 = mantissa_V_1_fu_753_p4;

assign zext_ln682_2_fu_943_p1 = mantissa_V_2_fu_933_p4;

assign zext_ln682_3_fu_1115_p1 = mantissa_V_3_fu_1105_p4;

assign zext_ln682_4_fu_1294_p1 = mantissa_V_4_fu_1284_p4;

assign zext_ln682_fu_591_p1 = mantissa_V_fu_581_p4;

assign zext_ln781_1_fu_903_p1 = select_ln780_1_reg_1494;

assign zext_ln781_2_fu_1251_p1 = select_ln780_2_reg_1509;

assign zext_ln781_3_fu_1255_p1 = select_ln780_3_reg_1514;

assign zext_ln781_4_fu_1430_p1 = select_ln780_4_reg_1534;

assign zext_ln781_fu_899_p1 = select_ln780_reg_1489;

endmodule //selu_float_float_selu3_config_struct_s
