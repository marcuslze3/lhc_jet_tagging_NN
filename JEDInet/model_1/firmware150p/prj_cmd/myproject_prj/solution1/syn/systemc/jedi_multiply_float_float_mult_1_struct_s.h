// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _jedi_multiply_float_float_mult_1_struct_s_HH_
#define _jedi_multiply_float_float_mult_1_struct_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "jedi_fadd_32ns_32ns_32_4_full_dsp_1.h"
#include "jedi_fmul_32ns_32ns_32_3_max_dsp_1.h"

namespace ap_rtl {

struct jedi_multiply_float_float_mult_1_struct_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > data1_address0;
    sc_out< sc_logic > data1_ce0;
    sc_in< sc_lv<32> > data1_q0;
    sc_out< sc_lv<22> > data2_address0;
    sc_out< sc_logic > data2_ce0;
    sc_in< sc_lv<32> > data2_q0;
    sc_out< sc_lv<19> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<32> > res_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    jedi_multiply_float_float_mult_1_struct_s(sc_module_name name);
    SC_HAS_PROCESS(jedi_multiply_float_float_mult_1_struct_s);

    ~jedi_multiply_float_float_mult_1_struct_s();

    sc_trace_file* mVcdFile;

    jedi_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>* jedi_fadd_32ns_32ns_32_4_full_dsp_1_U1;
    jedi_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>* jedi_fmul_32ns_32ns_32_3_max_dsp_1_U2;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<19> > add_ln50_fu_184_p2;
    sc_signal< sc_lv<19> > add_ln50_reg_281;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > add_ln50_5_fu_190_p2;
    sc_signal< sc_lv<12> > add_ln50_5_reg_286;
    sc_signal< sc_lv<5> > i_fu_202_p2;
    sc_signal< sc_lv<5> > i_reg_294;
    sc_signal< sc_lv<15> > j_fu_214_p2;
    sc_signal< sc_lv<15> > j_reg_302;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<22> > zext_ln57_fu_220_p1;
    sc_signal< sc_lv<22> > zext_ln57_reg_307;
    sc_signal< sc_lv<1> > icmp_ln56_fu_208_p2;
    sc_signal< sc_lv<19> > res_addr_reg_312;
    sc_signal< sc_lv<8> > k_fu_245_p2;
    sc_signal< sc_lv<8> > k_reg_320;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > add_ln61_fu_255_p2;
    sc_signal< sc_lv<12> > add_ln61_reg_325;
    sc_signal< sc_lv<1> > icmp_ln59_fu_239_p2;
    sc_signal< sc_lv<22> > add_ln61_4_fu_261_p2;
    sc_signal< sc_lv<22> > add_ln61_4_reg_330;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > data1_load_reg_345;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > data2_load_reg_350;
    sc_signal< sc_lv<32> > grp_fu_180_p2;
    sc_signal< sc_lv<32> > tmp_reg_355;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > grp_fu_175_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<5> > i_0_reg_94;
    sc_signal< sc_lv<12> > phi_mul1_reg_105;
    sc_signal< sc_lv<19> > phi_mul3_reg_117;
    sc_signal< sc_lv<15> > j_0_reg_129;
    sc_signal< sc_lv<1> > icmp_ln50_fu_196_p2;
    sc_signal< sc_lv<32> > storemerge_reg_140;
    sc_signal< sc_lv<8> > k_0_reg_153;
    sc_signal< sc_lv<22> > phi_mul_reg_164;
    sc_signal< sc_lv<64> > zext_ln57_6_fu_234_p1;
    sc_signal< sc_lv<64> > zext_ln61_6_fu_272_p1;
    sc_signal< sc_lv<64> > zext_ln61_5_fu_277_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<19> > zext_ln57_5_fu_224_p1;
    sc_signal< sc_lv<19> > add_ln57_fu_228_p2;
    sc_signal< sc_lv<12> > zext_ln61_fu_251_p1;
    sc_signal< sc_lv<22> > add_ln61_3_fu_267_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<22> ap_const_lv22_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<19> ap_const_lv19_574E;
    static const sc_lv<12> ap_const_lv12_96;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<15> ap_const_lv15_574E;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<8> ap_const_lv8_96;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<22> ap_const_lv22_574E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln50_5_fu_190_p2();
    void thread_add_ln50_fu_184_p2();
    void thread_add_ln57_fu_228_p2();
    void thread_add_ln61_3_fu_267_p2();
    void thread_add_ln61_4_fu_261_p2();
    void thread_add_ln61_fu_255_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data1_address0();
    void thread_data1_ce0();
    void thread_data2_address0();
    void thread_data2_ce0();
    void thread_i_fu_202_p2();
    void thread_icmp_ln50_fu_196_p2();
    void thread_icmp_ln56_fu_208_p2();
    void thread_icmp_ln59_fu_239_p2();
    void thread_j_fu_214_p2();
    void thread_k_fu_245_p2();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_zext_ln57_5_fu_224_p1();
    void thread_zext_ln57_6_fu_234_p1();
    void thread_zext_ln57_fu_220_p1();
    void thread_zext_ln61_5_fu_277_p1();
    void thread_zext_ln61_6_fu_272_p1();
    void thread_zext_ln61_fu_251_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
