// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _jedi_concat_float_float_concat_2_struct_s_HH_
#define _jedi_concat_float_float_concat_2_struct_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct jedi_concat_float_float_concat_2_struct_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > data1_address0;
    sc_out< sc_logic > data1_ce0;
    sc_in< sc_lv<32> > data1_q0;
    sc_out< sc_lv<11> > data2_address0;
    sc_out< sc_logic > data2_ce0;
    sc_in< sc_lv<32> > data2_q0;
    sc_out< sc_lv<12> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<32> > res_d0;


    // Module declarations
    jedi_concat_float_float_concat_2_struct_s(sc_module_name name);
    SC_HAS_PROCESS(jedi_concat_float_float_concat_2_struct_s);

    ~jedi_concat_float_float_concat_2_struct_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > add_ln78_fu_165_p2;
    sc_signal< sc_lv<12> > add_ln78_reg_286;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > i_fu_177_p2;
    sc_signal< sc_lv<5> > i_reg_294;
    sc_signal< sc_lv<8> > j_fu_189_p2;
    sc_signal< sc_lv<8> > j_reg_302;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln80_1_fu_205_p1;
    sc_signal< sc_lv<64> > zext_ln80_1_reg_307;
    sc_signal< sc_lv<1> > icmp_ln79_fu_183_p2;
    sc_signal< sc_lv<11> > add_ln87_fu_210_p2;
    sc_signal< sc_lv<11> > add_ln87_reg_317;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > i_1_fu_222_p2;
    sc_signal< sc_lv<4> > i_1_reg_325;
    sc_signal< sc_lv<13> > mul_ln89_fu_240_p2;
    sc_signal< sc_lv<13> > mul_ln89_reg_330;
    sc_signal< sc_lv<1> > icmp_ln87_fu_216_p2;
    sc_signal< sc_lv<8> > j_1_fu_252_p2;
    sc_signal< sc_lv<8> > j_1_reg_338;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln88_fu_246_p2;
    sc_signal< sc_lv<13> > add_ln89_1_fu_277_p2;
    sc_signal< sc_lv<13> > add_ln89_1_reg_348;
    sc_signal< sc_lv<5> > i_0_reg_97;
    sc_signal< sc_lv<12> > phi_mul_reg_108;
    sc_signal< sc_lv<8> > j_0_reg_120;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln78_fu_171_p2;
    sc_signal< sc_lv<4> > i1_0_reg_131;
    sc_signal< sc_lv<11> > phi_mul1_reg_142;
    sc_signal< sc_lv<8> > j2_0_reg_154;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln89_3_fu_272_p1;
    sc_signal< sc_lv<64> > sext_ln89_fu_282_p1;
    sc_signal< sc_lv<12> > zext_ln80_fu_195_p1;
    sc_signal< sc_lv<12> > add_ln80_fu_199_p2;
    sc_signal< sc_lv<5> > or_ln_fu_228_p3;
    sc_signal< sc_lv<5> > mul_ln89_fu_240_p0;
    sc_signal< sc_lv<11> > zext_ln89_2_fu_262_p1;
    sc_signal< sc_lv<11> > add_ln89_fu_266_p2;
    sc_signal< sc_lv<13> > zext_ln89_1_fu_258_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<13> > mul_ln89_fu_240_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<12> ap_const_lv12_96;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_96;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<11> ap_const_lv11_96;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<13> ap_const_lv13_96;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln78_fu_165_p2();
    void thread_add_ln80_fu_199_p2();
    void thread_add_ln87_fu_210_p2();
    void thread_add_ln89_1_fu_277_p2();
    void thread_add_ln89_fu_266_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data1_address0();
    void thread_data1_ce0();
    void thread_data2_address0();
    void thread_data2_ce0();
    void thread_i_1_fu_222_p2();
    void thread_i_fu_177_p2();
    void thread_icmp_ln78_fu_171_p2();
    void thread_icmp_ln79_fu_183_p2();
    void thread_icmp_ln87_fu_216_p2();
    void thread_icmp_ln88_fu_246_p2();
    void thread_j_1_fu_252_p2();
    void thread_j_fu_189_p2();
    void thread_mul_ln89_fu_240_p0();
    void thread_mul_ln89_fu_240_p00();
    void thread_mul_ln89_fu_240_p2();
    void thread_or_ln_fu_228_p3();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_sext_ln89_fu_282_p1();
    void thread_zext_ln80_1_fu_205_p1();
    void thread_zext_ln80_fu_195_p1();
    void thread_zext_ln89_1_fu_258_p1();
    void thread_zext_ln89_2_fu_262_p1();
    void thread_zext_ln89_3_fu_272_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
