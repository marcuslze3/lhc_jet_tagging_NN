// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module selu_float_float_relu2_config_struct_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_read,
        data_1_read,
        data_2_read,
        data_3_read,
        data_4_read,
        data_5_read,
        data_6_read,
        data_7_read,
        data_8_read,
        data_9_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] data_0_read;
input  [31:0] data_1_read;
input  [31:0] data_2_read;
input  [31:0] data_3_read;
input  [31:0] data_4_read;
input  [31:0] data_5_read;
input  [31:0] data_6_read;
input  [31:0] data_7_read;
input  [31:0] data_8_read;
input  [31:0] data_9_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] selu_table3_address0;
reg    selu_table3_ce0;
wire   [31:0] selu_table3_q0;
wire   [9:0] selu_table3_address1;
reg    selu_table3_ce1;
wire   [31:0] selu_table3_q1;
wire   [9:0] selu_table3_address2;
reg    selu_table3_ce2;
wire   [31:0] selu_table3_q2;
wire   [9:0] selu_table3_address3;
reg    selu_table3_ce3;
wire   [31:0] selu_table3_q3;
wire   [9:0] selu_table3_address4;
reg    selu_table3_ce4;
wire   [31:0] selu_table3_q4;
wire   [9:0] selu_table3_address5;
reg    selu_table3_ce5;
wire   [31:0] selu_table3_q5;
wire   [9:0] selu_table3_address6;
reg    selu_table3_ce6;
wire   [31:0] selu_table3_q6;
wire   [9:0] selu_table3_address7;
reg    selu_table3_ce7;
wire   [31:0] selu_table3_q7;
wire   [9:0] selu_table3_address8;
reg    selu_table3_ce8;
wire   [31:0] selu_table3_q8;
wire   [9:0] selu_table3_address9;
reg    selu_table3_ce9;
wire   [31:0] selu_table3_q9;
wire   [31:0] grp_fu_405_p2;
reg   [31:0] reg_575;
reg   [0:0] and_ln776_reg_1495;
reg   [0:0] and_ln776_reg_1495_pp0_iter2_reg;
reg   [31:0] reg_575_pp0_iter4_reg;
reg   [31:0] reg_575_pp0_iter5_reg;
reg   [31:0] reg_575_pp0_iter6_reg;
reg   [31:0] reg_575_pp0_iter7_reg;
wire   [31:0] grp_fu_411_p2;
reg   [31:0] reg_581;
reg   [0:0] and_ln776_8_reg_1499;
reg   [0:0] and_ln776_8_reg_1499_pp0_iter2_reg;
reg   [31:0] reg_581_pp0_iter4_reg;
reg   [31:0] reg_581_pp0_iter5_reg;
reg   [31:0] reg_581_pp0_iter6_reg;
reg   [31:0] reg_581_pp0_iter7_reg;
wire   [31:0] grp_fu_417_p2;
reg   [31:0] reg_587;
reg   [0:0] and_ln776_9_reg_1503;
reg   [0:0] and_ln776_9_reg_1503_pp0_iter2_reg;
reg   [31:0] reg_587_pp0_iter4_reg;
reg   [31:0] reg_587_pp0_iter5_reg;
reg   [31:0] reg_587_pp0_iter6_reg;
reg   [31:0] reg_587_pp0_iter7_reg;
wire   [31:0] grp_fu_423_p2;
reg   [31:0] reg_593;
reg   [0:0] and_ln776_10_reg_1507;
reg   [0:0] and_ln776_10_reg_1507_pp0_iter2_reg;
reg   [31:0] reg_593_pp0_iter4_reg;
reg   [31:0] reg_593_pp0_iter5_reg;
reg   [31:0] reg_593_pp0_iter6_reg;
reg   [31:0] reg_593_pp0_iter7_reg;
wire   [31:0] grp_fu_429_p2;
reg   [31:0] reg_599;
reg   [0:0] and_ln776_11_reg_1511;
reg   [0:0] and_ln776_11_reg_1511_pp0_iter2_reg;
reg   [31:0] reg_599_pp0_iter4_reg;
reg   [31:0] reg_599_pp0_iter5_reg;
reg   [31:0] reg_599_pp0_iter6_reg;
reg   [31:0] reg_599_pp0_iter7_reg;
wire   [31:0] grp_fu_435_p2;
reg   [31:0] reg_605;
reg   [0:0] and_ln776_12_reg_1515;
reg   [0:0] and_ln776_12_reg_1515_pp0_iter2_reg;
reg   [31:0] reg_605_pp0_iter4_reg;
reg   [31:0] reg_605_pp0_iter5_reg;
reg   [31:0] reg_605_pp0_iter6_reg;
reg   [31:0] reg_605_pp0_iter7_reg;
wire   [31:0] grp_fu_441_p2;
reg   [31:0] reg_611;
reg   [0:0] and_ln776_13_reg_1519;
reg   [0:0] and_ln776_13_reg_1519_pp0_iter2_reg;
reg   [31:0] reg_611_pp0_iter4_reg;
reg   [31:0] reg_611_pp0_iter5_reg;
reg   [31:0] reg_611_pp0_iter6_reg;
reg   [31:0] reg_611_pp0_iter7_reg;
wire   [31:0] grp_fu_447_p2;
reg   [31:0] reg_617;
reg   [0:0] and_ln776_14_reg_1523;
reg   [0:0] and_ln776_14_reg_1523_pp0_iter2_reg;
reg   [31:0] reg_617_pp0_iter4_reg;
reg   [31:0] reg_617_pp0_iter5_reg;
reg   [31:0] reg_617_pp0_iter6_reg;
reg   [31:0] reg_617_pp0_iter7_reg;
wire   [31:0] grp_fu_453_p2;
reg   [31:0] reg_623;
reg   [0:0] and_ln776_15_reg_1527;
reg   [0:0] and_ln776_15_reg_1527_pp0_iter2_reg;
reg   [31:0] reg_623_pp0_iter4_reg;
reg   [31:0] reg_623_pp0_iter5_reg;
reg   [31:0] reg_623_pp0_iter6_reg;
reg   [31:0] reg_623_pp0_iter7_reg;
wire   [31:0] grp_fu_459_p2;
reg   [31:0] reg_629;
reg   [0:0] and_ln776_16_reg_1531;
reg   [0:0] and_ln776_16_reg_1531_pp0_iter2_reg;
reg   [31:0] reg_629_pp0_iter4_reg;
reg   [31:0] reg_629_pp0_iter5_reg;
reg   [31:0] reg_629_pp0_iter6_reg;
reg   [31:0] reg_629_pp0_iter7_reg;
reg   [31:0] data_9_read_1_reg_1425;
reg   [31:0] data_8_read_1_reg_1432;
reg   [31:0] data_7_read_2_reg_1439;
reg   [31:0] data_6_read_2_reg_1446;
reg   [31:0] data_5_read_2_reg_1453;
reg   [31:0] data_4_read_2_reg_1460;
reg   [31:0] data_3_read_2_reg_1467;
reg   [31:0] data_2_read_2_reg_1474;
reg   [31:0] data_1_read_2_reg_1481;
reg   [31:0] data_0_read_2_reg_1488;
wire   [0:0] and_ln776_fu_670_p2;
reg   [0:0] and_ln776_reg_1495_pp0_iter3_reg;
reg   [0:0] and_ln776_reg_1495_pp0_iter4_reg;
reg   [0:0] and_ln776_reg_1495_pp0_iter5_reg;
reg   [0:0] and_ln776_reg_1495_pp0_iter6_reg;
reg   [0:0] and_ln776_reg_1495_pp0_iter7_reg;
reg   [0:0] and_ln776_reg_1495_pp0_iter8_reg;
wire   [0:0] and_ln776_8_fu_711_p2;
reg   [0:0] and_ln776_8_reg_1499_pp0_iter3_reg;
reg   [0:0] and_ln776_8_reg_1499_pp0_iter4_reg;
reg   [0:0] and_ln776_8_reg_1499_pp0_iter5_reg;
reg   [0:0] and_ln776_8_reg_1499_pp0_iter6_reg;
reg   [0:0] and_ln776_8_reg_1499_pp0_iter7_reg;
reg   [0:0] and_ln776_8_reg_1499_pp0_iter8_reg;
wire   [0:0] and_ln776_9_fu_752_p2;
reg   [0:0] and_ln776_9_reg_1503_pp0_iter3_reg;
reg   [0:0] and_ln776_9_reg_1503_pp0_iter4_reg;
reg   [0:0] and_ln776_9_reg_1503_pp0_iter5_reg;
reg   [0:0] and_ln776_9_reg_1503_pp0_iter6_reg;
reg   [0:0] and_ln776_9_reg_1503_pp0_iter7_reg;
reg   [0:0] and_ln776_9_reg_1503_pp0_iter8_reg;
wire   [0:0] and_ln776_10_fu_793_p2;
reg   [0:0] and_ln776_10_reg_1507_pp0_iter3_reg;
reg   [0:0] and_ln776_10_reg_1507_pp0_iter4_reg;
reg   [0:0] and_ln776_10_reg_1507_pp0_iter5_reg;
reg   [0:0] and_ln776_10_reg_1507_pp0_iter6_reg;
reg   [0:0] and_ln776_10_reg_1507_pp0_iter7_reg;
reg   [0:0] and_ln776_10_reg_1507_pp0_iter8_reg;
wire   [0:0] and_ln776_11_fu_834_p2;
reg   [0:0] and_ln776_11_reg_1511_pp0_iter3_reg;
reg   [0:0] and_ln776_11_reg_1511_pp0_iter4_reg;
reg   [0:0] and_ln776_11_reg_1511_pp0_iter5_reg;
reg   [0:0] and_ln776_11_reg_1511_pp0_iter6_reg;
reg   [0:0] and_ln776_11_reg_1511_pp0_iter7_reg;
reg   [0:0] and_ln776_11_reg_1511_pp0_iter8_reg;
wire   [0:0] and_ln776_12_fu_875_p2;
reg   [0:0] and_ln776_12_reg_1515_pp0_iter3_reg;
reg   [0:0] and_ln776_12_reg_1515_pp0_iter4_reg;
reg   [0:0] and_ln776_12_reg_1515_pp0_iter5_reg;
reg   [0:0] and_ln776_12_reg_1515_pp0_iter6_reg;
reg   [0:0] and_ln776_12_reg_1515_pp0_iter7_reg;
reg   [0:0] and_ln776_12_reg_1515_pp0_iter8_reg;
wire   [0:0] and_ln776_13_fu_916_p2;
reg   [0:0] and_ln776_13_reg_1519_pp0_iter3_reg;
reg   [0:0] and_ln776_13_reg_1519_pp0_iter4_reg;
reg   [0:0] and_ln776_13_reg_1519_pp0_iter5_reg;
reg   [0:0] and_ln776_13_reg_1519_pp0_iter6_reg;
reg   [0:0] and_ln776_13_reg_1519_pp0_iter7_reg;
reg   [0:0] and_ln776_13_reg_1519_pp0_iter8_reg;
wire   [0:0] and_ln776_14_fu_957_p2;
reg   [0:0] and_ln776_14_reg_1523_pp0_iter3_reg;
reg   [0:0] and_ln776_14_reg_1523_pp0_iter4_reg;
reg   [0:0] and_ln776_14_reg_1523_pp0_iter5_reg;
reg   [0:0] and_ln776_14_reg_1523_pp0_iter6_reg;
reg   [0:0] and_ln776_14_reg_1523_pp0_iter7_reg;
reg   [0:0] and_ln776_14_reg_1523_pp0_iter8_reg;
wire   [0:0] and_ln776_15_fu_998_p2;
reg   [0:0] and_ln776_15_reg_1527_pp0_iter3_reg;
reg   [0:0] and_ln776_15_reg_1527_pp0_iter4_reg;
reg   [0:0] and_ln776_15_reg_1527_pp0_iter5_reg;
reg   [0:0] and_ln776_15_reg_1527_pp0_iter6_reg;
reg   [0:0] and_ln776_15_reg_1527_pp0_iter7_reg;
reg   [0:0] and_ln776_15_reg_1527_pp0_iter8_reg;
wire   [0:0] and_ln776_16_fu_1039_p2;
reg   [0:0] and_ln776_16_reg_1531_pp0_iter3_reg;
reg   [0:0] and_ln776_16_reg_1531_pp0_iter4_reg;
reg   [0:0] and_ln776_16_reg_1531_pp0_iter5_reg;
reg   [0:0] and_ln776_16_reg_1531_pp0_iter6_reg;
reg   [0:0] and_ln776_16_reg_1531_pp0_iter7_reg;
reg   [0:0] and_ln776_16_reg_1531_pp0_iter8_reg;
wire   [31:0] grp_fu_465_p2;
reg   [31:0] tmp_6_reg_1535;
wire   [31:0] grp_fu_470_p2;
reg   [31:0] tmp_6_1_reg_1540;
wire   [31:0] grp_fu_475_p2;
reg   [31:0] tmp_6_2_reg_1545;
wire   [31:0] grp_fu_480_p2;
reg   [31:0] tmp_6_3_reg_1550;
wire   [31:0] grp_fu_485_p2;
reg   [31:0] tmp_6_4_reg_1555;
wire   [31:0] grp_fu_490_p2;
reg   [31:0] tmp_6_5_reg_1560;
wire   [31:0] grp_fu_495_p2;
reg   [31:0] tmp_6_6_reg_1565;
wire   [31:0] grp_fu_500_p2;
reg   [31:0] tmp_6_7_reg_1570;
wire   [31:0] grp_fu_505_p2;
reg   [31:0] tmp_6_8_reg_1575;
wire   [31:0] grp_fu_510_p2;
reg   [31:0] tmp_6_9_reg_1580;
wire   [9:0] select_ln780_fu_1065_p3;
reg   [9:0] select_ln780_reg_1585;
wire   [9:0] select_ln780_1_fu_1093_p3;
reg   [9:0] select_ln780_1_reg_1590;
wire   [9:0] select_ln780_2_fu_1121_p3;
reg   [9:0] select_ln780_2_reg_1595;
wire   [9:0] select_ln780_3_fu_1149_p3;
reg   [9:0] select_ln780_3_reg_1600;
wire   [9:0] select_ln780_4_fu_1177_p3;
reg   [9:0] select_ln780_4_reg_1605;
wire   [9:0] select_ln780_5_fu_1205_p3;
reg   [9:0] select_ln780_5_reg_1610;
wire   [9:0] select_ln780_6_fu_1233_p3;
reg   [9:0] select_ln780_6_reg_1615;
wire   [9:0] select_ln780_7_fu_1261_p3;
reg   [9:0] select_ln780_7_reg_1620;
wire   [9:0] select_ln780_8_fu_1289_p3;
reg   [9:0] select_ln780_8_reg_1625;
wire   [9:0] select_ln780_9_fu_1317_p3;
reg   [9:0] select_ln780_9_reg_1630;
reg    ap_block_pp0_stage0_subdone;
wire    index_p_hls_fptosi_float_i32_fu_355_ap_ready;
wire   [31:0] index_p_hls_fptosi_float_i32_fu_355_ap_return;
wire    index_1_p_hls_fptosi_float_i32_fu_360_ap_ready;
wire   [31:0] index_1_p_hls_fptosi_float_i32_fu_360_ap_return;
wire    index_2_p_hls_fptosi_float_i32_fu_365_ap_ready;
wire   [31:0] index_2_p_hls_fptosi_float_i32_fu_365_ap_return;
wire    index_3_p_hls_fptosi_float_i32_fu_370_ap_ready;
wire   [31:0] index_3_p_hls_fptosi_float_i32_fu_370_ap_return;
wire    index_4_p_hls_fptosi_float_i32_fu_375_ap_ready;
wire   [31:0] index_4_p_hls_fptosi_float_i32_fu_375_ap_return;
wire    index_5_p_hls_fptosi_float_i32_fu_380_ap_ready;
wire   [31:0] index_5_p_hls_fptosi_float_i32_fu_380_ap_return;
wire    index_6_p_hls_fptosi_float_i32_fu_385_ap_ready;
wire   [31:0] index_6_p_hls_fptosi_float_i32_fu_385_ap_return;
wire    index_7_p_hls_fptosi_float_i32_fu_390_ap_ready;
wire   [31:0] index_7_p_hls_fptosi_float_i32_fu_390_ap_return;
wire    index_8_p_hls_fptosi_float_i32_fu_395_ap_ready;
wire   [31:0] index_8_p_hls_fptosi_float_i32_fu_395_ap_return;
wire    index_9_p_hls_fptosi_float_i32_fu_400_ap_ready;
wire   [31:0] index_9_p_hls_fptosi_float_i32_fu_400_ap_return;
reg   [31:0] ap_phi_mux_res_0_write_assign_phi_fu_258_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_0_write_assign_reg_255;
wire   [31:0] ap_phi_reg_pp0_iter0_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter1_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter2_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter3_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter4_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter5_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter6_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter7_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_reg_pp0_iter8_res_0_write_assign_reg_255;
reg   [31:0] ap_phi_mux_res_1_write_assign_phi_fu_268_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_1_write_assign_reg_265;
wire   [31:0] ap_phi_reg_pp0_iter0_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter1_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter2_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter3_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter4_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter5_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter6_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter7_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter8_res_1_write_assign_reg_265;
reg   [31:0] ap_phi_mux_res_2_write_assign_phi_fu_278_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_2_write_assign_reg_275;
wire   [31:0] ap_phi_reg_pp0_iter0_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter1_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter2_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter3_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter4_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter5_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter6_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter7_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_reg_pp0_iter8_res_2_write_assign_reg_275;
reg   [31:0] ap_phi_mux_res_3_write_assign_phi_fu_288_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_3_write_assign_reg_285;
wire   [31:0] ap_phi_reg_pp0_iter0_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter1_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter2_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter3_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter4_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter5_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter6_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter7_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_reg_pp0_iter8_res_3_write_assign_reg_285;
reg   [31:0] ap_phi_mux_res_4_write_assign_phi_fu_298_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_4_write_assign_reg_295;
wire   [31:0] ap_phi_reg_pp0_iter0_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter1_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter2_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter3_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter4_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter5_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter6_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter7_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_reg_pp0_iter8_res_4_write_assign_reg_295;
reg   [31:0] ap_phi_mux_res_5_write_assign_phi_fu_308_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_5_write_assign_reg_305;
wire   [31:0] ap_phi_reg_pp0_iter0_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter1_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter2_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter3_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter4_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter5_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter6_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter7_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_reg_pp0_iter8_res_5_write_assign_reg_305;
reg   [31:0] ap_phi_mux_res_6_write_assign_phi_fu_318_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_6_write_assign_reg_315;
wire   [31:0] ap_phi_reg_pp0_iter0_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter1_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter2_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter3_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter4_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter5_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter6_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter7_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_reg_pp0_iter8_res_6_write_assign_reg_315;
reg   [31:0] ap_phi_mux_res_7_write_assign_phi_fu_328_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_7_write_assign_reg_325;
wire   [31:0] ap_phi_reg_pp0_iter0_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter1_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter2_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter3_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter4_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter5_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter6_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter7_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_reg_pp0_iter8_res_7_write_assign_reg_325;
reg   [31:0] ap_phi_mux_res_8_write_assign_phi_fu_338_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_8_write_assign_reg_335;
wire   [31:0] ap_phi_reg_pp0_iter0_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter1_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter2_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter3_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter4_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter5_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter6_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter7_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_reg_pp0_iter8_res_8_write_assign_reg_335;
reg   [31:0] ap_phi_mux_res_9_write_assign_phi_fu_348_p4;
reg   [31:0] ap_phi_reg_pp0_iter9_res_9_write_assign_reg_345;
wire   [31:0] ap_phi_reg_pp0_iter0_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter1_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter2_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter3_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter4_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter5_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter6_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter7_res_9_write_assign_reg_345;
reg   [31:0] ap_phi_reg_pp0_iter8_res_9_write_assign_reg_345;
wire   [63:0] zext_ln781_fu_1325_p1;
wire   [63:0] zext_ln781_8_fu_1329_p1;
wire   [63:0] zext_ln781_9_fu_1333_p1;
wire   [63:0] zext_ln781_10_fu_1337_p1;
wire   [63:0] zext_ln781_11_fu_1341_p1;
wire   [63:0] zext_ln781_12_fu_1345_p1;
wire   [63:0] zext_ln781_13_fu_1349_p1;
wire   [63:0] zext_ln781_14_fu_1353_p1;
wire   [63:0] zext_ln781_15_fu_1357_p1;
wire   [63:0] zext_ln781_16_fu_1361_p1;
reg   [31:0] grp_fu_405_p1;
reg   [31:0] grp_fu_411_p1;
reg   [31:0] grp_fu_417_p1;
reg   [31:0] grp_fu_423_p1;
reg   [31:0] grp_fu_429_p1;
reg   [31:0] grp_fu_435_p1;
reg   [31:0] grp_fu_441_p1;
reg   [31:0] grp_fu_447_p1;
reg   [31:0] grp_fu_453_p1;
reg   [31:0] grp_fu_459_p1;
wire   [31:0] bitcast_ln776_fu_635_p1;
wire   [7:0] tmp_s_fu_638_p4;
wire   [22:0] trunc_ln776_fu_648_p1;
wire   [0:0] icmp_ln776_16_fu_658_p2;
wire   [0:0] icmp_ln776_fu_652_p2;
wire   [0:0] or_ln776_fu_664_p2;
wire   [0:0] grp_fu_515_p2;
wire   [31:0] bitcast_ln776_8_fu_676_p1;
wire   [7:0] tmp_20_fu_679_p4;
wire   [22:0] trunc_ln776_8_fu_689_p1;
wire   [0:0] icmp_ln776_18_fu_699_p2;
wire   [0:0] icmp_ln776_17_fu_693_p2;
wire   [0:0] or_ln776_8_fu_705_p2;
wire   [0:0] grp_fu_521_p2;
wire   [31:0] bitcast_ln776_9_fu_717_p1;
wire   [7:0] tmp_22_fu_720_p4;
wire   [22:0] trunc_ln776_9_fu_730_p1;
wire   [0:0] icmp_ln776_20_fu_740_p2;
wire   [0:0] icmp_ln776_19_fu_734_p2;
wire   [0:0] or_ln776_9_fu_746_p2;
wire   [0:0] grp_fu_527_p2;
wire   [31:0] bitcast_ln776_10_fu_758_p1;
wire   [7:0] tmp_24_fu_761_p4;
wire   [22:0] trunc_ln776_10_fu_771_p1;
wire   [0:0] icmp_ln776_22_fu_781_p2;
wire   [0:0] icmp_ln776_21_fu_775_p2;
wire   [0:0] or_ln776_10_fu_787_p2;
wire   [0:0] grp_fu_533_p2;
wire   [31:0] bitcast_ln776_11_fu_799_p1;
wire   [7:0] tmp_26_fu_802_p4;
wire   [22:0] trunc_ln776_11_fu_812_p1;
wire   [0:0] icmp_ln776_24_fu_822_p2;
wire   [0:0] icmp_ln776_23_fu_816_p2;
wire   [0:0] or_ln776_11_fu_828_p2;
wire   [0:0] grp_fu_539_p2;
wire   [31:0] bitcast_ln776_12_fu_840_p1;
wire   [7:0] tmp_28_fu_843_p4;
wire   [22:0] trunc_ln776_12_fu_853_p1;
wire   [0:0] icmp_ln776_26_fu_863_p2;
wire   [0:0] icmp_ln776_25_fu_857_p2;
wire   [0:0] or_ln776_12_fu_869_p2;
wire   [0:0] grp_fu_545_p2;
wire   [31:0] bitcast_ln776_13_fu_881_p1;
wire   [7:0] tmp_30_fu_884_p4;
wire   [22:0] trunc_ln776_13_fu_894_p1;
wire   [0:0] icmp_ln776_28_fu_904_p2;
wire   [0:0] icmp_ln776_27_fu_898_p2;
wire   [0:0] or_ln776_13_fu_910_p2;
wire   [0:0] grp_fu_551_p2;
wire   [31:0] bitcast_ln776_14_fu_922_p1;
wire   [7:0] tmp_32_fu_925_p4;
wire   [22:0] trunc_ln776_14_fu_935_p1;
wire   [0:0] icmp_ln776_30_fu_945_p2;
wire   [0:0] icmp_ln776_29_fu_939_p2;
wire   [0:0] or_ln776_14_fu_951_p2;
wire   [0:0] grp_fu_557_p2;
wire   [31:0] bitcast_ln776_15_fu_963_p1;
wire   [7:0] tmp_34_fu_966_p4;
wire   [22:0] trunc_ln776_15_fu_976_p1;
wire   [0:0] icmp_ln776_32_fu_986_p2;
wire   [0:0] icmp_ln776_31_fu_980_p2;
wire   [0:0] or_ln776_15_fu_992_p2;
wire   [0:0] grp_fu_563_p2;
wire   [31:0] bitcast_ln776_16_fu_1004_p1;
wire   [7:0] tmp_36_fu_1007_p4;
wire   [22:0] trunc_ln776_16_fu_1017_p1;
wire   [0:0] icmp_ln776_34_fu_1027_p2;
wire   [0:0] icmp_ln776_33_fu_1021_p2;
wire   [0:0] or_ln776_16_fu_1033_p2;
wire   [0:0] grp_fu_569_p2;
wire   [21:0] tmp_38_fu_1049_p4;
wire   [0:0] icmp_ln780_fu_1059_p2;
wire   [9:0] trunc_ln780_fu_1045_p1;
wire   [21:0] tmp_39_fu_1077_p4;
wire   [0:0] icmp_ln780_8_fu_1087_p2;
wire   [9:0] trunc_ln780_8_fu_1073_p1;
wire   [21:0] tmp_40_fu_1105_p4;
wire   [0:0] icmp_ln780_9_fu_1115_p2;
wire   [9:0] trunc_ln780_9_fu_1101_p1;
wire   [21:0] tmp_41_fu_1133_p4;
wire   [0:0] icmp_ln780_10_fu_1143_p2;
wire   [9:0] trunc_ln780_10_fu_1129_p1;
wire   [21:0] tmp_42_fu_1161_p4;
wire   [0:0] icmp_ln780_11_fu_1171_p2;
wire   [9:0] trunc_ln780_11_fu_1157_p1;
wire   [21:0] tmp_43_fu_1189_p4;
wire   [0:0] icmp_ln780_12_fu_1199_p2;
wire   [9:0] trunc_ln780_12_fu_1185_p1;
wire   [21:0] tmp_44_fu_1217_p4;
wire   [0:0] icmp_ln780_13_fu_1227_p2;
wire   [9:0] trunc_ln780_13_fu_1213_p1;
wire   [21:0] tmp_45_fu_1245_p4;
wire   [0:0] icmp_ln780_14_fu_1255_p2;
wire   [9:0] trunc_ln780_14_fu_1241_p1;
wire   [21:0] tmp_46_fu_1273_p4;
wire   [0:0] icmp_ln780_15_fu_1283_p2;
wire   [9:0] trunc_ln780_15_fu_1269_p1;
wire   [21:0] tmp_47_fu_1301_p4;
wire   [0:0] icmp_ln780_16_fu_1311_p2;
wire   [9:0] trunc_ln780_16_fu_1297_p1;
reg    ap_block_pp0_stage0_00001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to8;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_803;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

selu_float_float_relu2_config_struct_s_selu_table3 #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
selu_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(selu_table3_address0),
    .ce0(selu_table3_ce0),
    .q0(selu_table3_q0),
    .address1(selu_table3_address1),
    .ce1(selu_table3_ce1),
    .q1(selu_table3_q1),
    .address2(selu_table3_address2),
    .ce2(selu_table3_ce2),
    .q2(selu_table3_q2),
    .address3(selu_table3_address3),
    .ce3(selu_table3_ce3),
    .q3(selu_table3_q3),
    .address4(selu_table3_address4),
    .ce4(selu_table3_ce4),
    .q4(selu_table3_q4),
    .address5(selu_table3_address5),
    .ce5(selu_table3_ce5),
    .q5(selu_table3_q5),
    .address6(selu_table3_address6),
    .ce6(selu_table3_ce6),
    .q6(selu_table3_q6),
    .address7(selu_table3_address7),
    .ce7(selu_table3_ce7),
    .q7(selu_table3_q7),
    .address8(selu_table3_address8),
    .ce8(selu_table3_ce8),
    .q8(selu_table3_q8),
    .address9(selu_table3_address9),
    .ce9(selu_table3_ce9),
    .q9(selu_table3_q9)
);

p_hls_fptosi_float_i32 index_p_hls_fptosi_float_i32_fu_355(
    .ap_ready(index_p_hls_fptosi_float_i32_fu_355_ap_ready),
    .x(tmp_6_reg_1535),
    .ap_return(index_p_hls_fptosi_float_i32_fu_355_ap_return)
);

p_hls_fptosi_float_i32 index_1_p_hls_fptosi_float_i32_fu_360(
    .ap_ready(index_1_p_hls_fptosi_float_i32_fu_360_ap_ready),
    .x(tmp_6_1_reg_1540),
    .ap_return(index_1_p_hls_fptosi_float_i32_fu_360_ap_return)
);

p_hls_fptosi_float_i32 index_2_p_hls_fptosi_float_i32_fu_365(
    .ap_ready(index_2_p_hls_fptosi_float_i32_fu_365_ap_ready),
    .x(tmp_6_2_reg_1545),
    .ap_return(index_2_p_hls_fptosi_float_i32_fu_365_ap_return)
);

p_hls_fptosi_float_i32 index_3_p_hls_fptosi_float_i32_fu_370(
    .ap_ready(index_3_p_hls_fptosi_float_i32_fu_370_ap_ready),
    .x(tmp_6_3_reg_1550),
    .ap_return(index_3_p_hls_fptosi_float_i32_fu_370_ap_return)
);

p_hls_fptosi_float_i32 index_4_p_hls_fptosi_float_i32_fu_375(
    .ap_ready(index_4_p_hls_fptosi_float_i32_fu_375_ap_ready),
    .x(tmp_6_4_reg_1555),
    .ap_return(index_4_p_hls_fptosi_float_i32_fu_375_ap_return)
);

p_hls_fptosi_float_i32 index_5_p_hls_fptosi_float_i32_fu_380(
    .ap_ready(index_5_p_hls_fptosi_float_i32_fu_380_ap_ready),
    .x(tmp_6_5_reg_1560),
    .ap_return(index_5_p_hls_fptosi_float_i32_fu_380_ap_return)
);

p_hls_fptosi_float_i32 index_6_p_hls_fptosi_float_i32_fu_385(
    .ap_ready(index_6_p_hls_fptosi_float_i32_fu_385_ap_ready),
    .x(tmp_6_6_reg_1565),
    .ap_return(index_6_p_hls_fptosi_float_i32_fu_385_ap_return)
);

p_hls_fptosi_float_i32 index_7_p_hls_fptosi_float_i32_fu_390(
    .ap_ready(index_7_p_hls_fptosi_float_i32_fu_390_ap_ready),
    .x(tmp_6_7_reg_1570),
    .ap_return(index_7_p_hls_fptosi_float_i32_fu_390_ap_return)
);

p_hls_fptosi_float_i32 index_8_p_hls_fptosi_float_i32_fu_395(
    .ap_ready(index_8_p_hls_fptosi_float_i32_fu_395_ap_ready),
    .x(tmp_6_8_reg_1575),
    .ap_return(index_8_p_hls_fptosi_float_i32_fu_395_ap_return)
);

p_hls_fptosi_float_i32 index_9_p_hls_fptosi_float_i32_fu_400(
    .ap_ready(index_9_p_hls_fptosi_float_i32_fu_400_ap_ready),
    .x(tmp_6_9_reg_1580),
    .ap_return(index_9_p_hls_fptosi_float_i32_fu_400_ap_return)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U602(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_0_read_2_reg_1488),
    .din1(grp_fu_405_p1),
    .ce(1'b1),
    .dout(grp_fu_405_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U603(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_1_read_2_reg_1481),
    .din1(grp_fu_411_p1),
    .ce(1'b1),
    .dout(grp_fu_411_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U604(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_2_read_2_reg_1474),
    .din1(grp_fu_417_p1),
    .ce(1'b1),
    .dout(grp_fu_417_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U605(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_3_read_2_reg_1467),
    .din1(grp_fu_423_p1),
    .ce(1'b1),
    .dout(grp_fu_423_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U606(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_4_read_2_reg_1460),
    .din1(grp_fu_429_p1),
    .ce(1'b1),
    .dout(grp_fu_429_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U607(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_5_read_2_reg_1453),
    .din1(grp_fu_435_p1),
    .ce(1'b1),
    .dout(grp_fu_435_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U608(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_6_read_2_reg_1446),
    .din1(grp_fu_441_p1),
    .ce(1'b1),
    .dout(grp_fu_441_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U609(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_7_read_2_reg_1439),
    .din1(grp_fu_447_p1),
    .ce(1'b1),
    .dout(grp_fu_447_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U610(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_8_read_1_reg_1432),
    .din1(grp_fu_453_p1),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U611(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_9_read_1_reg_1425),
    .din1(grp_fu_459_p1),
    .ce(1'b1),
    .dout(grp_fu_459_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U612(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_575),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_465_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U613(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_581),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_470_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U614(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_587),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_475_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U615(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_593),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_480_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U616(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_599),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_485_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U617(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_605),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_490_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U618(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_611),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_495_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U619(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_617),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_500_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U620(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_623),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_505_p2)
);

jedi_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
jedi_fmul_32ns_32ns_32_3_max_dsp_1_U621(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_629),
    .din1(32'd3187671040),
    .ce(1'b1),
    .dout(grp_fu_510_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U622(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_0_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_515_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U623(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_1_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_521_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U624(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_2_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_527_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U625(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_3_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_533_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U626(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_4_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_539_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U627(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_5_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_545_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U628(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_6_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_551_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U629(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_7_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_557_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U630(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_8_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_563_p2)
);

jedi_fcmp_32ns_32ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
jedi_fcmp_32ns_32ns_1_2_1_U631(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(data_9_read),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_569_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_reg_1495_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_0_write_assign_reg_255 <= reg_575_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter8_res_0_write_assign_reg_255;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_8_reg_1499_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_1_write_assign_reg_265 <= reg_581_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter8_res_1_write_assign_reg_265;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_9_reg_1503_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_2_write_assign_reg_275 <= reg_587_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter8_res_2_write_assign_reg_275;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_10_reg_1507_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_3_write_assign_reg_285 <= reg_593_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter8_res_3_write_assign_reg_285;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_11_reg_1511_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_4_write_assign_reg_295 <= reg_599_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter8_res_4_write_assign_reg_295;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_12_reg_1515_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_5_write_assign_reg_305 <= reg_605_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter8_res_5_write_assign_reg_305;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_13_reg_1519_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_6_write_assign_reg_315 <= reg_611_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter8_res_6_write_assign_reg_315;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_14_reg_1523_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_7_write_assign_reg_325 <= reg_617_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter8_res_7_write_assign_reg_325;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_15_reg_1527_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_8_write_assign_reg_335 <= reg_623_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter8_res_8_write_assign_reg_335;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        if ((1'd1 == and_ln776_16_reg_1531_pp0_iter7_reg)) begin
            ap_phi_reg_pp0_iter9_res_9_write_assign_reg_345 <= reg_629_pp0_iter7_reg;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter9_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter8_res_9_write_assign_reg_345;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln776_10_reg_1507 <= and_ln776_10_fu_793_p2;
        and_ln776_11_reg_1511 <= and_ln776_11_fu_834_p2;
        and_ln776_12_reg_1515 <= and_ln776_12_fu_875_p2;
        and_ln776_13_reg_1519 <= and_ln776_13_fu_916_p2;
        and_ln776_14_reg_1523 <= and_ln776_14_fu_957_p2;
        and_ln776_15_reg_1527 <= and_ln776_15_fu_998_p2;
        and_ln776_16_reg_1531 <= and_ln776_16_fu_1039_p2;
        and_ln776_8_reg_1499 <= and_ln776_8_fu_711_p2;
        and_ln776_9_reg_1503 <= and_ln776_9_fu_752_p2;
        and_ln776_reg_1495 <= and_ln776_fu_670_p2;
        data_0_read_2_reg_1488 <= data_0_read;
        data_1_read_2_reg_1481 <= data_1_read;
        data_2_read_2_reg_1474 <= data_2_read;
        data_3_read_2_reg_1467 <= data_3_read;
        data_4_read_2_reg_1460 <= data_4_read;
        data_5_read_2_reg_1453 <= data_5_read;
        data_6_read_2_reg_1446 <= data_6_read;
        data_7_read_2_reg_1439 <= data_7_read;
        data_8_read_1_reg_1432 <= data_8_read;
        data_9_read_1_reg_1425 <= data_9_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln776_10_reg_1507_pp0_iter2_reg <= and_ln776_10_reg_1507;
        and_ln776_10_reg_1507_pp0_iter3_reg <= and_ln776_10_reg_1507_pp0_iter2_reg;
        and_ln776_10_reg_1507_pp0_iter4_reg <= and_ln776_10_reg_1507_pp0_iter3_reg;
        and_ln776_10_reg_1507_pp0_iter5_reg <= and_ln776_10_reg_1507_pp0_iter4_reg;
        and_ln776_10_reg_1507_pp0_iter6_reg <= and_ln776_10_reg_1507_pp0_iter5_reg;
        and_ln776_10_reg_1507_pp0_iter7_reg <= and_ln776_10_reg_1507_pp0_iter6_reg;
        and_ln776_10_reg_1507_pp0_iter8_reg <= and_ln776_10_reg_1507_pp0_iter7_reg;
        and_ln776_11_reg_1511_pp0_iter2_reg <= and_ln776_11_reg_1511;
        and_ln776_11_reg_1511_pp0_iter3_reg <= and_ln776_11_reg_1511_pp0_iter2_reg;
        and_ln776_11_reg_1511_pp0_iter4_reg <= and_ln776_11_reg_1511_pp0_iter3_reg;
        and_ln776_11_reg_1511_pp0_iter5_reg <= and_ln776_11_reg_1511_pp0_iter4_reg;
        and_ln776_11_reg_1511_pp0_iter6_reg <= and_ln776_11_reg_1511_pp0_iter5_reg;
        and_ln776_11_reg_1511_pp0_iter7_reg <= and_ln776_11_reg_1511_pp0_iter6_reg;
        and_ln776_11_reg_1511_pp0_iter8_reg <= and_ln776_11_reg_1511_pp0_iter7_reg;
        and_ln776_12_reg_1515_pp0_iter2_reg <= and_ln776_12_reg_1515;
        and_ln776_12_reg_1515_pp0_iter3_reg <= and_ln776_12_reg_1515_pp0_iter2_reg;
        and_ln776_12_reg_1515_pp0_iter4_reg <= and_ln776_12_reg_1515_pp0_iter3_reg;
        and_ln776_12_reg_1515_pp0_iter5_reg <= and_ln776_12_reg_1515_pp0_iter4_reg;
        and_ln776_12_reg_1515_pp0_iter6_reg <= and_ln776_12_reg_1515_pp0_iter5_reg;
        and_ln776_12_reg_1515_pp0_iter7_reg <= and_ln776_12_reg_1515_pp0_iter6_reg;
        and_ln776_12_reg_1515_pp0_iter8_reg <= and_ln776_12_reg_1515_pp0_iter7_reg;
        and_ln776_13_reg_1519_pp0_iter2_reg <= and_ln776_13_reg_1519;
        and_ln776_13_reg_1519_pp0_iter3_reg <= and_ln776_13_reg_1519_pp0_iter2_reg;
        and_ln776_13_reg_1519_pp0_iter4_reg <= and_ln776_13_reg_1519_pp0_iter3_reg;
        and_ln776_13_reg_1519_pp0_iter5_reg <= and_ln776_13_reg_1519_pp0_iter4_reg;
        and_ln776_13_reg_1519_pp0_iter6_reg <= and_ln776_13_reg_1519_pp0_iter5_reg;
        and_ln776_13_reg_1519_pp0_iter7_reg <= and_ln776_13_reg_1519_pp0_iter6_reg;
        and_ln776_13_reg_1519_pp0_iter8_reg <= and_ln776_13_reg_1519_pp0_iter7_reg;
        and_ln776_14_reg_1523_pp0_iter2_reg <= and_ln776_14_reg_1523;
        and_ln776_14_reg_1523_pp0_iter3_reg <= and_ln776_14_reg_1523_pp0_iter2_reg;
        and_ln776_14_reg_1523_pp0_iter4_reg <= and_ln776_14_reg_1523_pp0_iter3_reg;
        and_ln776_14_reg_1523_pp0_iter5_reg <= and_ln776_14_reg_1523_pp0_iter4_reg;
        and_ln776_14_reg_1523_pp0_iter6_reg <= and_ln776_14_reg_1523_pp0_iter5_reg;
        and_ln776_14_reg_1523_pp0_iter7_reg <= and_ln776_14_reg_1523_pp0_iter6_reg;
        and_ln776_14_reg_1523_pp0_iter8_reg <= and_ln776_14_reg_1523_pp0_iter7_reg;
        and_ln776_15_reg_1527_pp0_iter2_reg <= and_ln776_15_reg_1527;
        and_ln776_15_reg_1527_pp0_iter3_reg <= and_ln776_15_reg_1527_pp0_iter2_reg;
        and_ln776_15_reg_1527_pp0_iter4_reg <= and_ln776_15_reg_1527_pp0_iter3_reg;
        and_ln776_15_reg_1527_pp0_iter5_reg <= and_ln776_15_reg_1527_pp0_iter4_reg;
        and_ln776_15_reg_1527_pp0_iter6_reg <= and_ln776_15_reg_1527_pp0_iter5_reg;
        and_ln776_15_reg_1527_pp0_iter7_reg <= and_ln776_15_reg_1527_pp0_iter6_reg;
        and_ln776_15_reg_1527_pp0_iter8_reg <= and_ln776_15_reg_1527_pp0_iter7_reg;
        and_ln776_16_reg_1531_pp0_iter2_reg <= and_ln776_16_reg_1531;
        and_ln776_16_reg_1531_pp0_iter3_reg <= and_ln776_16_reg_1531_pp0_iter2_reg;
        and_ln776_16_reg_1531_pp0_iter4_reg <= and_ln776_16_reg_1531_pp0_iter3_reg;
        and_ln776_16_reg_1531_pp0_iter5_reg <= and_ln776_16_reg_1531_pp0_iter4_reg;
        and_ln776_16_reg_1531_pp0_iter6_reg <= and_ln776_16_reg_1531_pp0_iter5_reg;
        and_ln776_16_reg_1531_pp0_iter7_reg <= and_ln776_16_reg_1531_pp0_iter6_reg;
        and_ln776_16_reg_1531_pp0_iter8_reg <= and_ln776_16_reg_1531_pp0_iter7_reg;
        and_ln776_8_reg_1499_pp0_iter2_reg <= and_ln776_8_reg_1499;
        and_ln776_8_reg_1499_pp0_iter3_reg <= and_ln776_8_reg_1499_pp0_iter2_reg;
        and_ln776_8_reg_1499_pp0_iter4_reg <= and_ln776_8_reg_1499_pp0_iter3_reg;
        and_ln776_8_reg_1499_pp0_iter5_reg <= and_ln776_8_reg_1499_pp0_iter4_reg;
        and_ln776_8_reg_1499_pp0_iter6_reg <= and_ln776_8_reg_1499_pp0_iter5_reg;
        and_ln776_8_reg_1499_pp0_iter7_reg <= and_ln776_8_reg_1499_pp0_iter6_reg;
        and_ln776_8_reg_1499_pp0_iter8_reg <= and_ln776_8_reg_1499_pp0_iter7_reg;
        and_ln776_9_reg_1503_pp0_iter2_reg <= and_ln776_9_reg_1503;
        and_ln776_9_reg_1503_pp0_iter3_reg <= and_ln776_9_reg_1503_pp0_iter2_reg;
        and_ln776_9_reg_1503_pp0_iter4_reg <= and_ln776_9_reg_1503_pp0_iter3_reg;
        and_ln776_9_reg_1503_pp0_iter5_reg <= and_ln776_9_reg_1503_pp0_iter4_reg;
        and_ln776_9_reg_1503_pp0_iter6_reg <= and_ln776_9_reg_1503_pp0_iter5_reg;
        and_ln776_9_reg_1503_pp0_iter7_reg <= and_ln776_9_reg_1503_pp0_iter6_reg;
        and_ln776_9_reg_1503_pp0_iter8_reg <= and_ln776_9_reg_1503_pp0_iter7_reg;
        and_ln776_reg_1495_pp0_iter2_reg <= and_ln776_reg_1495;
        and_ln776_reg_1495_pp0_iter3_reg <= and_ln776_reg_1495_pp0_iter2_reg;
        and_ln776_reg_1495_pp0_iter4_reg <= and_ln776_reg_1495_pp0_iter3_reg;
        and_ln776_reg_1495_pp0_iter5_reg <= and_ln776_reg_1495_pp0_iter4_reg;
        and_ln776_reg_1495_pp0_iter6_reg <= and_ln776_reg_1495_pp0_iter5_reg;
        and_ln776_reg_1495_pp0_iter7_reg <= and_ln776_reg_1495_pp0_iter6_reg;
        and_ln776_reg_1495_pp0_iter8_reg <= and_ln776_reg_1495_pp0_iter7_reg;
        reg_575_pp0_iter4_reg <= reg_575;
        reg_575_pp0_iter5_reg <= reg_575_pp0_iter4_reg;
        reg_575_pp0_iter6_reg <= reg_575_pp0_iter5_reg;
        reg_575_pp0_iter7_reg <= reg_575_pp0_iter6_reg;
        reg_581_pp0_iter4_reg <= reg_581;
        reg_581_pp0_iter5_reg <= reg_581_pp0_iter4_reg;
        reg_581_pp0_iter6_reg <= reg_581_pp0_iter5_reg;
        reg_581_pp0_iter7_reg <= reg_581_pp0_iter6_reg;
        reg_587_pp0_iter4_reg <= reg_587;
        reg_587_pp0_iter5_reg <= reg_587_pp0_iter4_reg;
        reg_587_pp0_iter6_reg <= reg_587_pp0_iter5_reg;
        reg_587_pp0_iter7_reg <= reg_587_pp0_iter6_reg;
        reg_593_pp0_iter4_reg <= reg_593;
        reg_593_pp0_iter5_reg <= reg_593_pp0_iter4_reg;
        reg_593_pp0_iter6_reg <= reg_593_pp0_iter5_reg;
        reg_593_pp0_iter7_reg <= reg_593_pp0_iter6_reg;
        reg_599_pp0_iter4_reg <= reg_599;
        reg_599_pp0_iter5_reg <= reg_599_pp0_iter4_reg;
        reg_599_pp0_iter6_reg <= reg_599_pp0_iter5_reg;
        reg_599_pp0_iter7_reg <= reg_599_pp0_iter6_reg;
        reg_605_pp0_iter4_reg <= reg_605;
        reg_605_pp0_iter5_reg <= reg_605_pp0_iter4_reg;
        reg_605_pp0_iter6_reg <= reg_605_pp0_iter5_reg;
        reg_605_pp0_iter7_reg <= reg_605_pp0_iter6_reg;
        reg_611_pp0_iter4_reg <= reg_611;
        reg_611_pp0_iter5_reg <= reg_611_pp0_iter4_reg;
        reg_611_pp0_iter6_reg <= reg_611_pp0_iter5_reg;
        reg_611_pp0_iter7_reg <= reg_611_pp0_iter6_reg;
        reg_617_pp0_iter4_reg <= reg_617;
        reg_617_pp0_iter5_reg <= reg_617_pp0_iter4_reg;
        reg_617_pp0_iter6_reg <= reg_617_pp0_iter5_reg;
        reg_617_pp0_iter7_reg <= reg_617_pp0_iter6_reg;
        reg_623_pp0_iter4_reg <= reg_623;
        reg_623_pp0_iter5_reg <= reg_623_pp0_iter4_reg;
        reg_623_pp0_iter6_reg <= reg_623_pp0_iter5_reg;
        reg_623_pp0_iter7_reg <= reg_623_pp0_iter6_reg;
        reg_629_pp0_iter4_reg <= reg_629;
        reg_629_pp0_iter5_reg <= reg_629_pp0_iter4_reg;
        reg_629_pp0_iter6_reg <= reg_629_pp0_iter5_reg;
        reg_629_pp0_iter7_reg <= reg_629_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter0_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter1_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter0_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter1_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter0_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter1_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter0_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter1_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter0_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter1_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter0_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter1_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter0_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter1_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter0_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter1_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter0_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter1_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter0_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter1_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter2_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter1_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter2_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter1_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter2_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter1_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter2_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter1_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter2_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter1_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter2_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter1_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter2_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter1_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter2_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter1_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter2_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter1_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter2_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter3_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter2_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter3_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter2_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter3_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter2_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter3_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter2_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter3_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter2_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter3_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter2_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter3_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter2_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter3_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter2_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter3_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter2_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter3_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter4_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter3_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter4_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter3_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter4_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter3_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter4_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter3_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter4_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter3_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter4_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter3_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter4_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter3_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter4_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter3_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter4_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter3_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter4_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter5_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter4_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter5_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter4_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter5_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter4_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter5_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter4_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter5_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter4_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter5_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter4_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter5_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter4_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter5_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter4_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter5_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter4_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter5_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter6_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter5_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter6_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter5_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter6_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter5_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter6_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter5_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter6_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter5_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter6_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter5_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter6_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter5_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter6_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter5_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter6_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter5_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter6_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter7_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter6_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter7_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter6_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter7_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter6_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter7_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter6_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter7_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter6_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter7_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter6_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter7_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter6_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter7_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter6_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter7_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter6_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_res_0_write_assign_reg_255 <= ap_phi_reg_pp0_iter7_res_0_write_assign_reg_255;
        ap_phi_reg_pp0_iter8_res_1_write_assign_reg_265 <= ap_phi_reg_pp0_iter7_res_1_write_assign_reg_265;
        ap_phi_reg_pp0_iter8_res_2_write_assign_reg_275 <= ap_phi_reg_pp0_iter7_res_2_write_assign_reg_275;
        ap_phi_reg_pp0_iter8_res_3_write_assign_reg_285 <= ap_phi_reg_pp0_iter7_res_3_write_assign_reg_285;
        ap_phi_reg_pp0_iter8_res_4_write_assign_reg_295 <= ap_phi_reg_pp0_iter7_res_4_write_assign_reg_295;
        ap_phi_reg_pp0_iter8_res_5_write_assign_reg_305 <= ap_phi_reg_pp0_iter7_res_5_write_assign_reg_305;
        ap_phi_reg_pp0_iter8_res_6_write_assign_reg_315 <= ap_phi_reg_pp0_iter7_res_6_write_assign_reg_315;
        ap_phi_reg_pp0_iter8_res_7_write_assign_reg_325 <= ap_phi_reg_pp0_iter7_res_7_write_assign_reg_325;
        ap_phi_reg_pp0_iter8_res_8_write_assign_reg_335 <= ap_phi_reg_pp0_iter7_res_8_write_assign_reg_335;
        ap_phi_reg_pp0_iter8_res_9_write_assign_reg_345 <= ap_phi_reg_pp0_iter7_res_9_write_assign_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_reg_1495_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_reg_1495_pp0_iter2_reg)))) begin
        reg_575 <= grp_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_8_reg_1499_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_8_reg_1499_pp0_iter2_reg)))) begin
        reg_581 <= grp_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_9_reg_1503_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_9_reg_1503_pp0_iter2_reg)))) begin
        reg_587 <= grp_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_10_reg_1507_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_10_reg_1507_pp0_iter2_reg)))) begin
        reg_593 <= grp_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_11_reg_1511_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_11_reg_1511_pp0_iter2_reg)))) begin
        reg_599 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_12_reg_1515_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_12_reg_1515_pp0_iter2_reg)))) begin
        reg_605 <= grp_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_13_reg_1519_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_13_reg_1519_pp0_iter2_reg)))) begin
        reg_611 <= grp_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_14_reg_1523_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_14_reg_1523_pp0_iter2_reg)))) begin
        reg_617 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_15_reg_1527_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_15_reg_1527_pp0_iter2_reg)))) begin
        reg_623 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln776_16_reg_1531_pp0_iter2_reg)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln776_16_reg_1531_pp0_iter2_reg)))) begin
        reg_629 <= grp_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_8_reg_1499_pp0_iter6_reg))) begin
        select_ln780_1_reg_1590 <= select_ln780_1_fu_1093_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_9_reg_1503_pp0_iter6_reg))) begin
        select_ln780_2_reg_1595 <= select_ln780_2_fu_1121_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_10_reg_1507_pp0_iter6_reg))) begin
        select_ln780_3_reg_1600 <= select_ln780_3_fu_1149_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_11_reg_1511_pp0_iter6_reg))) begin
        select_ln780_4_reg_1605 <= select_ln780_4_fu_1177_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_12_reg_1515_pp0_iter6_reg))) begin
        select_ln780_5_reg_1610 <= select_ln780_5_fu_1205_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_13_reg_1519_pp0_iter6_reg))) begin
        select_ln780_6_reg_1615 <= select_ln780_6_fu_1233_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_14_reg_1523_pp0_iter6_reg))) begin
        select_ln780_7_reg_1620 <= select_ln780_7_fu_1261_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_15_reg_1527_pp0_iter6_reg))) begin
        select_ln780_8_reg_1625 <= select_ln780_8_fu_1289_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_16_reg_1531_pp0_iter6_reg))) begin
        select_ln780_9_reg_1630 <= select_ln780_9_fu_1317_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_reg_1495_pp0_iter6_reg))) begin
        select_ln780_reg_1585 <= select_ln780_fu_1065_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_8_reg_1499_pp0_iter5_reg))) begin
        tmp_6_1_reg_1540 <= grp_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_9_reg_1503_pp0_iter5_reg))) begin
        tmp_6_2_reg_1545 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_10_reg_1507_pp0_iter5_reg))) begin
        tmp_6_3_reg_1550 <= grp_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_11_reg_1511_pp0_iter5_reg))) begin
        tmp_6_4_reg_1555 <= grp_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_12_reg_1515_pp0_iter5_reg))) begin
        tmp_6_5_reg_1560 <= grp_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_13_reg_1519_pp0_iter5_reg))) begin
        tmp_6_6_reg_1565 <= grp_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_14_reg_1523_pp0_iter5_reg))) begin
        tmp_6_7_reg_1570 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_15_reg_1527_pp0_iter5_reg))) begin
        tmp_6_8_reg_1575 <= grp_fu_505_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_16_reg_1531_pp0_iter5_reg))) begin
        tmp_6_9_reg_1580 <= grp_fu_510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln776_reg_1495_pp0_iter5_reg))) begin
        tmp_6_reg_1535 <= grp_fu_465_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_reg_1495_pp0_iter8_reg)) begin
        ap_phi_mux_res_0_write_assign_phi_fu_258_p4 = selu_table3_q0;
    end else begin
        ap_phi_mux_res_0_write_assign_phi_fu_258_p4 = ap_phi_reg_pp0_iter9_res_0_write_assign_reg_255;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_8_reg_1499_pp0_iter8_reg)) begin
        ap_phi_mux_res_1_write_assign_phi_fu_268_p4 = selu_table3_q1;
    end else begin
        ap_phi_mux_res_1_write_assign_phi_fu_268_p4 = ap_phi_reg_pp0_iter9_res_1_write_assign_reg_265;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_9_reg_1503_pp0_iter8_reg)) begin
        ap_phi_mux_res_2_write_assign_phi_fu_278_p4 = selu_table3_q2;
    end else begin
        ap_phi_mux_res_2_write_assign_phi_fu_278_p4 = ap_phi_reg_pp0_iter9_res_2_write_assign_reg_275;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_10_reg_1507_pp0_iter8_reg)) begin
        ap_phi_mux_res_3_write_assign_phi_fu_288_p4 = selu_table3_q3;
    end else begin
        ap_phi_mux_res_3_write_assign_phi_fu_288_p4 = ap_phi_reg_pp0_iter9_res_3_write_assign_reg_285;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_11_reg_1511_pp0_iter8_reg)) begin
        ap_phi_mux_res_4_write_assign_phi_fu_298_p4 = selu_table3_q4;
    end else begin
        ap_phi_mux_res_4_write_assign_phi_fu_298_p4 = ap_phi_reg_pp0_iter9_res_4_write_assign_reg_295;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_12_reg_1515_pp0_iter8_reg)) begin
        ap_phi_mux_res_5_write_assign_phi_fu_308_p4 = selu_table3_q5;
    end else begin
        ap_phi_mux_res_5_write_assign_phi_fu_308_p4 = ap_phi_reg_pp0_iter9_res_5_write_assign_reg_305;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_13_reg_1519_pp0_iter8_reg)) begin
        ap_phi_mux_res_6_write_assign_phi_fu_318_p4 = selu_table3_q6;
    end else begin
        ap_phi_mux_res_6_write_assign_phi_fu_318_p4 = ap_phi_reg_pp0_iter9_res_6_write_assign_reg_315;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_14_reg_1523_pp0_iter8_reg)) begin
        ap_phi_mux_res_7_write_assign_phi_fu_328_p4 = selu_table3_q7;
    end else begin
        ap_phi_mux_res_7_write_assign_phi_fu_328_p4 = ap_phi_reg_pp0_iter9_res_7_write_assign_reg_325;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_15_reg_1527_pp0_iter8_reg)) begin
        ap_phi_mux_res_8_write_assign_phi_fu_338_p4 = selu_table3_q8;
    end else begin
        ap_phi_mux_res_8_write_assign_phi_fu_338_p4 = ap_phi_reg_pp0_iter9_res_8_write_assign_reg_335;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln776_16_reg_1531_pp0_iter8_reg)) begin
        ap_phi_mux_res_9_write_assign_phi_fu_348_p4 = selu_table3_q9;
    end else begin
        ap_phi_mux_res_9_write_assign_phi_fu_348_p4 = ap_phi_reg_pp0_iter9_res_9_write_assign_reg_345;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_fu_670_p2)) begin
            grp_fu_405_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_fu_670_p2)) begin
            grp_fu_405_p1 = 32'd1149239296;
        end else begin
            grp_fu_405_p1 = 'bx;
        end
    end else begin
        grp_fu_405_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_8_fu_711_p2)) begin
            grp_fu_411_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_8_fu_711_p2)) begin
            grp_fu_411_p1 = 32'd1149239296;
        end else begin
            grp_fu_411_p1 = 'bx;
        end
    end else begin
        grp_fu_411_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_9_fu_752_p2)) begin
            grp_fu_417_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_9_fu_752_p2)) begin
            grp_fu_417_p1 = 32'd1149239296;
        end else begin
            grp_fu_417_p1 = 'bx;
        end
    end else begin
        grp_fu_417_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_10_fu_793_p2)) begin
            grp_fu_423_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_10_fu_793_p2)) begin
            grp_fu_423_p1 = 32'd1149239296;
        end else begin
            grp_fu_423_p1 = 'bx;
        end
    end else begin
        grp_fu_423_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_11_fu_834_p2)) begin
            grp_fu_429_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_11_fu_834_p2)) begin
            grp_fu_429_p1 = 32'd1149239296;
        end else begin
            grp_fu_429_p1 = 'bx;
        end
    end else begin
        grp_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_12_fu_875_p2)) begin
            grp_fu_435_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_12_fu_875_p2)) begin
            grp_fu_435_p1 = 32'd1149239296;
        end else begin
            grp_fu_435_p1 = 'bx;
        end
    end else begin
        grp_fu_435_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_13_fu_916_p2)) begin
            grp_fu_441_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_13_fu_916_p2)) begin
            grp_fu_441_p1 = 32'd1149239296;
        end else begin
            grp_fu_441_p1 = 'bx;
        end
    end else begin
        grp_fu_441_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_14_fu_957_p2)) begin
            grp_fu_447_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_14_fu_957_p2)) begin
            grp_fu_447_p1 = 32'd1149239296;
        end else begin
            grp_fu_447_p1 = 'bx;
        end
    end else begin
        grp_fu_447_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_15_fu_998_p2)) begin
            grp_fu_453_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_15_fu_998_p2)) begin
            grp_fu_453_p1 = 32'd1149239296;
        end else begin
            grp_fu_453_p1 = 'bx;
        end
    end else begin
        grp_fu_453_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_803)) begin
        if ((1'd1 == and_ln776_16_fu_1039_p2)) begin
            grp_fu_459_p1 = 32'd1065778527;
        end else if ((1'd0 == and_ln776_16_fu_1039_p2)) begin
            grp_fu_459_p1 = 32'd1149239296;
        end else begin
            grp_fu_459_p1 = 'bx;
        end
    end else begin
        grp_fu_459_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce0 = 1'b1;
    end else begin
        selu_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce1 = 1'b1;
    end else begin
        selu_table3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce2 = 1'b1;
    end else begin
        selu_table3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce3 = 1'b1;
    end else begin
        selu_table3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce4 = 1'b1;
    end else begin
        selu_table3_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce5 = 1'b1;
    end else begin
        selu_table3_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce6 = 1'b1;
    end else begin
        selu_table3_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce7 = 1'b1;
    end else begin
        selu_table3_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce8 = 1'b1;
    end else begin
        selu_table3_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        selu_table3_ce9 = 1'b1;
    end else begin
        selu_table3_ce9 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln776_10_fu_793_p2 = (or_ln776_10_fu_787_p2 & grp_fu_533_p2);

assign and_ln776_11_fu_834_p2 = (or_ln776_11_fu_828_p2 & grp_fu_539_p2);

assign and_ln776_12_fu_875_p2 = (or_ln776_12_fu_869_p2 & grp_fu_545_p2);

assign and_ln776_13_fu_916_p2 = (or_ln776_13_fu_910_p2 & grp_fu_551_p2);

assign and_ln776_14_fu_957_p2 = (or_ln776_14_fu_951_p2 & grp_fu_557_p2);

assign and_ln776_15_fu_998_p2 = (or_ln776_15_fu_992_p2 & grp_fu_563_p2);

assign and_ln776_16_fu_1039_p2 = (or_ln776_16_fu_1033_p2 & grp_fu_569_p2);

assign and_ln776_8_fu_711_p2 = (or_ln776_8_fu_705_p2 & grp_fu_521_p2);

assign and_ln776_9_fu_752_p2 = (or_ln776_9_fu_746_p2 & grp_fu_527_p2);

assign and_ln776_fu_670_p2 = (or_ln776_fu_664_p2 & grp_fu_515_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_803 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_res_0_write_assign_reg_255 = 'bx;

assign ap_phi_reg_pp0_iter0_res_1_write_assign_reg_265 = 'bx;

assign ap_phi_reg_pp0_iter0_res_2_write_assign_reg_275 = 'bx;

assign ap_phi_reg_pp0_iter0_res_3_write_assign_reg_285 = 'bx;

assign ap_phi_reg_pp0_iter0_res_4_write_assign_reg_295 = 'bx;

assign ap_phi_reg_pp0_iter0_res_5_write_assign_reg_305 = 'bx;

assign ap_phi_reg_pp0_iter0_res_6_write_assign_reg_315 = 'bx;

assign ap_phi_reg_pp0_iter0_res_7_write_assign_reg_325 = 'bx;

assign ap_phi_reg_pp0_iter0_res_8_write_assign_reg_335 = 'bx;

assign ap_phi_reg_pp0_iter0_res_9_write_assign_reg_345 = 'bx;

assign ap_return_0 = ap_phi_mux_res_0_write_assign_phi_fu_258_p4;

assign ap_return_1 = ap_phi_mux_res_1_write_assign_phi_fu_268_p4;

assign ap_return_2 = ap_phi_mux_res_2_write_assign_phi_fu_278_p4;

assign ap_return_3 = ap_phi_mux_res_3_write_assign_phi_fu_288_p4;

assign ap_return_4 = ap_phi_mux_res_4_write_assign_phi_fu_298_p4;

assign ap_return_5 = ap_phi_mux_res_5_write_assign_phi_fu_308_p4;

assign ap_return_6 = ap_phi_mux_res_6_write_assign_phi_fu_318_p4;

assign ap_return_7 = ap_phi_mux_res_7_write_assign_phi_fu_328_p4;

assign ap_return_8 = ap_phi_mux_res_8_write_assign_phi_fu_338_p4;

assign ap_return_9 = ap_phi_mux_res_9_write_assign_phi_fu_348_p4;

assign bitcast_ln776_10_fu_758_p1 = data_3_read_2_reg_1467;

assign bitcast_ln776_11_fu_799_p1 = data_4_read_2_reg_1460;

assign bitcast_ln776_12_fu_840_p1 = data_5_read_2_reg_1453;

assign bitcast_ln776_13_fu_881_p1 = data_6_read_2_reg_1446;

assign bitcast_ln776_14_fu_922_p1 = data_7_read_2_reg_1439;

assign bitcast_ln776_15_fu_963_p1 = data_8_read_1_reg_1432;

assign bitcast_ln776_16_fu_1004_p1 = data_9_read_1_reg_1425;

assign bitcast_ln776_8_fu_676_p1 = data_1_read_2_reg_1481;

assign bitcast_ln776_9_fu_717_p1 = data_2_read_2_reg_1474;

assign bitcast_ln776_fu_635_p1 = data_0_read_2_reg_1488;

assign icmp_ln776_16_fu_658_p2 = ((trunc_ln776_fu_648_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_17_fu_693_p2 = ((tmp_20_fu_679_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_18_fu_699_p2 = ((trunc_ln776_8_fu_689_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_19_fu_734_p2 = ((tmp_22_fu_720_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_20_fu_740_p2 = ((trunc_ln776_9_fu_730_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_21_fu_775_p2 = ((tmp_24_fu_761_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_22_fu_781_p2 = ((trunc_ln776_10_fu_771_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_23_fu_816_p2 = ((tmp_26_fu_802_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_24_fu_822_p2 = ((trunc_ln776_11_fu_812_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_25_fu_857_p2 = ((tmp_28_fu_843_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_26_fu_863_p2 = ((trunc_ln776_12_fu_853_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_27_fu_898_p2 = ((tmp_30_fu_884_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_28_fu_904_p2 = ((trunc_ln776_13_fu_894_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_29_fu_939_p2 = ((tmp_32_fu_925_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_30_fu_945_p2 = ((trunc_ln776_14_fu_935_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_31_fu_980_p2 = ((tmp_34_fu_966_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_32_fu_986_p2 = ((trunc_ln776_15_fu_976_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_33_fu_1021_p2 = ((tmp_36_fu_1007_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln776_34_fu_1027_p2 = ((trunc_ln776_16_fu_1017_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln776_fu_652_p2 = ((tmp_s_fu_638_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln780_10_fu_1143_p2 = ((tmp_41_fu_1133_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_11_fu_1171_p2 = ((tmp_42_fu_1161_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_12_fu_1199_p2 = ((tmp_43_fu_1189_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_13_fu_1227_p2 = ((tmp_44_fu_1217_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_14_fu_1255_p2 = ((tmp_45_fu_1245_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_15_fu_1283_p2 = ((tmp_46_fu_1273_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_16_fu_1311_p2 = ((tmp_47_fu_1301_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_8_fu_1087_p2 = ((tmp_39_fu_1077_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_9_fu_1115_p2 = ((tmp_40_fu_1105_p4 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln780_fu_1059_p2 = ((tmp_38_fu_1049_p4 != 22'd0) ? 1'b1 : 1'b0);

assign or_ln776_10_fu_787_p2 = (icmp_ln776_22_fu_781_p2 | icmp_ln776_21_fu_775_p2);

assign or_ln776_11_fu_828_p2 = (icmp_ln776_24_fu_822_p2 | icmp_ln776_23_fu_816_p2);

assign or_ln776_12_fu_869_p2 = (icmp_ln776_26_fu_863_p2 | icmp_ln776_25_fu_857_p2);

assign or_ln776_13_fu_910_p2 = (icmp_ln776_28_fu_904_p2 | icmp_ln776_27_fu_898_p2);

assign or_ln776_14_fu_951_p2 = (icmp_ln776_30_fu_945_p2 | icmp_ln776_29_fu_939_p2);

assign or_ln776_15_fu_992_p2 = (icmp_ln776_32_fu_986_p2 | icmp_ln776_31_fu_980_p2);

assign or_ln776_16_fu_1033_p2 = (icmp_ln776_34_fu_1027_p2 | icmp_ln776_33_fu_1021_p2);

assign or_ln776_8_fu_705_p2 = (icmp_ln776_18_fu_699_p2 | icmp_ln776_17_fu_693_p2);

assign or_ln776_9_fu_746_p2 = (icmp_ln776_20_fu_740_p2 | icmp_ln776_19_fu_734_p2);

assign or_ln776_fu_664_p2 = (icmp_ln776_fu_652_p2 | icmp_ln776_16_fu_658_p2);

assign select_ln780_1_fu_1093_p3 = ((icmp_ln780_8_fu_1087_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_8_fu_1073_p1);

assign select_ln780_2_fu_1121_p3 = ((icmp_ln780_9_fu_1115_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_9_fu_1101_p1);

assign select_ln780_3_fu_1149_p3 = ((icmp_ln780_10_fu_1143_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_10_fu_1129_p1);

assign select_ln780_4_fu_1177_p3 = ((icmp_ln780_11_fu_1171_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_11_fu_1157_p1);

assign select_ln780_5_fu_1205_p3 = ((icmp_ln780_12_fu_1199_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_12_fu_1185_p1);

assign select_ln780_6_fu_1233_p3 = ((icmp_ln780_13_fu_1227_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_13_fu_1213_p1);

assign select_ln780_7_fu_1261_p3 = ((icmp_ln780_14_fu_1255_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_14_fu_1241_p1);

assign select_ln780_8_fu_1289_p3 = ((icmp_ln780_15_fu_1283_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_15_fu_1269_p1);

assign select_ln780_9_fu_1317_p3 = ((icmp_ln780_16_fu_1311_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_16_fu_1297_p1);

assign select_ln780_fu_1065_p3 = ((icmp_ln780_fu_1059_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln780_fu_1045_p1);

assign selu_table3_address0 = zext_ln781_fu_1325_p1;

assign selu_table3_address1 = zext_ln781_8_fu_1329_p1;

assign selu_table3_address2 = zext_ln781_9_fu_1333_p1;

assign selu_table3_address3 = zext_ln781_10_fu_1337_p1;

assign selu_table3_address4 = zext_ln781_11_fu_1341_p1;

assign selu_table3_address5 = zext_ln781_12_fu_1345_p1;

assign selu_table3_address6 = zext_ln781_13_fu_1349_p1;

assign selu_table3_address7 = zext_ln781_14_fu_1353_p1;

assign selu_table3_address8 = zext_ln781_15_fu_1357_p1;

assign selu_table3_address9 = zext_ln781_16_fu_1361_p1;

assign tmp_20_fu_679_p4 = {{bitcast_ln776_8_fu_676_p1[30:23]}};

assign tmp_22_fu_720_p4 = {{bitcast_ln776_9_fu_717_p1[30:23]}};

assign tmp_24_fu_761_p4 = {{bitcast_ln776_10_fu_758_p1[30:23]}};

assign tmp_26_fu_802_p4 = {{bitcast_ln776_11_fu_799_p1[30:23]}};

assign tmp_28_fu_843_p4 = {{bitcast_ln776_12_fu_840_p1[30:23]}};

assign tmp_30_fu_884_p4 = {{bitcast_ln776_13_fu_881_p1[30:23]}};

assign tmp_32_fu_925_p4 = {{bitcast_ln776_14_fu_922_p1[30:23]}};

assign tmp_34_fu_966_p4 = {{bitcast_ln776_15_fu_963_p1[30:23]}};

assign tmp_36_fu_1007_p4 = {{bitcast_ln776_16_fu_1004_p1[30:23]}};

assign tmp_38_fu_1049_p4 = {{index_p_hls_fptosi_float_i32_fu_355_ap_return[31:10]}};

assign tmp_39_fu_1077_p4 = {{index_1_p_hls_fptosi_float_i32_fu_360_ap_return[31:10]}};

assign tmp_40_fu_1105_p4 = {{index_2_p_hls_fptosi_float_i32_fu_365_ap_return[31:10]}};

assign tmp_41_fu_1133_p4 = {{index_3_p_hls_fptosi_float_i32_fu_370_ap_return[31:10]}};

assign tmp_42_fu_1161_p4 = {{index_4_p_hls_fptosi_float_i32_fu_375_ap_return[31:10]}};

assign tmp_43_fu_1189_p4 = {{index_5_p_hls_fptosi_float_i32_fu_380_ap_return[31:10]}};

assign tmp_44_fu_1217_p4 = {{index_6_p_hls_fptosi_float_i32_fu_385_ap_return[31:10]}};

assign tmp_45_fu_1245_p4 = {{index_7_p_hls_fptosi_float_i32_fu_390_ap_return[31:10]}};

assign tmp_46_fu_1273_p4 = {{index_8_p_hls_fptosi_float_i32_fu_395_ap_return[31:10]}};

assign tmp_47_fu_1301_p4 = {{index_9_p_hls_fptosi_float_i32_fu_400_ap_return[31:10]}};

assign tmp_s_fu_638_p4 = {{bitcast_ln776_fu_635_p1[30:23]}};

assign trunc_ln776_10_fu_771_p1 = bitcast_ln776_10_fu_758_p1[22:0];

assign trunc_ln776_11_fu_812_p1 = bitcast_ln776_11_fu_799_p1[22:0];

assign trunc_ln776_12_fu_853_p1 = bitcast_ln776_12_fu_840_p1[22:0];

assign trunc_ln776_13_fu_894_p1 = bitcast_ln776_13_fu_881_p1[22:0];

assign trunc_ln776_14_fu_935_p1 = bitcast_ln776_14_fu_922_p1[22:0];

assign trunc_ln776_15_fu_976_p1 = bitcast_ln776_15_fu_963_p1[22:0];

assign trunc_ln776_16_fu_1017_p1 = bitcast_ln776_16_fu_1004_p1[22:0];

assign trunc_ln776_8_fu_689_p1 = bitcast_ln776_8_fu_676_p1[22:0];

assign trunc_ln776_9_fu_730_p1 = bitcast_ln776_9_fu_717_p1[22:0];

assign trunc_ln776_fu_648_p1 = bitcast_ln776_fu_635_p1[22:0];

assign trunc_ln780_10_fu_1129_p1 = index_3_p_hls_fptosi_float_i32_fu_370_ap_return[9:0];

assign trunc_ln780_11_fu_1157_p1 = index_4_p_hls_fptosi_float_i32_fu_375_ap_return[9:0];

assign trunc_ln780_12_fu_1185_p1 = index_5_p_hls_fptosi_float_i32_fu_380_ap_return[9:0];

assign trunc_ln780_13_fu_1213_p1 = index_6_p_hls_fptosi_float_i32_fu_385_ap_return[9:0];

assign trunc_ln780_14_fu_1241_p1 = index_7_p_hls_fptosi_float_i32_fu_390_ap_return[9:0];

assign trunc_ln780_15_fu_1269_p1 = index_8_p_hls_fptosi_float_i32_fu_395_ap_return[9:0];

assign trunc_ln780_16_fu_1297_p1 = index_9_p_hls_fptosi_float_i32_fu_400_ap_return[9:0];

assign trunc_ln780_8_fu_1073_p1 = index_1_p_hls_fptosi_float_i32_fu_360_ap_return[9:0];

assign trunc_ln780_9_fu_1101_p1 = index_2_p_hls_fptosi_float_i32_fu_365_ap_return[9:0];

assign trunc_ln780_fu_1045_p1 = index_p_hls_fptosi_float_i32_fu_355_ap_return[9:0];

assign zext_ln781_10_fu_1337_p1 = select_ln780_3_reg_1600;

assign zext_ln781_11_fu_1341_p1 = select_ln780_4_reg_1605;

assign zext_ln781_12_fu_1345_p1 = select_ln780_5_reg_1610;

assign zext_ln781_13_fu_1349_p1 = select_ln780_6_reg_1615;

assign zext_ln781_14_fu_1353_p1 = select_ln780_7_reg_1620;

assign zext_ln781_15_fu_1357_p1 = select_ln780_8_reg_1625;

assign zext_ln781_16_fu_1361_p1 = select_ln780_9_reg_1630;

assign zext_ln781_8_fu_1329_p1 = select_ln780_1_reg_1590;

assign zext_ln781_9_fu_1333_p1 = select_ln780_2_reg_1595;

assign zext_ln781_fu_1325_p1 = select_ln780_reg_1585;

endmodule //selu_float_float_relu2_config_struct_s
