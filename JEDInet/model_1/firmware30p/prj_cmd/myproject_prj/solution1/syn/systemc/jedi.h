// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _jedi_HH_
#define _jedi_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "jedi_dnn1_float_float_dense1_config_s.h"
#include "jedi_multiply_float_float_mult_1_struct_s.h"
#include "jedi_multiply_float_float_mult_2_struct_s.h"
#include "jedi_concat_float_float_concat_1_struct_s.h"
#include "jedi_B_top.h"
#include "jedi_B.h"
#include "jedi_E.h"

namespace ap_rtl {

struct jedi : public sc_module {
    // Port declarations 35
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > I_address0;
    sc_out< sc_logic > I_ce0;
    sc_in< sc_lv<32> > I_q0;
    sc_out< sc_lv<15> > Rr_address0;
    sc_out< sc_logic > Rr_ce0;
    sc_in< sc_lv<32> > Rr_q0;
    sc_out< sc_lv<15> > Rr_T_address0;
    sc_out< sc_logic > Rr_T_ce0;
    sc_out< sc_logic > Rr_T_we0;
    sc_out< sc_lv<32> > Rr_T_d0;
    sc_in< sc_lv<32> > Rr_T_q0;
    sc_out< sc_lv<15> > Rr_T_address1;
    sc_out< sc_logic > Rr_T_ce1;
    sc_out< sc_logic > Rr_T_we1;
    sc_out< sc_lv<32> > Rr_T_d1;
    sc_in< sc_lv<32> > Rr_T_q1;
    sc_out< sc_lv<15> > Rs_address0;
    sc_out< sc_logic > Rs_ce0;
    sc_in< sc_lv<32> > Rs_q0;
    sc_out< sc_lv<3> > result_address0;
    sc_out< sc_logic > result_ce0;
    sc_out< sc_logic > result_we0;
    sc_out< sc_lv<32> > result_d0;
    sc_in< sc_lv<32> > result_q0;
    sc_out< sc_lv<3> > result_address1;
    sc_out< sc_logic > result_ce1;
    sc_out< sc_logic > result_we1;
    sc_out< sc_lv<32> > result_d1;
    sc_in< sc_lv<32> > result_q1;


    // Module declarations
    jedi(sc_module_name name);
    SC_HAS_PROCESS(jedi);

    ~jedi();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    jedi_B_top* B_top_U;
    jedi_B_top* B_bot_U;
    jedi_B* B_U;
    jedi_E* E_U;
    jedi_dnn1_float_float_dense1_config_s* grp_jedi_dnn1_float_float_dense1_config_s_fu_48;
    jedi_multiply_float_float_mult_1_struct_s* grp_jedi_multiply_float_float_mult_1_struct_s_fu_60;
    jedi_multiply_float_float_mult_2_struct_s* grp_jedi_multiply_float_float_mult_2_struct_s_fu_70;
    jedi_concat_float_float_concat_1_struct_s* grp_jedi_concat_float_float_concat_1_struct_s_fu_79;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > B_top_address0;
    sc_signal< sc_logic > B_top_ce0;
    sc_signal< sc_logic > B_top_we0;
    sc_signal< sc_lv<32> > B_top_q0;
    sc_signal< sc_lv<14> > B_bot_address0;
    sc_signal< sc_logic > B_bot_ce0;
    sc_signal< sc_logic > B_bot_we0;
    sc_signal< sc_lv<32> > B_bot_q0;
    sc_signal< sc_lv<15> > B_address0;
    sc_signal< sc_logic > B_ce0;
    sc_signal< sc_logic > B_we0;
    sc_signal< sc_lv<32> > B_q0;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_ap_start;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_ap_done;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_ap_idle;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_ap_ready;
    sc_signal< sc_lv<15> > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_B_address0;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_B_ce0;
    sc_signal< sc_lv<13> > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_E_address0;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_E_ce0;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_E_we0;
    sc_signal< sc_lv<32> > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_E_d0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_ap_start;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_ap_done;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_ap_idle;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_ap_ready;
    sc_signal< sc_lv<10> > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_data1_address0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_data1_ce0;
    sc_signal< sc_lv<15> > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_data2_address0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_data2_ce0;
    sc_signal< sc_lv<14> > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_res_address0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_res_ce0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_res_we0;
    sc_signal< sc_lv<32> > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_res_d0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_ap_start;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_ap_done;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_ap_idle;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_ap_ready;
    sc_signal< sc_lv<10> > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_data1_address0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_data1_ce0;
    sc_signal< sc_lv<15> > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_data2_address0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_data2_ce0;
    sc_signal< sc_lv<14> > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_res_address0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_res_ce0;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_res_we0;
    sc_signal< sc_lv<32> > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_res_d0;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_ap_start;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_ap_done;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_ap_idle;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_ap_ready;
    sc_signal< sc_lv<14> > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_data1_address0;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_data1_ce0;
    sc_signal< sc_lv<14> > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_data2_address0;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_data2_ce0;
    sc_signal< sc_lv<15> > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_res_address0;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_res_ce0;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_res_we0;
    sc_signal< sc_lv<32> > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_res_d0;
    sc_signal< sc_logic > grp_jedi_dnn1_float_float_dense1_config_s_fu_48_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_jedi_concat_float_float_concat_1_struct_s_fu_79_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_B_address0();
    void thread_B_bot_address0();
    void thread_B_bot_ce0();
    void thread_B_bot_we0();
    void thread_B_ce0();
    void thread_B_top_address0();
    void thread_B_top_ce0();
    void thread_B_top_we0();
    void thread_B_we0();
    void thread_I_address0();
    void thread_I_ce0();
    void thread_Rr_T_address0();
    void thread_Rr_T_address1();
    void thread_Rr_T_ce0();
    void thread_Rr_T_ce1();
    void thread_Rr_T_d0();
    void thread_Rr_T_d1();
    void thread_Rr_T_we0();
    void thread_Rr_T_we1();
    void thread_Rr_address0();
    void thread_Rr_ce0();
    void thread_Rs_address0();
    void thread_Rs_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_jedi_concat_float_float_concat_1_struct_s_fu_79_ap_start();
    void thread_grp_jedi_dnn1_float_float_dense1_config_s_fu_48_ap_start();
    void thread_grp_jedi_multiply_float_float_mult_1_struct_s_fu_60_ap_start();
    void thread_grp_jedi_multiply_float_float_mult_2_struct_s_fu_70_ap_start();
    void thread_result_address0();
    void thread_result_address1();
    void thread_result_ce0();
    void thread_result_ce1();
    void thread_result_d0();
    void thread_result_d1();
    void thread_result_we0();
    void thread_result_we1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
