// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_HH_
#define _tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud.h"

namespace ap_rtl {

struct tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;


    // Module declarations
    tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s(sc_module_name name);
    SC_HAS_PROCESS(tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s);

    ~tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s();

    sc_trace_file* mVcdFile;

    tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud* tanh_table7_U;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > tanh_table7_address0;
    sc_signal< sc_logic > tanh_table7_ce0;
    sc_signal< sc_lv<11> > tanh_table7_q0;
    sc_signal< sc_lv<10> > tanh_table7_address1;
    sc_signal< sc_logic > tanh_table7_ce1;
    sc_signal< sc_lv<11> > tanh_table7_q1;
    sc_signal< sc_lv<10> > tanh_table7_address2;
    sc_signal< sc_logic > tanh_table7_ce2;
    sc_signal< sc_lv<11> > tanh_table7_q2;
    sc_signal< sc_lv<10> > tanh_table7_address3;
    sc_signal< sc_logic > tanh_table7_ce3;
    sc_signal< sc_lv<11> > tanh_table7_q3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln476_fu_271_p1;
    sc_signal< sc_lv<64> > zext_ln476_64_fu_404_p1;
    sc_signal< sc_lv<64> > zext_ln476_65_fu_537_p1;
    sc_signal< sc_lv<64> > zext_ln476_66_fu_670_p1;
    sc_signal< sc_lv<13> > tmp_s_fu_151_p4;
    sc_signal< sc_lv<26> > shl_ln_fu_143_p3;
    sc_signal< sc_lv<3> > trunc_ln851_fu_171_p1;
    sc_signal< sc_lv<10> > p_Result_4_fu_175_p3;
    sc_signal< sc_lv<14> > sext_ln850_fu_161_p1;
    sc_signal< sc_lv<1> > icmp_ln851_fu_183_p2;
    sc_signal< sc_lv<14> > add_ln700_fu_189_p2;
    sc_signal< sc_lv<1> > icmp_ln850_fu_165_p2;
    sc_signal< sc_lv<14> > select_ln851_fu_195_p3;
    sc_signal< sc_lv<14> > select_ln850_fu_203_p3;
    sc_signal< sc_lv<13> > trunc_ln472_fu_211_p1;
    sc_signal< sc_lv<14> > add_ln472_fu_215_p2;
    sc_signal< sc_lv<1> > tmp_193_fu_227_p3;
    sc_signal< sc_lv<13> > add_ln472_128_fu_221_p2;
    sc_signal< sc_lv<13> > select_ln474_fu_235_p3;
    sc_signal< sc_lv<3> > tmp_194_fu_247_p4;
    sc_signal< sc_lv<1> > icmp_ln475_fu_257_p2;
    sc_signal< sc_lv<10> > trunc_ln474_fu_243_p1;
    sc_signal< sc_lv<10> > select_ln475_fu_263_p3;
    sc_signal< sc_lv<13> > tmp_125_fu_284_p4;
    sc_signal< sc_lv<26> > shl_ln1118_s_fu_276_p3;
    sc_signal< sc_lv<3> > trunc_ln851_64_fu_304_p1;
    sc_signal< sc_lv<10> > p_Result_4_1_fu_308_p3;
    sc_signal< sc_lv<14> > sext_ln850_64_fu_294_p1;
    sc_signal< sc_lv<1> > icmp_ln851_1_fu_316_p2;
    sc_signal< sc_lv<14> > add_ln700_64_fu_322_p2;
    sc_signal< sc_lv<1> > icmp_ln850_64_fu_298_p2;
    sc_signal< sc_lv<14> > select_ln851_1_fu_328_p3;
    sc_signal< sc_lv<14> > select_ln850_64_fu_336_p3;
    sc_signal< sc_lv<13> > trunc_ln472_64_fu_344_p1;
    sc_signal< sc_lv<14> > add_ln472_64_fu_348_p2;
    sc_signal< sc_lv<1> > tmp_195_fu_360_p3;
    sc_signal< sc_lv<13> > add_ln472_129_fu_354_p2;
    sc_signal< sc_lv<13> > select_ln474_1_fu_368_p3;
    sc_signal< sc_lv<3> > tmp_196_fu_380_p4;
    sc_signal< sc_lv<1> > icmp_ln475_64_fu_390_p2;
    sc_signal< sc_lv<10> > trunc_ln474_64_fu_376_p1;
    sc_signal< sc_lv<10> > select_ln475_1_fu_396_p3;
    sc_signal< sc_lv<13> > tmp_126_fu_417_p4;
    sc_signal< sc_lv<26> > shl_ln1118_63_fu_409_p3;
    sc_signal< sc_lv<3> > trunc_ln851_65_fu_437_p1;
    sc_signal< sc_lv<10> > p_Result_4_2_fu_441_p3;
    sc_signal< sc_lv<14> > sext_ln850_65_fu_427_p1;
    sc_signal< sc_lv<1> > icmp_ln851_2_fu_449_p2;
    sc_signal< sc_lv<14> > add_ln700_65_fu_455_p2;
    sc_signal< sc_lv<1> > icmp_ln850_65_fu_431_p2;
    sc_signal< sc_lv<14> > select_ln851_2_fu_461_p3;
    sc_signal< sc_lv<14> > select_ln850_65_fu_469_p3;
    sc_signal< sc_lv<13> > trunc_ln472_65_fu_477_p1;
    sc_signal< sc_lv<14> > add_ln472_65_fu_481_p2;
    sc_signal< sc_lv<1> > tmp_197_fu_493_p3;
    sc_signal< sc_lv<13> > add_ln472_130_fu_487_p2;
    sc_signal< sc_lv<13> > select_ln474_2_fu_501_p3;
    sc_signal< sc_lv<3> > tmp_198_fu_513_p4;
    sc_signal< sc_lv<1> > icmp_ln475_65_fu_523_p2;
    sc_signal< sc_lv<10> > trunc_ln474_65_fu_509_p1;
    sc_signal< sc_lv<10> > select_ln475_2_fu_529_p3;
    sc_signal< sc_lv<13> > tmp_127_fu_550_p4;
    sc_signal< sc_lv<26> > shl_ln1118_64_fu_542_p3;
    sc_signal< sc_lv<3> > trunc_ln851_66_fu_570_p1;
    sc_signal< sc_lv<10> > p_Result_4_3_fu_574_p3;
    sc_signal< sc_lv<14> > sext_ln850_66_fu_560_p1;
    sc_signal< sc_lv<1> > icmp_ln851_3_fu_582_p2;
    sc_signal< sc_lv<14> > add_ln700_66_fu_588_p2;
    sc_signal< sc_lv<1> > icmp_ln850_66_fu_564_p2;
    sc_signal< sc_lv<14> > select_ln851_3_fu_594_p3;
    sc_signal< sc_lv<14> > select_ln850_66_fu_602_p3;
    sc_signal< sc_lv<13> > trunc_ln472_66_fu_610_p1;
    sc_signal< sc_lv<14> > add_ln472_66_fu_614_p2;
    sc_signal< sc_lv<1> > tmp_199_fu_626_p3;
    sc_signal< sc_lv<13> > add_ln472_131_fu_620_p2;
    sc_signal< sc_lv<13> > select_ln474_3_fu_634_p3;
    sc_signal< sc_lv<3> > tmp_200_fu_646_p4;
    sc_signal< sc_lv<1> > icmp_ln475_66_fu_656_p2;
    sc_signal< sc_lv<10> > trunc_ln474_66_fu_642_p1;
    sc_signal< sc_lv<10> > select_ln475_3_fu_662_p3;
    sc_signal< sc_lv<16> > sext_ln703_fu_675_p1;
    sc_signal< sc_lv<16> > sext_ln703_64_fu_679_p1;
    sc_signal< sc_lv<16> > sext_ln703_65_fu_683_p1;
    sc_signal< sc_lv<16> > sext_ln703_66_fu_687_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<26> ap_const_lv26_3FFFFF9;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<14> ap_const_lv14_200;
    static const sc_lv<13> ap_const_lv13_200;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<10> ap_const_lv10_3FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln472_128_fu_221_p2();
    void thread_add_ln472_129_fu_354_p2();
    void thread_add_ln472_130_fu_487_p2();
    void thread_add_ln472_131_fu_620_p2();
    void thread_add_ln472_64_fu_348_p2();
    void thread_add_ln472_65_fu_481_p2();
    void thread_add_ln472_66_fu_614_p2();
    void thread_add_ln472_fu_215_p2();
    void thread_add_ln700_64_fu_322_p2();
    void thread_add_ln700_65_fu_455_p2();
    void thread_add_ln700_66_fu_588_p2();
    void thread_add_ln700_fu_189_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_icmp_ln475_64_fu_390_p2();
    void thread_icmp_ln475_65_fu_523_p2();
    void thread_icmp_ln475_66_fu_656_p2();
    void thread_icmp_ln475_fu_257_p2();
    void thread_icmp_ln850_64_fu_298_p2();
    void thread_icmp_ln850_65_fu_431_p2();
    void thread_icmp_ln850_66_fu_564_p2();
    void thread_icmp_ln850_fu_165_p2();
    void thread_icmp_ln851_1_fu_316_p2();
    void thread_icmp_ln851_2_fu_449_p2();
    void thread_icmp_ln851_3_fu_582_p2();
    void thread_icmp_ln851_fu_183_p2();
    void thread_p_Result_4_1_fu_308_p3();
    void thread_p_Result_4_2_fu_441_p3();
    void thread_p_Result_4_3_fu_574_p3();
    void thread_p_Result_4_fu_175_p3();
    void thread_select_ln474_1_fu_368_p3();
    void thread_select_ln474_2_fu_501_p3();
    void thread_select_ln474_3_fu_634_p3();
    void thread_select_ln474_fu_235_p3();
    void thread_select_ln475_1_fu_396_p3();
    void thread_select_ln475_2_fu_529_p3();
    void thread_select_ln475_3_fu_662_p3();
    void thread_select_ln475_fu_263_p3();
    void thread_select_ln850_64_fu_336_p3();
    void thread_select_ln850_65_fu_469_p3();
    void thread_select_ln850_66_fu_602_p3();
    void thread_select_ln850_fu_203_p3();
    void thread_select_ln851_1_fu_328_p3();
    void thread_select_ln851_2_fu_461_p3();
    void thread_select_ln851_3_fu_594_p3();
    void thread_select_ln851_fu_195_p3();
    void thread_sext_ln703_64_fu_679_p1();
    void thread_sext_ln703_65_fu_683_p1();
    void thread_sext_ln703_66_fu_687_p1();
    void thread_sext_ln703_fu_675_p1();
    void thread_sext_ln850_64_fu_294_p1();
    void thread_sext_ln850_65_fu_427_p1();
    void thread_sext_ln850_66_fu_560_p1();
    void thread_sext_ln850_fu_161_p1();
    void thread_shl_ln1118_63_fu_409_p3();
    void thread_shl_ln1118_64_fu_542_p3();
    void thread_shl_ln1118_s_fu_276_p3();
    void thread_shl_ln_fu_143_p3();
    void thread_tanh_table7_address0();
    void thread_tanh_table7_address1();
    void thread_tanh_table7_address2();
    void thread_tanh_table7_address3();
    void thread_tanh_table7_ce0();
    void thread_tanh_table7_ce1();
    void thread_tanh_table7_ce2();
    void thread_tanh_table7_ce3();
    void thread_tmp_125_fu_284_p4();
    void thread_tmp_126_fu_417_p4();
    void thread_tmp_127_fu_550_p4();
    void thread_tmp_193_fu_227_p3();
    void thread_tmp_194_fu_247_p4();
    void thread_tmp_195_fu_360_p3();
    void thread_tmp_196_fu_380_p4();
    void thread_tmp_197_fu_493_p3();
    void thread_tmp_198_fu_513_p4();
    void thread_tmp_199_fu_626_p3();
    void thread_tmp_200_fu_646_p4();
    void thread_tmp_s_fu_151_p4();
    void thread_trunc_ln472_64_fu_344_p1();
    void thread_trunc_ln472_65_fu_477_p1();
    void thread_trunc_ln472_66_fu_610_p1();
    void thread_trunc_ln472_fu_211_p1();
    void thread_trunc_ln474_64_fu_376_p1();
    void thread_trunc_ln474_65_fu_509_p1();
    void thread_trunc_ln474_66_fu_642_p1();
    void thread_trunc_ln474_fu_243_p1();
    void thread_trunc_ln851_64_fu_304_p1();
    void thread_trunc_ln851_65_fu_437_p1();
    void thread_trunc_ln851_66_fu_570_p1();
    void thread_trunc_ln851_fu_171_p1();
    void thread_zext_ln476_64_fu_404_p1();
    void thread_zext_ln476_65_fu_537_p1();
    void thread_zext_ln476_66_fu_670_p1();
    void thread_zext_ln476_fu_271_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
