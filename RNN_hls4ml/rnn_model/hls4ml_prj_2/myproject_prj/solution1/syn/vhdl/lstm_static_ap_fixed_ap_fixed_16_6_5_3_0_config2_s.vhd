-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lstm_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    reset_state : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of lstm_static_ap_fixed_ap_fixed_16_6_5_3_0_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal s_newstate_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal s_newstate_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal s_newstate_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal s_newstate_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal reset_state_read_reg_800 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal inputacc_ifo_0_V_fu_296_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_0_V_reg_808 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_1_V_fu_302_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_1_V_reg_813 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_2_V_fu_308_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_2_V_reg_818 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_3_V_fu_314_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_3_V_reg_823 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_4_V_fu_320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_4_V_reg_828 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_5_V_fu_326_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_5_V_reg_833 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_6_V_fu_332_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_6_V_reg_838 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_7_V_fu_338_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_7_V_reg_843 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_8_V_fu_344_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_8_V_reg_848 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_9_V_fu_350_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_9_V_reg_853 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_10_V_fu_356_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_10_V_reg_858 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_11_V_fu_362_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_ifo_11_V_reg_863 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_0_V_fu_368_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_0_V_reg_868 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_1_V_fu_374_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_1_V_reg_873 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_2_V_fu_380_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_2_V_reg_878 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_3_V_fu_386_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal inputacc_c_3_V_reg_883 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpres_ifo_4_reg_888 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmpres_ifo_5_reg_893 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpres_ifo_6_reg_898 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpres_ifo_7_reg_903 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpres_ifo_8_reg_908 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpres_ifo_9_reg_913 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpres_ifo_s_reg_918 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpres_ifo_10_reg_923 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln703_fu_716_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln703_reg_928 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln703_1_fu_722_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln703_1_reg_933 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln703_2_fu_728_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln703_2_reg_938 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln703_3_fu_734_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln703_3_reg_943 : STD_LOGIC_VECTOR (25 downto 0);
    signal data_0_V_read_assign_2_reg_948 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal data_1_V_read_assign_2_reg_953 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_V_read_assign_2_reg_958 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_3_V_read_assign_2_reg_963 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_done : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_idle : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ready : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ce : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp67 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp69 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_ready : STD_LOGIC;
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_0_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_1_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_2_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_3_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_done : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_idle : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ready : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ce : STD_LOGIC;
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_0_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_1_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_2_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_3_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_ignore_call81 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp68 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0_ignore_call81 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp82 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0_ignore_call118 : BOOLEAN;
    signal ap_block_pp0_stage4_11001_ignoreCallOp131 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call118 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1_ignore_call118 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp132 : BOOLEAN;
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_ready : STD_LOGIC;
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_sig_allocacmp_h_state_V_0_load : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_h_state_V_1_load : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_h_state_V_2_load : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_h_state_V_3_load : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln161_1_fu_132_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln161_3_fu_141_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln161_5_fu_150_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln161_7_fu_159_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln161_fu_488_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_740_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln161_2_fu_495_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_748_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln161_4_fu_502_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_756_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln161_6_fu_509_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_764_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_fu_772_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_5_fu_779_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_6_fu_786_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_7_fu_793_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_reset_start_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_16s_16s_26s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58 : component sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start,
        ap_done => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_done,
        ap_idle => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_idle,
        ap_ready => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ready,
        ap_ce => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ce,
        data_0_V_read => inputacc_ifo_0_V_reg_808,
        data_1_V_read => inputacc_ifo_1_V_reg_813,
        data_2_V_read => inputacc_ifo_2_V_reg_818,
        data_3_V_read => inputacc_ifo_3_V_reg_823,
        data_4_V_read => inputacc_ifo_4_V_reg_828,
        data_5_V_read => inputacc_ifo_5_V_reg_833,
        data_6_V_read => inputacc_ifo_6_V_reg_838,
        data_7_V_read => inputacc_ifo_7_V_reg_843,
        data_8_V_read => inputacc_ifo_8_V_reg_848,
        data_9_V_read => inputacc_ifo_9_V_reg_853,
        data_10_V_read => inputacc_ifo_10_V_reg_858,
        data_11_V_read => inputacc_ifo_11_V_reg_863,
        ap_return_0 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_0,
        ap_return_1 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_1,
        ap_return_2 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_2,
        ap_return_3 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_3,
        ap_return_4 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_4,
        ap_return_5 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_5,
        ap_return_6 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_6,
        ap_return_7 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_7,
        ap_return_8 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_8,
        ap_return_9 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_9,
        ap_return_10 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_10,
        ap_return_11 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_11);

    call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_ready => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_ready,
        data_0_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_0_V_read,
        data_1_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_1_V_read,
        data_2_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_2_V_read,
        data_3_V_read => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_3_V_read,
        ap_return_0 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_0,
        ap_return_1 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_1,
        ap_return_2 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_2,
        ap_return_3 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_3,
        ap_return_4 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_4,
        ap_return_5 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_5,
        ap_return_6 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_6,
        ap_return_7 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_7,
        ap_return_8 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_8,
        ap_return_9 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_9,
        ap_return_10 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_10,
        ap_return_11 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_11,
        ap_return_12 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_12,
        ap_return_13 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_13,
        ap_return_14 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_14,
        ap_return_15 => call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_15);

    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84 : component tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start,
        ap_done => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_done,
        ap_idle => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_idle,
        ap_ready => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ready,
        ap_ce => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ce,
        data_0_V_read => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_0_V_read,
        data_1_V_read => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_1_V_read,
        data_2_V_read => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_2_V_read,
        data_3_V_read => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_3_V_read,
        ap_return_0 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_0,
        ap_return_1 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_1,
        ap_return_2 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_2,
        ap_return_3 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_3);

    call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1
    port map (
        ap_ready => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_ready,
        data_0_V_read => data_0_V_read,
        ap_return_0 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_0,
        ap_return_1 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_1,
        ap_return_2 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_2,
        ap_return_3 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_3,
        ap_return_4 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_4,
        ap_return_5 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_5,
        ap_return_6 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_6,
        ap_return_7 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_7,
        ap_return_8 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_8,
        ap_return_9 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_9,
        ap_return_10 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_10,
        ap_return_11 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_11,
        ap_return_12 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_12,
        ap_return_13 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_13,
        ap_return_14 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_14,
        ap_return_15 => call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_15);

    myproject_mul_mul_16s_16s_26_1_1_U24 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_0,
        din1 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_0,
        dout => mul_ln703_fu_716_p2);

    myproject_mul_mul_16s_16s_26_1_1_U25 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_1,
        din1 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_1,
        dout => mul_ln703_1_fu_722_p2);

    myproject_mul_mul_16s_16s_26_1_1_U26 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_2,
        din1 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_2,
        dout => mul_ln703_2_fu_728_p2);

    myproject_mul_mul_16s_16s_26_1_1_U27 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_3,
        din1 => grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_3,
        dout => mul_ln703_3_fu_734_p2);

    myproject_mac_muladd_16s_16s_26s_26_1_1_U28 : component myproject_mac_muladd_16s_16s_26s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => select_ln161_fu_488_p3,
        din1 => tmpres_ifo_4_reg_888,
        din2 => mul_ln703_reg_928,
        dout => grp_fu_740_p3);

    myproject_mac_muladd_16s_16s_26s_26_1_1_U29 : component myproject_mac_muladd_16s_16s_26s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => select_ln161_2_fu_495_p3,
        din1 => tmpres_ifo_5_reg_893,
        din2 => mul_ln703_1_reg_933,
        dout => grp_fu_748_p3);

    myproject_mac_muladd_16s_16s_26s_26_1_1_U30 : component myproject_mac_muladd_16s_16s_26s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => select_ln161_4_fu_502_p3,
        din1 => tmpres_ifo_6_reg_898,
        din2 => mul_ln703_2_reg_938,
        dout => grp_fu_756_p3);

    myproject_mac_muladd_16s_16s_26s_26_1_1_U31 : component myproject_mac_muladd_16s_16s_26s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => select_ln161_6_fu_509_p3,
        din1 => tmpres_ifo_7_reg_903,
        din2 => mul_ln703_3_reg_943,
        dout => grp_fu_764_p3);

    myproject_mul_mul_16s_16s_26_1_1_U32 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmpres_ifo_8_reg_908,
        din1 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_0,
        dout => mul_ln1118_fu_772_p2);

    myproject_mul_mul_16s_16s_26_1_1_U33 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmpres_ifo_9_reg_913,
        din1 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_1,
        dout => mul_ln1118_5_fu_779_p2);

    myproject_mul_mul_16s_16s_26_1_1_U34 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmpres_ifo_s_reg_918,
        din1 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_2,
        dout => mul_ln1118_6_fu_786_p2);

    myproject_mul_mul_16s_16s_26_1_1_U35 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => tmpres_ifo_10_reg_923,
        din1 => grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_return_3,
        dout => mul_ln1118_7_fu_793_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ready = ap_const_logic_1)) then 
                    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                data_0_V_read_assign_2_reg_948 <= grp_fu_740_p3(25 downto 10);
                data_1_V_read_assign_2_reg_953 <= grp_fu_748_p3(25 downto 10);
                data_2_V_read_assign_2_reg_958 <= grp_fu_756_p3(25 downto 10);
                data_3_V_read_assign_2_reg_963 <= grp_fu_764_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                h_state_V_0 <= mul_ln1118_fu_772_p2(25 downto 10);
                h_state_V_1 <= mul_ln1118_5_fu_779_p2(25 downto 10);
                h_state_V_2 <= mul_ln1118_6_fu_786_p2(25 downto 10);
                h_state_V_3 <= mul_ln1118_7_fu_793_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                inputacc_c_0_V_reg_868 <= inputacc_c_0_V_fu_368_p2;
                inputacc_c_1_V_reg_873 <= inputacc_c_1_V_fu_374_p2;
                inputacc_c_2_V_reg_878 <= inputacc_c_2_V_fu_380_p2;
                inputacc_c_3_V_reg_883 <= inputacc_c_3_V_fu_386_p2;
                inputacc_ifo_0_V_reg_808 <= inputacc_ifo_0_V_fu_296_p2;
                inputacc_ifo_10_V_reg_858 <= inputacc_ifo_10_V_fu_356_p2;
                inputacc_ifo_11_V_reg_863 <= inputacc_ifo_11_V_fu_362_p2;
                inputacc_ifo_1_V_reg_813 <= inputacc_ifo_1_V_fu_302_p2;
                inputacc_ifo_2_V_reg_818 <= inputacc_ifo_2_V_fu_308_p2;
                inputacc_ifo_3_V_reg_823 <= inputacc_ifo_3_V_fu_314_p2;
                inputacc_ifo_4_V_reg_828 <= inputacc_ifo_4_V_fu_320_p2;
                inputacc_ifo_5_V_reg_833 <= inputacc_ifo_5_V_fu_326_p2;
                inputacc_ifo_6_V_reg_838 <= inputacc_ifo_6_V_fu_332_p2;
                inputacc_ifo_7_V_reg_843 <= inputacc_ifo_7_V_fu_338_p2;
                inputacc_ifo_8_V_reg_848 <= inputacc_ifo_8_V_fu_344_p2;
                inputacc_ifo_9_V_reg_853 <= inputacc_ifo_9_V_fu_350_p2;
                reset_state_read_reg_800 <= (0=>reset_state, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_ln703_1_reg_933 <= mul_ln703_1_fu_722_p2;
                mul_ln703_2_reg_938 <= mul_ln703_2_fu_728_p2;
                mul_ln703_3_reg_943 <= mul_ln703_3_fu_734_p2;
                mul_ln703_reg_928 <= mul_ln703_fu_716_p2;
                tmpres_ifo_10_reg_923 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_11;
                tmpres_ifo_4_reg_888 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_4;
                tmpres_ifo_5_reg_893 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_5;
                tmpres_ifo_6_reg_898 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_6;
                tmpres_ifo_7_reg_903 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_7;
                tmpres_ifo_8_reg_908 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_8;
                tmpres_ifo_9_reg_913 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_9;
                tmpres_ifo_s_reg_918 <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_return_10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                s_newstate_V_0 <= grp_fu_740_p3(25 downto 10);
                s_newstate_V_1 <= grp_fu_748_p3(25 downto 10);
                s_newstate_V_2 <= grp_fu_756_p3(25 downto 10);
                s_newstate_V_3 <= grp_fu_764_p3(25 downto 10);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_reset_idle_pp0, ap_reset_start_pp0, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and not(((ap_reset_start_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_reset_start_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp132_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp132 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001_ignoreCallOp68 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001_ignoreCallOp82 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage2_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage3_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001_ignoreCallOp131 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage4_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call118_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call118 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0_ignore_call118 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1_ignore_call118 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_start_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_start = ap_const_logic_1))) then 
            ap_reset_start_pp0 <= ap_const_logic_1;
        else 
            ap_reset_start_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= mul_ln1118_fu_772_p2(25 downto 10);
    ap_return_1 <= mul_ln1118_5_fu_779_p2(25 downto 10);
    ap_return_2 <= mul_ln1118_6_fu_786_p2(25 downto 10);
    ap_return_3 <= mul_ln1118_7_fu_793_p2(25 downto 10);

    ap_sig_allocacmp_h_state_V_0_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, h_state_V_0, mul_ln1118_fu_772_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_h_state_V_0_load <= mul_ln1118_fu_772_p2(25 downto 10);
        else 
            ap_sig_allocacmp_h_state_V_0_load <= h_state_V_0;
        end if; 
    end process;


    ap_sig_allocacmp_h_state_V_1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, h_state_V_1, mul_ln1118_5_fu_779_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_h_state_V_1_load <= mul_ln1118_5_fu_779_p2(25 downto 10);
        else 
            ap_sig_allocacmp_h_state_V_1_load <= h_state_V_1;
        end if; 
    end process;


    ap_sig_allocacmp_h_state_V_2_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, h_state_V_2, mul_ln1118_6_fu_786_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_h_state_V_2_load <= mul_ln1118_6_fu_786_p2(25 downto 10);
        else 
            ap_sig_allocacmp_h_state_V_2_load <= h_state_V_2;
        end if; 
    end process;


    ap_sig_allocacmp_h_state_V_3_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, h_state_V_3, mul_ln1118_7_fu_793_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_h_state_V_3_load <= mul_ln1118_7_fu_793_p2(25 downto 10);
        else 
            ap_sig_allocacmp_h_state_V_3_load <= h_state_V_3;
        end if; 
    end process;

    call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_0_V_read <= 
        ap_const_lv16_0 when (select_ln161_1_fu_132_p0(0) = '1') else 
        ap_sig_allocacmp_h_state_V_0_load;
    call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_1_V_read <= 
        ap_const_lv16_0 when (select_ln161_3_fu_141_p0(0) = '1') else 
        ap_sig_allocacmp_h_state_V_1_load;
    call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_2_V_read <= 
        ap_const_lv16_0 when (select_ln161_5_fu_150_p0(0) = '1') else 
        ap_sig_allocacmp_h_state_V_2_load;
    call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_data_3_V_read <= 
        ap_const_lv16_0 when (select_ln161_7_fu_159_p0(0) = '1') else 
        ap_sig_allocacmp_h_state_V_3_load;

    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001_ignoreCallOp67, ap_block_pp0_stage2_11001_ignoreCallOp69, ap_CS_fsm_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp67) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))))) then 
            grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ce <= ap_const_logic_1;
        else 
            grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start <= grp_sigmoid_ap_fixed_ap_fixed_sigmoid_config2_recr_s_fu_58_ap_start_reg;

    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_ce, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp68, ap_block_pp0_stage2_11001_ignoreCallOp82, ap_block_pp0_stage4_11001_ignoreCallOp131, ap_block_pp0_stage0_11001_ignoreCallOp132)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp131) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp68) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp132) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp82) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))))) then 
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ce <= ap_const_logic_1;
        else 
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start <= grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_ap_start_reg;

    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_0_V_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, inputacc_c_0_V_reg_868, data_0_V_read_assign_2_reg_948, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_0_V_read <= data_0_V_read_assign_2_reg_948;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_0_V_read <= inputacc_c_0_V_reg_868;
            else 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_0_V_read <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_0_V_read <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_1_V_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, inputacc_c_1_V_reg_873, data_1_V_read_assign_2_reg_953, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_1_V_read <= data_1_V_read_assign_2_reg_953;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_1_V_read <= inputacc_c_1_V_reg_873;
            else 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_1_V_read <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_1_V_read <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_2_V_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, inputacc_c_2_V_reg_878, data_2_V_read_assign_2_reg_958, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_2_V_read <= data_2_V_read_assign_2_reg_958;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_2_V_read <= inputacc_c_2_V_reg_878;
            else 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_2_V_read <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_2_V_read <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_3_V_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, inputacc_c_3_V_reg_883, data_3_V_read_assign_2_reg_963, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_3_V_read <= data_3_V_read_assign_2_reg_963;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_3_V_read <= inputacc_c_3_V_reg_883;
            else 
                grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_3_V_read <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_fu_84_data_3_V_read <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inputacc_c_0_V_fu_368_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_8) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_8));
    inputacc_c_1_V_fu_374_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_9) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_9));
    inputacc_c_2_V_fu_380_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_10) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_10));
    inputacc_c_3_V_fu_386_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_11) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_11));
    inputacc_ifo_0_V_fu_296_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_0) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_0));
    inputacc_ifo_10_V_fu_356_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_14) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_14));
    inputacc_ifo_11_V_fu_362_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_15) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_15));
    inputacc_ifo_1_V_fu_302_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_1) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_1));
    inputacc_ifo_2_V_fu_308_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_2) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_2));
    inputacc_ifo_3_V_fu_314_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_3) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_3));
    inputacc_ifo_4_V_fu_320_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_4) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_4));
    inputacc_ifo_5_V_fu_326_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_5) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_5));
    inputacc_ifo_6_V_fu_332_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_6) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_6));
    inputacc_ifo_7_V_fu_338_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_7) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_7));
    inputacc_ifo_8_V_fu_344_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_12) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_12));
    inputacc_ifo_9_V_fu_350_p2 <= std_logic_vector(unsigned(call_ret1_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_1_fu_94_ap_return_13) + unsigned(call_ret_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_76_ap_return_13));
    select_ln161_1_fu_132_p0 <= (0=>reset_state, others=>'-');
    select_ln161_2_fu_495_p3 <= 
        ap_const_lv16_0 when (reset_state_read_reg_800(0) = '1') else 
        s_newstate_V_1;
    select_ln161_3_fu_141_p0 <= (0=>reset_state, others=>'-');
    select_ln161_4_fu_502_p3 <= 
        ap_const_lv16_0 when (reset_state_read_reg_800(0) = '1') else 
        s_newstate_V_2;
    select_ln161_5_fu_150_p0 <= (0=>reset_state, others=>'-');
    select_ln161_6_fu_509_p3 <= 
        ap_const_lv16_0 when (reset_state_read_reg_800(0) = '1') else 
        s_newstate_V_3;
    select_ln161_7_fu_159_p0 <= (0=>reset_state, others=>'-');
    select_ln161_fu_488_p3 <= 
        ap_const_lv16_0 when (reset_state_read_reg_800(0) = '1') else 
        s_newstate_V_0;
end behav;
