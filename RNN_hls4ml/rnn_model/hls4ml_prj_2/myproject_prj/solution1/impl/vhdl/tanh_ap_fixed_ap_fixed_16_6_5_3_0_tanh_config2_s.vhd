-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv26_3FFFFF9 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111111001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_200 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_const_lv13_200 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tanh_table7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table7_ce0 : STD_LOGIC;
    signal tanh_table7_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table7_ce1 : STD_LOGIC;
    signal tanh_table7_q1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table7_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table7_ce2 : STD_LOGIC;
    signal tanh_table7_q2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table7_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table7_ce3 : STD_LOGIC;
    signal tanh_table7_q3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln476_fu_271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_64_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_65_fu_537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln476_66_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_151_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_143_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_fu_171_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_4_fu_175_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_fu_161_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_fu_183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_189_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_fu_165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_fu_195_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_fu_203_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln472_fu_211_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln472_fu_215_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_193_fu_227_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln472_128_fu_221_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln474_fu_235_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_194_fu_247_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln475_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln474_fu_243_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln475_fu_263_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_125_fu_284_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_s_fu_276_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_64_fu_304_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_4_1_fu_308_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_64_fu_294_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_1_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_64_fu_322_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_64_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_1_fu_328_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_64_fu_336_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln472_64_fu_344_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln472_64_fu_348_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_195_fu_360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln472_129_fu_354_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln474_1_fu_368_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_196_fu_380_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln475_64_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln474_64_fu_376_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln475_1_fu_396_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_126_fu_417_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_63_fu_409_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_65_fu_437_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_4_2_fu_441_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_65_fu_427_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_2_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_65_fu_455_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_65_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_2_fu_461_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_65_fu_469_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln472_65_fu_477_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln472_65_fu_481_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_197_fu_493_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln472_130_fu_487_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln474_2_fu_501_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_198_fu_513_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln475_65_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln474_65_fu_509_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln475_2_fu_529_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_127_fu_550_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_64_fu_542_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln851_66_fu_570_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_4_3_fu_574_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_66_fu_560_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln851_3_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_66_fu_588_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln850_66_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_3_fu_594_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln850_66_fu_602_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln472_66_fu_610_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln472_66_fu_614_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_199_fu_626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln472_131_fu_620_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln474_3_fu_634_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_200_fu_646_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln475_66_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln474_66_fu_642_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln475_3_fu_662_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_fu_675_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_64_fu_679_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_65_fu_683_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_66_fu_687_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    tanh_table7_U : component tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud
    generic map (
        DataWidth => 11,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tanh_table7_address0,
        ce0 => tanh_table7_ce0,
        q0 => tanh_table7_q0,
        address1 => tanh_table7_address1,
        ce1 => tanh_table7_ce1,
        q1 => tanh_table7_q1,
        address2 => tanh_table7_address2,
        ce2 => tanh_table7_ce2,
        q2 => tanh_table7_q2,
        address3 => tanh_table7_address3,
        ce3 => tanh_table7_ce3,
        q3 => tanh_table7_q3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln472_128_fu_221_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln472_fu_211_p1));
    add_ln472_129_fu_354_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln472_64_fu_344_p1));
    add_ln472_130_fu_487_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln472_65_fu_477_p1));
    add_ln472_131_fu_620_p2 <= std_logic_vector(unsigned(ap_const_lv13_200) + unsigned(trunc_ln472_66_fu_610_p1));
    add_ln472_64_fu_348_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_64_fu_336_p3));
    add_ln472_65_fu_481_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_65_fu_469_p3));
    add_ln472_66_fu_614_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_66_fu_602_p3));
    add_ln472_fu_215_p2 <= std_logic_vector(unsigned(ap_const_lv14_200) + unsigned(select_ln850_fu_203_p3));
    add_ln700_64_fu_322_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_64_fu_294_p1));
    add_ln700_65_fu_455_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_65_fu_427_p1));
    add_ln700_66_fu_588_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_66_fu_560_p1));
    add_ln700_fu_189_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(sext_ln850_fu_161_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= sext_ln703_fu_675_p1;
    ap_return_1 <= sext_ln703_64_fu_679_p1;
    ap_return_2 <= sext_ln703_65_fu_683_p1;
    ap_return_3 <= sext_ln703_66_fu_687_p1;
    icmp_ln475_64_fu_390_p2 <= "0" when (tmp_196_fu_380_p4 = ap_const_lv3_0) else "1";
    icmp_ln475_65_fu_523_p2 <= "0" when (tmp_198_fu_513_p4 = ap_const_lv3_0) else "1";
    icmp_ln475_66_fu_656_p2 <= "0" when (tmp_200_fu_646_p4 = ap_const_lv3_0) else "1";
    icmp_ln475_fu_257_p2 <= "0" when (tmp_194_fu_247_p4 = ap_const_lv3_0) else "1";
    icmp_ln850_64_fu_298_p2 <= "1" when (signed(shl_ln1118_s_fu_276_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_65_fu_431_p2 <= "1" when (signed(shl_ln1118_63_fu_409_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_66_fu_564_p2 <= "1" when (signed(shl_ln1118_64_fu_542_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln850_fu_165_p2 <= "1" when (signed(shl_ln_fu_143_p3) < signed(ap_const_lv26_3FFFFF9)) else "0";
    icmp_ln851_1_fu_316_p2 <= "1" when (p_Result_4_1_fu_308_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_449_p2 <= "1" when (p_Result_4_2_fu_441_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_582_p2 <= "1" when (p_Result_4_3_fu_574_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_fu_183_p2 <= "1" when (p_Result_4_fu_175_p3 = ap_const_lv10_0) else "0";
    p_Result_4_1_fu_308_p3 <= (trunc_ln851_64_fu_304_p1 & ap_const_lv7_0);
    p_Result_4_2_fu_441_p3 <= (trunc_ln851_65_fu_437_p1 & ap_const_lv7_0);
    p_Result_4_3_fu_574_p3 <= (trunc_ln851_66_fu_570_p1 & ap_const_lv7_0);
    p_Result_4_fu_175_p3 <= (trunc_ln851_fu_171_p1 & ap_const_lv7_0);
    select_ln474_1_fu_368_p3 <= 
        ap_const_lv13_0 when (tmp_195_fu_360_p3(0) = '1') else 
        add_ln472_129_fu_354_p2;
    select_ln474_2_fu_501_p3 <= 
        ap_const_lv13_0 when (tmp_197_fu_493_p3(0) = '1') else 
        add_ln472_130_fu_487_p2;
    select_ln474_3_fu_634_p3 <= 
        ap_const_lv13_0 when (tmp_199_fu_626_p3(0) = '1') else 
        add_ln472_131_fu_620_p2;
    select_ln474_fu_235_p3 <= 
        ap_const_lv13_0 when (tmp_193_fu_227_p3(0) = '1') else 
        add_ln472_128_fu_221_p2;
    select_ln475_1_fu_396_p3 <= 
        ap_const_lv10_3FF when (icmp_ln475_64_fu_390_p2(0) = '1') else 
        trunc_ln474_64_fu_376_p1;
    select_ln475_2_fu_529_p3 <= 
        ap_const_lv10_3FF when (icmp_ln475_65_fu_523_p2(0) = '1') else 
        trunc_ln474_65_fu_509_p1;
    select_ln475_3_fu_662_p3 <= 
        ap_const_lv10_3FF when (icmp_ln475_66_fu_656_p2(0) = '1') else 
        trunc_ln474_66_fu_642_p1;
    select_ln475_fu_263_p3 <= 
        ap_const_lv10_3FF when (icmp_ln475_fu_257_p2(0) = '1') else 
        trunc_ln474_fu_243_p1;
    select_ln850_64_fu_336_p3 <= 
        select_ln851_1_fu_328_p3 when (icmp_ln850_64_fu_298_p2(0) = '1') else 
        sext_ln850_64_fu_294_p1;
    select_ln850_65_fu_469_p3 <= 
        select_ln851_2_fu_461_p3 when (icmp_ln850_65_fu_431_p2(0) = '1') else 
        sext_ln850_65_fu_427_p1;
    select_ln850_66_fu_602_p3 <= 
        select_ln851_3_fu_594_p3 when (icmp_ln850_66_fu_564_p2(0) = '1') else 
        sext_ln850_66_fu_560_p1;
    select_ln850_fu_203_p3 <= 
        select_ln851_fu_195_p3 when (icmp_ln850_fu_165_p2(0) = '1') else 
        sext_ln850_fu_161_p1;
    select_ln851_1_fu_328_p3 <= 
        sext_ln850_64_fu_294_p1 when (icmp_ln851_1_fu_316_p2(0) = '1') else 
        add_ln700_64_fu_322_p2;
    select_ln851_2_fu_461_p3 <= 
        sext_ln850_65_fu_427_p1 when (icmp_ln851_2_fu_449_p2(0) = '1') else 
        add_ln700_65_fu_455_p2;
    select_ln851_3_fu_594_p3 <= 
        sext_ln850_66_fu_560_p1 when (icmp_ln851_3_fu_582_p2(0) = '1') else 
        add_ln700_66_fu_588_p2;
    select_ln851_fu_195_p3 <= 
        sext_ln850_fu_161_p1 when (icmp_ln851_fu_183_p2(0) = '1') else 
        add_ln700_fu_189_p2;
        sext_ln703_64_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table7_q1),16));

        sext_ln703_65_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table7_q2),16));

        sext_ln703_66_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table7_q3),16));

        sext_ln703_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table7_q0),16));

        sext_ln850_64_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_125_fu_284_p4),14));

        sext_ln850_65_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_126_fu_417_p4),14));

        sext_ln850_66_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_127_fu_550_p4),14));

        sext_ln850_fu_161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_151_p4),14));

    shl_ln1118_63_fu_409_p3 <= (data_2_V_read & ap_const_lv10_0);
    shl_ln1118_64_fu_542_p3 <= (data_3_V_read & ap_const_lv10_0);
    shl_ln1118_s_fu_276_p3 <= (data_1_V_read & ap_const_lv10_0);
    shl_ln_fu_143_p3 <= (data_0_V_read & ap_const_lv10_0);
    tanh_table7_address0 <= zext_ln476_fu_271_p1(10 - 1 downto 0);
    tanh_table7_address1 <= zext_ln476_64_fu_404_p1(10 - 1 downto 0);
    tanh_table7_address2 <= zext_ln476_65_fu_537_p1(10 - 1 downto 0);
    tanh_table7_address3 <= zext_ln476_66_fu_670_p1(10 - 1 downto 0);

    tanh_table7_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table7_ce0 <= ap_const_logic_1;
        else 
            tanh_table7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table7_ce1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table7_ce1 <= ap_const_logic_1;
        else 
            tanh_table7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table7_ce2_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table7_ce2 <= ap_const_logic_1;
        else 
            tanh_table7_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table7_ce3_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table7_ce3 <= ap_const_logic_1;
        else 
            tanh_table7_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_125_fu_284_p4 <= data_1_V_read(15 downto 3);
    tmp_126_fu_417_p4 <= data_2_V_read(15 downto 3);
    tmp_127_fu_550_p4 <= data_3_V_read(15 downto 3);
    tmp_193_fu_227_p3 <= add_ln472_fu_215_p2(13 downto 13);
    tmp_194_fu_247_p4 <= select_ln474_fu_235_p3(12 downto 10);
    tmp_195_fu_360_p3 <= add_ln472_64_fu_348_p2(13 downto 13);
    tmp_196_fu_380_p4 <= select_ln474_1_fu_368_p3(12 downto 10);
    tmp_197_fu_493_p3 <= add_ln472_65_fu_481_p2(13 downto 13);
    tmp_198_fu_513_p4 <= select_ln474_2_fu_501_p3(12 downto 10);
    tmp_199_fu_626_p3 <= add_ln472_66_fu_614_p2(13 downto 13);
    tmp_200_fu_646_p4 <= select_ln474_3_fu_634_p3(12 downto 10);
    tmp_s_fu_151_p4 <= data_0_V_read(15 downto 3);
    trunc_ln472_64_fu_344_p1 <= select_ln850_64_fu_336_p3(13 - 1 downto 0);
    trunc_ln472_65_fu_477_p1 <= select_ln850_65_fu_469_p3(13 - 1 downto 0);
    trunc_ln472_66_fu_610_p1 <= select_ln850_66_fu_602_p3(13 - 1 downto 0);
    trunc_ln472_fu_211_p1 <= select_ln850_fu_203_p3(13 - 1 downto 0);
    trunc_ln474_64_fu_376_p1 <= select_ln474_1_fu_368_p3(10 - 1 downto 0);
    trunc_ln474_65_fu_509_p1 <= select_ln474_2_fu_501_p3(10 - 1 downto 0);
    trunc_ln474_66_fu_642_p1 <= select_ln474_3_fu_634_p3(10 - 1 downto 0);
    trunc_ln474_fu_243_p1 <= select_ln474_fu_235_p3(10 - 1 downto 0);
    trunc_ln851_64_fu_304_p1 <= data_1_V_read(3 - 1 downto 0);
    trunc_ln851_65_fu_437_p1 <= data_2_V_read(3 - 1 downto 0);
    trunc_ln851_66_fu_570_p1 <= data_3_V_read(3 - 1 downto 0);
    trunc_ln851_fu_171_p1 <= data_0_V_read(3 - 1 downto 0);
    zext_ln476_64_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln475_1_fu_396_p3),64));
    zext_ln476_65_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln475_2_fu_529_p3),64));
    zext_ln476_66_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln475_3_fu_662_p3),64));
    zext_ln476_fu_271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln475_fu_263_p3),64));
end behav;
