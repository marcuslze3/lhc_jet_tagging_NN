// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] tanh_table7_address0;
reg    tanh_table7_ce0;
wire   [10:0] tanh_table7_q0;
wire   [9:0] tanh_table7_address1;
reg    tanh_table7_ce1;
wire   [10:0] tanh_table7_q1;
wire   [9:0] tanh_table7_address2;
reg    tanh_table7_ce2;
wire   [10:0] tanh_table7_q2;
wire   [9:0] tanh_table7_address3;
reg    tanh_table7_ce3;
wire   [10:0] tanh_table7_q3;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln476_fu_271_p1;
wire   [63:0] zext_ln476_64_fu_404_p1;
wire   [63:0] zext_ln476_65_fu_537_p1;
wire   [63:0] zext_ln476_66_fu_670_p1;
wire   [12:0] tmp_s_fu_151_p4;
wire   [25:0] shl_ln_fu_143_p3;
wire   [2:0] trunc_ln851_fu_171_p1;
wire   [9:0] p_Result_4_fu_175_p3;
wire  signed [13:0] sext_ln850_fu_161_p1;
wire   [0:0] icmp_ln851_fu_183_p2;
wire   [13:0] add_ln700_fu_189_p2;
wire   [0:0] icmp_ln850_fu_165_p2;
wire   [13:0] select_ln851_fu_195_p3;
wire   [13:0] select_ln850_fu_203_p3;
wire   [12:0] trunc_ln472_fu_211_p1;
wire   [13:0] add_ln472_fu_215_p2;
wire   [0:0] tmp_193_fu_227_p3;
wire   [12:0] add_ln472_128_fu_221_p2;
wire   [12:0] select_ln474_fu_235_p3;
wire   [2:0] tmp_194_fu_247_p4;
wire   [0:0] icmp_ln475_fu_257_p2;
wire   [9:0] trunc_ln474_fu_243_p1;
wire   [9:0] select_ln475_fu_263_p3;
wire   [12:0] tmp_125_fu_284_p4;
wire   [25:0] shl_ln1118_s_fu_276_p3;
wire   [2:0] trunc_ln851_64_fu_304_p1;
wire   [9:0] p_Result_4_1_fu_308_p3;
wire  signed [13:0] sext_ln850_64_fu_294_p1;
wire   [0:0] icmp_ln851_1_fu_316_p2;
wire   [13:0] add_ln700_64_fu_322_p2;
wire   [0:0] icmp_ln850_64_fu_298_p2;
wire   [13:0] select_ln851_1_fu_328_p3;
wire   [13:0] select_ln850_64_fu_336_p3;
wire   [12:0] trunc_ln472_64_fu_344_p1;
wire   [13:0] add_ln472_64_fu_348_p2;
wire   [0:0] tmp_195_fu_360_p3;
wire   [12:0] add_ln472_129_fu_354_p2;
wire   [12:0] select_ln474_1_fu_368_p3;
wire   [2:0] tmp_196_fu_380_p4;
wire   [0:0] icmp_ln475_64_fu_390_p2;
wire   [9:0] trunc_ln474_64_fu_376_p1;
wire   [9:0] select_ln475_1_fu_396_p3;
wire   [12:0] tmp_126_fu_417_p4;
wire   [25:0] shl_ln1118_63_fu_409_p3;
wire   [2:0] trunc_ln851_65_fu_437_p1;
wire   [9:0] p_Result_4_2_fu_441_p3;
wire  signed [13:0] sext_ln850_65_fu_427_p1;
wire   [0:0] icmp_ln851_2_fu_449_p2;
wire   [13:0] add_ln700_65_fu_455_p2;
wire   [0:0] icmp_ln850_65_fu_431_p2;
wire   [13:0] select_ln851_2_fu_461_p3;
wire   [13:0] select_ln850_65_fu_469_p3;
wire   [12:0] trunc_ln472_65_fu_477_p1;
wire   [13:0] add_ln472_65_fu_481_p2;
wire   [0:0] tmp_197_fu_493_p3;
wire   [12:0] add_ln472_130_fu_487_p2;
wire   [12:0] select_ln474_2_fu_501_p3;
wire   [2:0] tmp_198_fu_513_p4;
wire   [0:0] icmp_ln475_65_fu_523_p2;
wire   [9:0] trunc_ln474_65_fu_509_p1;
wire   [9:0] select_ln475_2_fu_529_p3;
wire   [12:0] tmp_127_fu_550_p4;
wire   [25:0] shl_ln1118_64_fu_542_p3;
wire   [2:0] trunc_ln851_66_fu_570_p1;
wire   [9:0] p_Result_4_3_fu_574_p3;
wire  signed [13:0] sext_ln850_66_fu_560_p1;
wire   [0:0] icmp_ln851_3_fu_582_p2;
wire   [13:0] add_ln700_66_fu_588_p2;
wire   [0:0] icmp_ln850_66_fu_564_p2;
wire   [13:0] select_ln851_3_fu_594_p3;
wire   [13:0] select_ln850_66_fu_602_p3;
wire   [12:0] trunc_ln472_66_fu_610_p1;
wire   [13:0] add_ln472_66_fu_614_p2;
wire   [0:0] tmp_199_fu_626_p3;
wire   [12:0] add_ln472_131_fu_620_p2;
wire   [12:0] select_ln474_3_fu_634_p3;
wire   [2:0] tmp_200_fu_646_p4;
wire   [0:0] icmp_ln475_66_fu_656_p2;
wire   [9:0] trunc_ln474_66_fu_642_p1;
wire   [9:0] select_ln475_3_fu_662_p3;
wire  signed [15:0] sext_ln703_fu_675_p1;
wire  signed [15:0] sext_ln703_64_fu_679_p1;
wire  signed [15:0] sext_ln703_65_fu_683_p1;
wire  signed [15:0] sext_ln703_66_fu_687_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s_tanh_tabcud #(
    .DataWidth( 11 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tanh_table7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tanh_table7_address0),
    .ce0(tanh_table7_ce0),
    .q0(tanh_table7_q0),
    .address1(tanh_table7_address1),
    .ce1(tanh_table7_ce1),
    .q1(tanh_table7_q1),
    .address2(tanh_table7_address2),
    .ce2(tanh_table7_ce2),
    .q2(tanh_table7_q2),
    .address3(tanh_table7_address3),
    .ce3(tanh_table7_ce3),
    .q3(tanh_table7_q3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table7_ce0 = 1'b1;
    end else begin
        tanh_table7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table7_ce1 = 1'b1;
    end else begin
        tanh_table7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table7_ce2 = 1'b1;
    end else begin
        tanh_table7_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table7_ce3 = 1'b1;
    end else begin
        tanh_table7_ce3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln472_128_fu_221_p2 = (13'd512 + trunc_ln472_fu_211_p1);

assign add_ln472_129_fu_354_p2 = (13'd512 + trunc_ln472_64_fu_344_p1);

assign add_ln472_130_fu_487_p2 = (13'd512 + trunc_ln472_65_fu_477_p1);

assign add_ln472_131_fu_620_p2 = (13'd512 + trunc_ln472_66_fu_610_p1);

assign add_ln472_64_fu_348_p2 = (14'd512 + select_ln850_64_fu_336_p3);

assign add_ln472_65_fu_481_p2 = (14'd512 + select_ln850_65_fu_469_p3);

assign add_ln472_66_fu_614_p2 = (14'd512 + select_ln850_66_fu_602_p3);

assign add_ln472_fu_215_p2 = (14'd512 + select_ln850_fu_203_p3);

assign add_ln700_64_fu_322_p2 = ($signed(14'd1) + $signed(sext_ln850_64_fu_294_p1));

assign add_ln700_65_fu_455_p2 = ($signed(14'd1) + $signed(sext_ln850_65_fu_427_p1));

assign add_ln700_66_fu_588_p2 = ($signed(14'd1) + $signed(sext_ln850_66_fu_560_p1));

assign add_ln700_fu_189_p2 = ($signed(14'd1) + $signed(sext_ln850_fu_161_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = sext_ln703_fu_675_p1;

assign ap_return_1 = sext_ln703_64_fu_679_p1;

assign ap_return_2 = sext_ln703_65_fu_683_p1;

assign ap_return_3 = sext_ln703_66_fu_687_p1;

assign icmp_ln475_64_fu_390_p2 = ((tmp_196_fu_380_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln475_65_fu_523_p2 = ((tmp_198_fu_513_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln475_66_fu_656_p2 = ((tmp_200_fu_646_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln475_fu_257_p2 = ((tmp_194_fu_247_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln850_64_fu_298_p2 = (($signed(shl_ln1118_s_fu_276_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln850_65_fu_431_p2 = (($signed(shl_ln1118_63_fu_409_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln850_66_fu_564_p2 = (($signed(shl_ln1118_64_fu_542_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln850_fu_165_p2 = (($signed(shl_ln_fu_143_p3) < $signed(26'd67108857)) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_316_p2 = ((p_Result_4_1_fu_308_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_449_p2 = ((p_Result_4_2_fu_441_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_582_p2 = ((p_Result_4_3_fu_574_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_183_p2 = ((p_Result_4_fu_175_p3 == 10'd0) ? 1'b1 : 1'b0);

assign p_Result_4_1_fu_308_p3 = {{trunc_ln851_64_fu_304_p1}, {7'd0}};

assign p_Result_4_2_fu_441_p3 = {{trunc_ln851_65_fu_437_p1}, {7'd0}};

assign p_Result_4_3_fu_574_p3 = {{trunc_ln851_66_fu_570_p1}, {7'd0}};

assign p_Result_4_fu_175_p3 = {{trunc_ln851_fu_171_p1}, {7'd0}};

assign select_ln474_1_fu_368_p3 = ((tmp_195_fu_360_p3[0:0] === 1'b1) ? 13'd0 : add_ln472_129_fu_354_p2);

assign select_ln474_2_fu_501_p3 = ((tmp_197_fu_493_p3[0:0] === 1'b1) ? 13'd0 : add_ln472_130_fu_487_p2);

assign select_ln474_3_fu_634_p3 = ((tmp_199_fu_626_p3[0:0] === 1'b1) ? 13'd0 : add_ln472_131_fu_620_p2);

assign select_ln474_fu_235_p3 = ((tmp_193_fu_227_p3[0:0] === 1'b1) ? 13'd0 : add_ln472_128_fu_221_p2);

assign select_ln475_1_fu_396_p3 = ((icmp_ln475_64_fu_390_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln474_64_fu_376_p1);

assign select_ln475_2_fu_529_p3 = ((icmp_ln475_65_fu_523_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln474_65_fu_509_p1);

assign select_ln475_3_fu_662_p3 = ((icmp_ln475_66_fu_656_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln474_66_fu_642_p1);

assign select_ln475_fu_263_p3 = ((icmp_ln475_fu_257_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln474_fu_243_p1);

assign select_ln850_64_fu_336_p3 = ((icmp_ln850_64_fu_298_p2[0:0] === 1'b1) ? select_ln851_1_fu_328_p3 : sext_ln850_64_fu_294_p1);

assign select_ln850_65_fu_469_p3 = ((icmp_ln850_65_fu_431_p2[0:0] === 1'b1) ? select_ln851_2_fu_461_p3 : sext_ln850_65_fu_427_p1);

assign select_ln850_66_fu_602_p3 = ((icmp_ln850_66_fu_564_p2[0:0] === 1'b1) ? select_ln851_3_fu_594_p3 : sext_ln850_66_fu_560_p1);

assign select_ln850_fu_203_p3 = ((icmp_ln850_fu_165_p2[0:0] === 1'b1) ? select_ln851_fu_195_p3 : sext_ln850_fu_161_p1);

assign select_ln851_1_fu_328_p3 = ((icmp_ln851_1_fu_316_p2[0:0] === 1'b1) ? sext_ln850_64_fu_294_p1 : add_ln700_64_fu_322_p2);

assign select_ln851_2_fu_461_p3 = ((icmp_ln851_2_fu_449_p2[0:0] === 1'b1) ? sext_ln850_65_fu_427_p1 : add_ln700_65_fu_455_p2);

assign select_ln851_3_fu_594_p3 = ((icmp_ln851_3_fu_582_p2[0:0] === 1'b1) ? sext_ln850_66_fu_560_p1 : add_ln700_66_fu_588_p2);

assign select_ln851_fu_195_p3 = ((icmp_ln851_fu_183_p2[0:0] === 1'b1) ? sext_ln850_fu_161_p1 : add_ln700_fu_189_p2);

assign sext_ln703_64_fu_679_p1 = $signed(tanh_table7_q1);

assign sext_ln703_65_fu_683_p1 = $signed(tanh_table7_q2);

assign sext_ln703_66_fu_687_p1 = $signed(tanh_table7_q3);

assign sext_ln703_fu_675_p1 = $signed(tanh_table7_q0);

assign sext_ln850_64_fu_294_p1 = $signed(tmp_125_fu_284_p4);

assign sext_ln850_65_fu_427_p1 = $signed(tmp_126_fu_417_p4);

assign sext_ln850_66_fu_560_p1 = $signed(tmp_127_fu_550_p4);

assign sext_ln850_fu_161_p1 = $signed(tmp_s_fu_151_p4);

assign shl_ln1118_63_fu_409_p3 = {{data_2_V_read}, {10'd0}};

assign shl_ln1118_64_fu_542_p3 = {{data_3_V_read}, {10'd0}};

assign shl_ln1118_s_fu_276_p3 = {{data_1_V_read}, {10'd0}};

assign shl_ln_fu_143_p3 = {{data_0_V_read}, {10'd0}};

assign tanh_table7_address0 = zext_ln476_fu_271_p1;

assign tanh_table7_address1 = zext_ln476_64_fu_404_p1;

assign tanh_table7_address2 = zext_ln476_65_fu_537_p1;

assign tanh_table7_address3 = zext_ln476_66_fu_670_p1;

assign tmp_125_fu_284_p4 = {{data_1_V_read[15:3]}};

assign tmp_126_fu_417_p4 = {{data_2_V_read[15:3]}};

assign tmp_127_fu_550_p4 = {{data_3_V_read[15:3]}};

assign tmp_193_fu_227_p3 = add_ln472_fu_215_p2[32'd13];

assign tmp_194_fu_247_p4 = {{select_ln474_fu_235_p3[12:10]}};

assign tmp_195_fu_360_p3 = add_ln472_64_fu_348_p2[32'd13];

assign tmp_196_fu_380_p4 = {{select_ln474_1_fu_368_p3[12:10]}};

assign tmp_197_fu_493_p3 = add_ln472_65_fu_481_p2[32'd13];

assign tmp_198_fu_513_p4 = {{select_ln474_2_fu_501_p3[12:10]}};

assign tmp_199_fu_626_p3 = add_ln472_66_fu_614_p2[32'd13];

assign tmp_200_fu_646_p4 = {{select_ln474_3_fu_634_p3[12:10]}};

assign tmp_s_fu_151_p4 = {{data_0_V_read[15:3]}};

assign trunc_ln472_64_fu_344_p1 = select_ln850_64_fu_336_p3[12:0];

assign trunc_ln472_65_fu_477_p1 = select_ln850_65_fu_469_p3[12:0];

assign trunc_ln472_66_fu_610_p1 = select_ln850_66_fu_602_p3[12:0];

assign trunc_ln472_fu_211_p1 = select_ln850_fu_203_p3[12:0];

assign trunc_ln474_64_fu_376_p1 = select_ln474_1_fu_368_p3[9:0];

assign trunc_ln474_65_fu_509_p1 = select_ln474_2_fu_501_p3[9:0];

assign trunc_ln474_66_fu_642_p1 = select_ln474_3_fu_634_p3[9:0];

assign trunc_ln474_fu_243_p1 = select_ln474_fu_235_p3[9:0];

assign trunc_ln851_64_fu_304_p1 = data_1_V_read[2:0];

assign trunc_ln851_65_fu_437_p1 = data_2_V_read[2:0];

assign trunc_ln851_66_fu_570_p1 = data_3_V_read[2:0];

assign trunc_ln851_fu_171_p1 = data_0_V_read[2:0];

assign zext_ln476_64_fu_404_p1 = select_ln475_1_fu_396_p3;

assign zext_ln476_65_fu_537_p1 = select_ln475_2_fu_529_p3;

assign zext_ln476_66_fu_670_p1 = select_ln475_3_fu_662_p3;

assign zext_ln476_fu_271_p1 = select_ln475_fu_263_p3;

endmodule //tanh_ap_fixed_ap_fixed_16_6_5_3_0_tanh_config2_s
